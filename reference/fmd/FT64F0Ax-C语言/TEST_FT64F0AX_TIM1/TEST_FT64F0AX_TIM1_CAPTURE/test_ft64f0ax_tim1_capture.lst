

GNU Macro Assembler for 8 bit devices.       
                                                                                               Wed Oct 13 13:19:56 2021

GNU C Code Generator                                                 
     1                           	processor	FT64F0AX
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	intentry,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 
    15                           ; 
    16                           ; SFR Addresses
    17  0000                     
    18                           	psect	intentry
    19  0004                     __pintentry:	
    20  000E                     _PORTC	set	14
    21  000D                     _PORTB	set	13
    22  000C                     _PORTA	set	12
    23  000B                     _INTCON	set	11
    24  006C                     _PB4	set	108
    25  006B                     _PB3	set	107
    26  009A                     _PCKEN	set	154
    27  0099                     _OSCCON	set	153
    28  0095                     _CKOCON	set	149
    29  008E                     _TRISC	set	142
    30  008D                     _TRISB	set	141
    31  008C                     _TRISA	set	140
    32  011C                     _PSRC2	set	284
    33  011B                     _PSRC1	set	283
    34  011A                     _PSRC0	set	282
    35  0117                     _TIM4ARR	set	279
    36  0116                     _TIM4PSCR	set	278
    37  0115                     _TIM4CNTR	set	277
    38  0114                     _TIM4EGR	set	276
    39  0113                     _TIM4SR	set	275
    40  0112                     _TIM4IER	set	274
    41  0111                     _TIM4CR1	set	273
    42  0898                     _T4UIF	set	2200
    43  0890                     _T4UIE	set	2192
    44  019C                     _PSINK2	set	412
    45  019B                     _PSINK1	set	411
    46  019A                     _PSINK0	set	410
    47  0197                     _ANSELA	set	407
    48  018E                     _WPUC	set	398
    49  018D                     _WPUB	set	397
    50  018C                     _WPUA	set	396
    51  021E                     _TIM1CCER2	set	542
    52  021D                     _TIM1CCER1	set	541
    53  0219                     _TIM1CCMR1	set	537
    54  0218                     _TIM1EGR	set	536
    55  0217                     _TIM1SR2	set	535
    56  0216                     _TIM1SR1	set	534
    57  0215                     _TIM1IER	set	533
    58  0214                     _TIM1ETR	set	532
    59  0213                     _TIM1SMCR	set	531
    60  0212                     _TIM1CR2	set	530
    61  0211                     _TIM1CR1	set	529
    62  020E                     _WPDC	set	526
    63  020D                     _WPDB	set	525
    64  020C                     _WPDA	set	524
    65  10B9                     _T1CC1OF	set	4281
    66  10B1                     _T1CC1IF	set	4273
    67  10A9                     _T1CC1IE	set	4265
    68  1088                     _T1CEN	set	4232
    69  0294                     _TIM1CCR1L	set	660
    70  0293                     _TIM1CCR1H	set	659
    71  028F                     _TIM1PSCRL	set	655
    72  028E                     _TIM1PSCRH	set	654
    73  028D                     _TIM1CNTRL	set	653
    74  028C                     _TIM1CNTRH	set	652
    75  031F                     _TCKSRC	set	799
    76                           
    77 ;; *************** function _ISR *****************
    78 ;; Defined at:
    79 ;;		line 45 in file "TEST_FT64F0AX_TIM1_CAPTURE.C"
    80 ;; Parameters:    Size  Location     Type
    81 ;;		None
    82 ;; Auto vars:     Size  Location     Type
    83 ;;		None
    84 ;; Return value:  Size  Location     Type
    85 ;;                  1    wreg      void 
    86 ;; Registers used:
    87 ;;		wreg, fsr1l, fsr1h, status,2, status,0
    88 ;; Tracked objects:
    89 ;;		On entry : 0/0
    90 ;;		On exit  : 0/0
    91 ;;		Unchanged: 0/0
    92 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
    93 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    94 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    95 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    96 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    97 ;;Total ram usage:        0 bytes
    98 ;; Hardware stack levels used:    1
    99 ;; This function calls:
   100 ;;		Nothing
   101 ;; This function is called by:
   102 ;;		Interrupt level 1
   103 ;; This function uses a non-reentrant model
   104 ;;
   105  0004                     _ISR:	
   106                           
   107                           ;incstack = 0
   108  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   109                           
   110                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
   111  0005  3180               	pagesel	$
   112                           
   113                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 48: if(T4UIE&&T4UIF)
   114  0006  0022               	movlb	2	; select bank2
   115  0007  1812               	btfsc	18,0	;volatile
   116  0008  1C13               	btfss	19,0	;volatile
   117  0009  280E               	goto	i1l2605
   118                           
   119                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 49: {
   120                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 50: T4UIF=1;
   121  000A  1413               	bsf	19,0	;volatile
   122                           
   123                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 51: PB3=~PB3;
   124  000B  3008               	movlw	8
   125  000C  0020               	movlb	0	; select bank0
   126  000D  068D               	xorwf	13,f
   127  000E                     i1l2605:	
   128                           
   129                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 52: }
   130                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 54: if(T1CC1IE&&T1CC1IF)
   131  000E  0024               	movlb	4	; select bank4
   132  000F  1895               	btfsc	21,1	;volatile
   133  0010  1C96               	btfss	22,1	;volatile
   134  0011  2839               	goto	i1l2126
   135                           
   136                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 55: {
   137                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 56: T1CC1IF=1;
   138  0012  1496               	bsf	22,1	;volatile
   139                           
   140                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 57: TIM1CNTRH=0X00;
   141  0013  0025               	movlb	5	; select bank5
   142  0014  018C               	clrf	12	;volatile
   143                           
   144                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 58: TIM1CNTRL=0X00;
   145  0015  018D               	clrf	13	;volatile
   146                           
   147                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 59: T1CC1OF=0;
   148  0016  0024               	movlb	4	; select bank4
   149  0017  1097               	bcf	23,1	;volatile
   150                           
   151                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 60: PB4=~PB4;
   152  0018  3010               	movlw	16
   153  0019  0020               	movlb	0	; select bank0
   154  001A  068D               	xorwf	13,f
   155                           
   156                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 61: dataH=TIM1CCR1H;
   157  001B  0025               	movlb	5	; select bank5
   158  001C  0813               	movf	19,w	;volatile
   159  001D  00F3               	movwf	_dataH	;volatile
   160                           
   161                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 62: dataL=TIM1CCR1L;
   162  001E  0814               	movf	20,w	;volatile
   163  001F  00F2               	movwf	_dataL	;volatile
   164                           
   165                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 63: testdata[y++]=(unsigned int)(dataH<<8|dataL);
   166  0020  3574               	lslf	_y,w	;volatile
   167  0021  3E20               	addlw	(low (_testdata| 0))& (0+255)
   168  0022  0086               	movwf	6
   169  0023  0187               	clrf	7
   170  0024  0872               	movf	_dataL,w	;volatile
   171  0025  3FC0               	movwi [0]fsr1
   172  0026  0873               	movf	_dataH,w	;volatile
   173  0027  3FC1               	movwi [1]fsr1
   174  0028  0AF4               	incf	_y,f	;volatile
   175                           
   176                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 64: __nop();
   177  0029  0000               	nop
   178                           
   179                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 66: if(y>=20)
   180  002A  3014               	movlw	20
   181  002B  0274               	subwf	_y,w	;volatile
   182  002C  1C03               	skipc
   183  002D  2839               	goto	i1l2126
   184                           
   185                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 67: {
   186                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 68: y=0;
   187  002E  01F4               	clrf	_y	;volatile
   188                           
   189                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 71: period=testdata[1]/32;
   190  002F  0020               	movlb	0	; select bank0
   191  0030  0823               	movf	_testdata+3,w	;volatile
   192  0031  00F1               	movwf	_period+1	;volatile
   193  0032  0822               	movf	_testdata+2,w	;volatile
   194  0033  00F0               	movwf	_period	;volatile
   195  0034  3005               	movlw	5
   196  0035                     u6_25:	
   197  0035  36F1               	lsrf	_period+1,f	;volatile
   198  0036  0CF0               	rrf	_period,f	;volatile
   199  0037  0B89               	decfsz	9,f
   200  0038  2835               	goto	u6_25
   201  0039                     i1l2126:	
   202  0039  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   203  003A  0009               	retfie
   204  003B                     __end_of_ISR:	
   205  007E                     btemp	set	126	;btemp
   206  007E                     int$flags	set	126
   207  007E                     wtemp0	set	126
   208                           
   209                           	psect	cinit
   210  003D                     start_initialization:	
   211                           ; #config settings
   212                           
   213  003D                     __initialization:	
   214  003D  3020               	movlw	low __pbssBANK0
   215                           
   216                           ; Clear objects allocated to COMMON
   217  003E  01F0               	clrf	__pbssCOMMON& (0+127)
   218  003F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   219  0040  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   220  0041  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   221  0042  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   222                           
   223                           ; Clear objects allocated to BANK0
   224  0043  0084               	movwf	4
   225  0044  3000               	movlw	high __pbssBANK0
   226  0045  0085               	movwf	5
   227  0046  3028               	movlw	40
   228  0047  3180  20AA  3180   	fcall	clear_ram0
   229  004A                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232  004A                     __end_of__initialization:	
   233  004A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   234  004B  0020               	movlb	0
   235  004C  284D               	ljmp	_main	;jump to C main() function
   236  004D                     __pmaintext:	
   237                           ; 1 bytes @ 0x0
   238 ;;
   239 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   240 ;;
   241 ;; *************** function _main *****************
   242 ;; Defined at:
   243 ;;		line 173 in file "TEST_FT64F0AX_TIM1_CAPTURE.C"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;		None
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, status,0, pclath, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : B1F/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   261 ;;Total ram usage:        0 bytes
   262 ;; Hardware stack levels required when called:    2
   263 ;; This function calls:
   264 ;;		_POWER_INITIAL
   265 ;;		_TIM1_INITIAL
   266 ;;		_TIM4_INITIAL
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           
   273                           ;psect for function _main
   274  004D                     _main:	
   275                           
   276                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 175: POWER_INITIAL();
   277                           
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   280  004D  2055  3180         	fcall	_POWER_INITIAL
   281                           
   282                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 176: TIM1_INITIAL();
   283  004F  2078  3180         	fcall	_TIM1_INITIAL
   284                           
   285                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 177: TIM4_INITIAL();
   286  0051  2099  3180         	fcall	_TIM4_INITIAL
   287  0053                     l2637:	
   288                           
   289                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 180: {
   290                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 181: __nop();
   291  0053  0000               	nop
   292  0054  2853               	goto	l2637
   293  0055                     __end_of_main:	
   294  0055                     __ptext3:	
   295 ;; *************** function _POWER_INITIAL *****************
   296 ;; Defined at:
   297 ;;		line 81 in file "TEST_FT64F0AX_TIM1_CAPTURE.C"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2
   306 ;; Tracked objects:
   307 ;;		On entry : B1F/0
   308 ;;		On exit  : B1F/3
   309 ;;		Unchanged: B00/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _POWER_INITIAL
   327  0055                     _POWER_INITIAL:	
   328                           
   329                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 83: OSCCON=0B01110001;
   330                           
   331                           ;incstack = 0
   332                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   333  0055  3071               	movlw	113
   334  0056  0021               	movlb	1	; select bank1
   335  0057  0099               	movwf	25	;volatile
   336                           
   337                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 84: INTCON=0;
   338  0058  018B               	clrf	11	;volatile
   339                           
   340                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 86: PORTA=0B00000000;
   341  0059  0020               	movlb	0	; select bank0
   342  005A  018C               	clrf	12	;volatile
   343                           
   344                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 87: PORTB=0B00000000;
   345  005B  018D               	clrf	13	;volatile
   346                           
   347                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 88: PORTC=0B00000000;
   348  005C  018E               	clrf	14	;volatile
   349                           
   350                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 90: WPUA=0B00000000;
   351  005D  0023               	movlb	3	; select bank3
   352  005E  018C               	clrf	12	;volatile
   353                           
   354                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 91: WPUB=0B00000000;
   355  005F  018D               	clrf	13	;volatile
   356                           
   357                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 92: WPUC=0B00000000;
   358  0060  018E               	clrf	14	;volatile
   359                           
   360                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 94: WPDA=0B00000000;
   361  0061  0024               	movlb	4	; select bank4
   362  0062  018C               	clrf	12	;volatile
   363                           
   364                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 95: WPDB=0B00000000;
   365  0063  018D               	clrf	13	;volatile
   366                           
   367                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 96: WPDC=0B00000000;
   368  0064  018E               	clrf	14	;volatile
   369                           
   370                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 98: TRISA=0B00000001;
   371  0065  3001               	movlw	1
   372  0066  0021               	movlb	1	; select bank1
   373  0067  008C               	movwf	12	;volatile
   374                           
   375                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 99: TRISB=0B00000000;
   376  0068  018D               	clrf	13	;volatile
   377                           
   378                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 100: TRISC=0B00000000;
   379  0069  018E               	clrf	14	;volatile
   380                           
   381                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 102: PSRC0=0B11111111;
   382  006A  30FF               	movlw	255
   383  006B  0022               	movlb	2	; select bank2
   384  006C  009A               	movwf	26	;volatile
   385                           
   386                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 103: PSRC1=0B11111111;
   387  006D  009B               	movwf	27	;volatile
   388                           
   389                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 104: PSRC2=0B00001111;
   390  006E  300F               	movlw	15
   391  006F  009C               	movwf	28	;volatile
   392                           
   393                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 106: PSINK0=0B11111111;
   394  0070  30FF               	movlw	255
   395  0071  0023               	movlb	3	; select bank3
   396  0072  009A               	movwf	26	;volatile
   397                           
   398                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 107: PSINK1=0B11111111;
   399  0073  009B               	movwf	27	;volatile
   400                           
   401                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 108: PSINK2=0B00000011;
   402  0074  3003               	movlw	3
   403  0075  009C               	movwf	28	;volatile
   404                           
   405                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 110: ANSELA=0B00000000;
   406  0076  0197               	clrf	23	;volatile
   407  0077  0008               	return
   408  0078                     __end_of_POWER_INITIAL:	
   409  0078                     __ptext2:	
   410 ;; *************** function _TIM1_INITIAL *****************
   411 ;; Defined at:
   412 ;;		line 135 in file "TEST_FT64F0AX_TIM1_CAPTURE.C"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2
   421 ;; Tracked objects:
   422 ;;		On entry : B1F/3
   423 ;;		On exit  : B1F/4
   424 ;;		Unchanged: B00/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; Hardware stack levels required when called:    1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _TIM1_INITIAL
   442  0078                     _TIM1_INITIAL:	
   443                           
   444                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 137: PCKEN|=0B00000010;
   445                           
   446                           ;incstack = 0
   447                           ; Regs used in _TIM1_INITIAL: [wreg+status,2]
   448  0078  0021               	movlb	1	; select bank1
   449  0079  149A               	bsf	26,1	;volatile
   450                           
   451                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 138: CKOCON=0B00100000;
   452  007A  3020               	movlw	32
   453  007B  0095               	movwf	21	;volatile
   454                           
   455                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 139: TCKSRC=0B00000011;
   456  007C  3003               	movlw	3
   457  007D  0026               	movlb	6	; select bank6
   458  007E  009F               	movwf	31	;volatile
   459                           
   460                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 141: TIM1CR1=0B00000110;
   461  007F  3006               	movlw	6
   462  0080  0024               	movlb	4	; select bank4
   463  0081  0091               	movwf	17	;volatile
   464                           
   465                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 142: TIM1CR2=0B00000000;
   466  0082  0192               	clrf	18	;volatile
   467                           
   468                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 144: TIM1SMCR=0B01010000;
   469  0083  3050               	movlw	80
   470  0084  0093               	movwf	19	;volatile
   471                           
   472                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 145: TIM1SMCR=0B00000100;
   473  0085  3004               	movlw	4
   474  0086  0093               	movwf	19	;volatile
   475                           
   476                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 146: TIM1ETR=0B00000000;
   477  0087  0194               	clrf	20	;volatile
   478                           
   479                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 147: TIM1IER=0B00000010;
   480  0088  3002               	movlw	2
   481  0089  0095               	movwf	21	;volatile
   482                           
   483                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 149: TIM1SR1=0B00000000;
   484  008A  0196               	clrf	22	;volatile
   485                           
   486                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 150: TIM1SR2=0B00000000;
   487  008B  0197               	clrf	23	;volatile
   488                           
   489                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 152: TIM1EGR=0B00000000;
   490  008C  0198               	clrf	24	;volatile
   491                           
   492                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 154: TIM1CCMR1=0B00000001;
   493  008D  3001               	movlw	1
   494  008E  0099               	movwf	25	;volatile
   495                           
   496                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 156: TIM1CCER1=0B00000001;
   497  008F  009D               	movwf	29	;volatile
   498                           
   499                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 157: TIM1CCER2=0B00000000;
   500  0090  019E               	clrf	30	;volatile
   501                           
   502                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 159: TIM1CNTRH=0B00000000;
   503  0091  0025               	movlb	5	; select bank5
   504  0092  018C               	clrf	12	;volatile
   505                           
   506                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 160: TIM1CNTRL=0B00000000;
   507  0093  018D               	clrf	13	;volatile
   508                           
   509                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 162: TIM1PSCRH=0B00000000;
   510  0094  018E               	clrf	14	;volatile
   511                           
   512                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 163: TIM1PSCRL=0B00000000;
   513  0095  018F               	clrf	15	;volatile
   514                           
   515                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 165: T1CEN=1;
   516  0096  0024               	movlb	4	; select bank4
   517  0097  1411               	bsf	17,0	;volatile
   518  0098  0008               	return
   519  0099                     __end_of_TIM1_INITIAL:	
   520  0099                     __ptext1:	
   521 ;; *************** function _TIM4_INITIAL *****************
   522 ;; Defined at:
   523 ;;		line 117 in file "TEST_FT64F0AX_TIM1_CAPTURE.C"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0
   532 ;; Tracked objects:
   533 ;;		On entry : B1F/4
   534 ;;		On exit  : B1F/2
   535 ;;		Unchanged: B00/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   541 ;;Total ram usage:        0 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           
   552                           ;psect for function _TIM4_INITIAL
   553  0099                     _TIM4_INITIAL:	
   554                           
   555                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 119: PCKEN|=0B00001000;
   556                           
   557                           ;incstack = 0
   558                           ; Regs used in _TIM4_INITIAL: [wreg+status,2+status,0]
   559  0099  0021               	movlb	1	; select bank1
   560  009A  159A               	bsf	26,3	;volatile
   561                           
   562                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 120: TIM4CR1=0B00000101;
   563  009B  3005               	movlw	5
   564  009C  0022               	movlb	2	; select bank2
   565  009D  0091               	movwf	17	;volatile
   566                           
   567                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 121: TIM4IER=0B00000001;
   568  009E  3001               	movlw	1
   569  009F  0092               	movwf	18	;volatile
   570                           
   571                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 122: TIM4SR=0B00000000;
   572  00A0  0193               	clrf	19	;volatile
   573                           
   574                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 123: TIM4EGR=0B00000000;
   575  00A1  0194               	clrf	20	;volatile
   576                           
   577                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 124: TIM4CNTR=0;
   578  00A2  0195               	clrf	21	;volatile
   579                           
   580                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 125: TIM4PSCR=0B00000100;
   581  00A3  3004               	movlw	4
   582  00A4  0096               	movwf	22	;volatile
   583                           
   584                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 126: TIM4ARR=124;
   585  00A5  307C               	movlw	124
   586  00A6  0097               	movwf	23	;volatile
   587                           
   588                           ;TEST_FT64F0AX_TIM1_CAPTURE.C: 127: INTCON|=0B11000000;
   589  00A7  30C0               	movlw	192
   590  00A8  048B               	iorwf	11,f	;volatile
   591  00A9  0008               	return
   592  00AA                     __end_of_TIM4_INITIAL:	
   593                           
   594                           	psect	bssCOMMON
   595  0070                     __pbssCOMMON:	
   596  0070                     _period:	
   597  0070                     	ds	2
   598  0072                     _dataL:	
   599  0072                     	ds	1
   600  0073                     _dataH:	
   601  0073                     	ds	1
   602  0074                     _y:	
   603  0074                     	ds	1
   604                           
   605                           	psect	bssBANK0
   606  0020                     __pbssBANK0:	
   607  0020                     _testdata:	
   608  0020                     	ds	40
   609                           
   610                           	psect	clrtext
   611  00AA                     clear_ram0:	
   612                           ;	Called with FSR0 containing the base address, and
   613                           ;	WREG with the size to clear
   614                           
   615  00AA  0064               	clrwdt	;clear the watchdog before getting into this loop
   616  00AB                     clrloop0:	
   617  00AB  0180               	clrf	0	;clear RAM location pointed to by FSR
   618  00AC  3101               	addfsr 0,1
   619  00AD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   620  00AE  28AB               	goto	clrloop0	;have we reached the end yet?
   621  00AF  3400               	retlw	0	;all done for this memory range, return
   622                           
   623                           	psect	cstackCOMMON
   624  0000                     __pcstackCOMMON:	
   625  0000                     ?_ISR:	
   626  0000                     ??_ISR:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0000                     ?_POWER_INITIAL:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0000                     ??_POWER_INITIAL:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0000                     ?_TIM4_INITIAL:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0000                     ??_TIM4_INITIAL:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0000                     ?_TIM1_INITIAL:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0000                     ??_TIM1_INITIAL:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0000                     ?_main:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0000                     ??_main:	
   651                           ; 1 bytes @ 0x0
   652                           


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       5
    BANK0            80      0      40
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _POWER_INITIAL
                       _TIM1_INITIAL
                       _TIM4_INITIAL
 ---------------------------------------------------------------------------------
 (1) _TIM4_INITIAL                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIM1_INITIAL                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POWER_INITIAL
   _TIM1_INITIAL
   _TIM4_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      0       5       2       35.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      28       5       50.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      2D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      2D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Wed Oct 13 13:19:56 2021

                      _y 0074                      _PB3 006B                      _PB4 006C  
                    _ISR 0004                      wreg 0009                     ?_ISR 0000  
                   l2637 0053                     _WPDA 020C                     _WPDB 020D  
                   _WPDC 020E                     _WPUA 018C                     _WPUB 018D  
                   _WPUC 018E                     u6_25 0035                     _main 004D  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 003B                    ??_ISR 0000                    ?_main 0000  
                  _T1CEN 1088                    _T4UIE 0890                    _T4UIF 0898  
                  _PCKEN 009A                    _PSRC0 011A                    _PSRC1 011B  
                  _PSRC2 011C                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _dataH 0073                    _dataL 0072  
                  wtemp0 007E          __initialization 003D             __end_of_main 0055  
                 ??_main 0000                   _CKOCON 0095                   _ANSELA 0197  
                 i1l2126 0039                   i1l2605 000E                   _INTCON 000B  
                 _OSCCON 0099                   _TCKSRC 031F                   _TIM4SR 0113  
                 _PSINK0 019A                   _PSINK1 019B                   _PSINK2 019C  
                 _period 0070    __end_of_POWER_INITIAL 0078  __end_of__initialization 004A  
          ?_TIM1_INITIAL 0000           __pcstackCOMMON 0000            ?_TIM4_INITIAL 0000  
             __pbssBANK0 0020           ??_TIM1_INITIAL 0000               __pmaintext 004D  
         ??_TIM4_INITIAL 0000               __pintentry 0004                  _T1CC1IE 10A9  
                _T1CC1IF 10B1                  _T1CC1OF 10B9                  _TIM1CR1 0211  
                _TIM1CR2 0212                  _TIM1EGR 0218                  _TIM4CR1 0111  
                _TIM1IER 0215                  _TIM4EGR 0114                  _TIM1ETR 0214  
                _TIM4ARR 0117                  _TIM4IER 0112                  _TIM1SR1 0216  
                _TIM1SR2 0217                  __ptext1 0099                  __ptext2 0078  
                __ptext3 0055             __size_of_ISR 0037                  clrloop0 00AB  
   end_of_initialization 004A                _TIM1CCER1 021D                _TIM1CCER2 021E  
              _TIM1CCR1H 0293                _TIM1CCR1L 0294                _TIM1CCMR1 0219  
              _TIM1CNTRH 028C                _TIM1CNTRL 028D                _TIM1PSCRH 028E  
              _TIM1PSCRL 028F     __end_of_TIM1_INITIAL 0099     __end_of_TIM4_INITIAL 00AA  
    start_initialization 003D              __end_of_ISR 003B   __size_of_POWER_INITIAL 0023  
            __pbssCOMMON 0070                ___latbits 0003    __size_of_TIM1_INITIAL 0021  
  __size_of_TIM4_INITIAL 0011            _POWER_INITIAL 0055                clear_ram0 00AA  
           _TIM1_INITIAL 0078                 _TIM4CNTR 0115                 _TIM1SMCR 0213  
               _TIM4PSCR 0116             _TIM4_INITIAL 0099           ?_POWER_INITIAL 0000  
          __size_of_main 0008                 _testdata 0020                 int$flags 007E  
        ??_POWER_INITIAL 0000                 intlevel1 0000  
