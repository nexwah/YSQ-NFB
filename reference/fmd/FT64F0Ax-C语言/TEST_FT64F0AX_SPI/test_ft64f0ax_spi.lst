

GNU Macro Assembler for 8 bit devices.       
                                                                                               Wed Nov 17 11:41:20 2021

GNU C Code Generator                                                 
     1                           	processor	FT64F0AX
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	pa_nodes0,global,class=CODE,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 
    13                           ; 
    14                           ; SFR Addresses
    15  0000                     
    16                           	psect	text0
    17  0000                     __ptext0:	
    18  001E                     _SPISTAT	set	30
    19  001D                     _SPICTRL2	set	29
    20  001C                     _SPIIER	set	28
    21  001B                     _SPITXCRC	set	27
    22  001A                     _SPIRXCRC	set	26
    23  0018                     _SPISCR	set	24
    24  0017                     _SPICFG	set	23
    25  0016                     _SPICTRL	set	22
    26  0015                     _SPIDATA	set	21
    27  000E                     _PORTC	set	14
    28  000D                     _PORTB	set	13
    29  000C                     _PORTA	set	12
    30  000B                     _INTCON	set	11
    31  00F4                     _SBUSY	set	244
    32  00B8                     _RXBMT	set	184
    33  00B2                     _NSSM0	set	178
    34  00B0                     _SPIEN	set	176
    35  009A                     _PCKEN	set	154
    36  0099                     _OSCCON	set	153
    37  008E                     _TRISC	set	142
    38  008D                     _TRISB	set	141
    39  008C                     _TRISA	set	140
    40  011C                     _PSRC2	set	284
    41  011B                     _PSRC1	set	283
    42  011A                     _PSRC0	set	282
    43  019C                     _PSINK2	set	412
    44  019B                     _PSINK1	set	411
    45  019A                     _PSINK0	set	410
    46  0197                     _ANSELA	set	407
    47  018E                     _WPUC	set	398
    48  018D                     _WPUB	set	397
    49  018C                     _WPUA	set	396
    50  020E                     _WPDC	set	526
    51  020D                     _WPDB	set	525
    52  020C                     _WPDA	set	524
    53                           
    54                           	psect	cinit
    55  0758                     start_initialization:	
    56                           ; #config settings
    57                           
    58  0758                     __initialization:	
    59                           
    60                           ; Clear objects allocated to COMMON
    61  0758  01F6               	clrf	__pbssCOMMON& (0+127)
    62  0759  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    63  075A                     end_of_initialization:	
    64                           ;End of C runtime variable initialization code
    65                           
    66  075A                     __end_of__initialization:	
    67  075A  0020               	movlb	0
    68  075B  2F5C               	ljmp	_main	;jump to C main() function
    69  075C                     __pmaintext:	
    70                           ; 1 bytes @ 0x6
    71 ;;
    72 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    73 ;;
    74 ;; *************** function _main *****************
    75 ;; Defined at:
    76 ;;		line 199 in file "TEST_FT64F0AX_SPI.C"
    77 ;; Parameters:    Size  Location     Type
    78 ;;		None
    79 ;; Auto vars:     Size  Location     Type
    80 ;;		None
    81 ;; Return value:  Size  Location     Type
    82 ;;                  1    wreg      void 
    83 ;; Registers used:
    84 ;;		wreg, status,2, status,0, pclath, cstack
    85 ;; Tracked objects:
    86 ;;		On entry : B1F/0
    87 ;;		On exit  : 0/0
    88 ;;		Unchanged: 0/0
    89 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
    90 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    91 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    92 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    93 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    94 ;;Total ram usage:        0 bytes
    95 ;; Hardware stack levels required when called:    3
    96 ;; This function calls:
    97 ;;		_POWER_INITIAL
    98 ;;		_SPI_INITIAL
    99 ;;		_SPI_Read
   100 ;;		_SPI_Write
   101 ;; This function is called by:
   102 ;;		Startup code after reset
   103 ;; This function uses a non-reentrant model
   104 ;;
   105                           
   106                           
   107                           ;psect for function _main
   108  075C                     _main:	
   109                           
   110                           ;TEST_FT64F0AX_SPI.C: 201: SPIReadData=0;
   111                           
   112                           ;incstack = 0
   113                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   114  075C  01F7               	clrf	_SPIReadData	;volatile
   115                           
   116                           ;TEST_FT64F0AX_SPI.C: 202: SPIReadData1=0;
   117  075D  01F6               	clrf	_SPIReadData1	;volatile
   118                           
   119                           ;TEST_FT64F0AX_SPI.C: 203: POWER_INITIAL();
   120  075E  27C4  3187         	fcall	_POWER_INITIAL
   121                           
   122                           ;TEST_FT64F0AX_SPI.C: 204: SPI_INITIAL();
   123  0760  27E7  3187         	fcall	_SPI_INITIAL
   124                           
   125                           ;TEST_FT64F0AX_SPI.C: 206: SPI_Write(0x13,0x55);
   126  0762  3013               	movlw	19
   127  0763  00F3               	movwf	SPI_Write@addr
   128  0764  3055               	movlw	85
   129  0765  01F4               	clrf	SPI_Write@addr+1
   130  0766  00F5               	movwf	SPI_Write@dat
   131  0767  2793  3187         	fcall	_SPI_Write
   132                           
   133                           ;TEST_FT64F0AX_SPI.C: 207: SPI_Write(0x14,0x88);
   134  0769  3014               	movlw	20
   135  076A  00F3               	movwf	SPI_Write@addr
   136  076B  3088               	movlw	136
   137  076C  01F4               	clrf	SPI_Write@addr+1
   138  076D  00F5               	movwf	SPI_Write@dat
   139  076E  2793  3187         	fcall	_SPI_Write
   140                           
   141                           ;TEST_FT64F0AX_SPI.C: 209: SPIReadData=SPI_Read(0x13);
   142  0770  3013               	movlw	19
   143  0771  00F3               	movwf	SPI_Read@addr
   144  0772  01F4               	clrf	SPI_Read@addr+1
   145  0773  277F  3187         	fcall	_SPI_Read
   146  0775  00F7               	movwf	_SPIReadData	;volatile
   147                           
   148                           ;TEST_FT64F0AX_SPI.C: 210: __nop();
   149  0776  0000               	nop
   150                           
   151                           ;TEST_FT64F0AX_SPI.C: 211: SPIReadData1=SPI_Read(0x14);
   152  0777  3014               	movlw	20
   153  0778  00F3               	movwf	SPI_Read@addr
   154  0779  01F4               	clrf	SPI_Read@addr+1
   155  077A  277F  3187         	fcall	_SPI_Read
   156  077C  00F6               	movwf	_SPIReadData1	;volatile
   157  077D                     l2710:	
   158                           
   159                           ;TEST_FT64F0AX_SPI.C: 214: {
   160                           ;TEST_FT64F0AX_SPI.C: 215: __nop();
   161  077D  0000               	nop
   162  077E  2F7D               	goto	l2710
   163  077F                     __end_of_main:	
   164  077F                     __ptext4:	
   165 ;; *************** function _SPI_Read *****************
   166 ;; Defined at:
   167 ;;		line 162 in file "TEST_FT64F0AX_SPI.C"
   168 ;; Parameters:    Size  Location     Type
   169 ;;  addr            2    3[COMMON] unsigned int 
   170 ;; Auto vars:     Size  Location     Type
   171 ;;  spidata         1    5[COMMON] unsigned char 
   172 ;; Return value:  Size  Location     Type
   173 ;;                  1    wreg      unsigned char 
   174 ;; Registers used:
   175 ;;		wreg, status,2, status,0, pclath, cstack
   176 ;; Tracked objects:
   177 ;;		On entry : 0/0
   178 ;;		On exit  : 1F/0
   179 ;;		Unchanged: 0/0
   180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   184 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   185 ;;Total ram usage:        3 bytes
   186 ;; Hardware stack levels used:    1
   187 ;; Hardware stack levels required when called:    2
   188 ;; This function calls:
   189 ;;		_SPI_RW
   190 ;;		_SPI_ReadStatus
   191 ;; This function is called by:
   192 ;;		_main
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           
   197                           ;psect for function _SPI_Read
   198  077F                     _SPI_Read:	
   199  077F                     l2670:	
   200                           ;TEST_FT64F0AX_SPI.C: 164: unsigned char spidata;
   201                           ;TEST_FT64F0AX_SPI.C: 165: while(SPI_ReadStatus()&0x01);
   202                           
   203                           ;incstack = 0
   204                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
   205                           
   206  077F  27BA  3187         	fcall	_SPI_ReadStatus
   207  0781  3901               	andlw	1
   208  0782  1D03               	btfss	3,2
   209  0783  2F7F               	goto	l2670
   210                           
   211                           ;TEST_FT64F0AX_SPI.C: 166: NSSM0=0;
   212  0784  1116               	bcf	22,2	;volatile
   213                           
   214                           ;TEST_FT64F0AX_SPI.C: 167: SPI_RW(0X03);
   215  0785  3003               	movlw	3
   216  0786  27B0  3187         	fcall	_SPI_RW
   217                           
   218                           ;TEST_FT64F0AX_SPI.C: 168: SPI_RW((unsigned char)((addr)>>8));
   219  0788  0874               	movf	SPI_Read@addr+1,w
   220  0789  27B0  3187         	fcall	_SPI_RW
   221                           
   222                           ;TEST_FT64F0AX_SPI.C: 169: SPI_RW((unsigned char)addr);
   223  078B  0873               	movf	SPI_Read@addr,w
   224  078C  27B0  3187         	fcall	_SPI_RW
   225                           
   226                           ;TEST_FT64F0AX_SPI.C: 170: spidata=SPI_RW(0X00);
   227  078E  3000               	movlw	0
   228  078F  27B0               	fcall	_SPI_RW
   229  0790  00F5               	movwf	SPI_Read@spidata
   230                           
   231                           ;TEST_FT64F0AX_SPI.C: 171: NSSM0=1;
   232  0791  1516               	bsf	22,2	;volatile
   233                           
   234                           ;TEST_FT64F0AX_SPI.C: 172: return spidata;
   235  0792  0008               	return
   236  0793                     __end_of_SPI_Read:	
   237  0793                     __ptext1:	
   238 ;; *************** function _SPI_Write *****************
   239 ;; Defined at:
   240 ;;		line 179 in file "TEST_FT64F0AX_SPI.C"
   241 ;; Parameters:    Size  Location     Type
   242 ;;  addr            2    3[COMMON] unsigned int 
   243 ;;  dat             1    5[COMMON] unsigned char 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, pclath, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 1F/0
   252 ;;		On exit  : 1F/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   255 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   258 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   259 ;;Total ram usage:        3 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; Hardware stack levels required when called:    2
   262 ;; This function calls:
   263 ;;		_SPI_RW
   264 ;;		_SPI_ReadStatus
   265 ;;		_WriteDisable
   266 ;;		_WriteEnable
   267 ;; This function is called by:
   268 ;;		_main
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           
   273                           ;psect for function _SPI_Write
   274  0793                     _SPI_Write:	
   275  0793                     l2684:	
   276                           ;TEST_FT64F0AX_SPI.C: 181: while(SPI_ReadStatus()&0x01);
   277                           
   278                           ;incstack = 0
   279                           ; Regs used in _SPI_Write: [wreg+status,2+status,0+pclath+cstack]
   280                           
   281  0793  27BA  3187         	fcall	_SPI_ReadStatus
   282  0795  3901               	andlw	1
   283  0796  1D03               	btfss	3,2
   284  0797  2F93               	goto	l2684
   285                           
   286                           ;TEST_FT64F0AX_SPI.C: 182: WriteEnable();
   287  0798  27FB  3187         	fcall	_WriteEnable
   288                           
   289                           ;TEST_FT64F0AX_SPI.C: 183: NSSM0=0;
   290  079A  1116               	bcf	22,2	;volatile
   291                           
   292                           ;TEST_FT64F0AX_SPI.C: 184: SPI_RW(0X02);
   293  079B  3002               	movlw	2
   294  079C  27B0  3187         	fcall	_SPI_RW
   295                           
   296                           ;TEST_FT64F0AX_SPI.C: 185: SPI_RW((unsigned char)((addr)>>8));
   297  079E  0874               	movf	SPI_Write@addr+1,w
   298  079F  27B0  3187         	fcall	_SPI_RW
   299                           
   300                           ;TEST_FT64F0AX_SPI.C: 186: SPI_RW((unsigned char)addr);
   301  07A1  0873               	movf	SPI_Write@addr,w
   302  07A2  27B0  3187         	fcall	_SPI_RW
   303                           
   304                           ;TEST_FT64F0AX_SPI.C: 188: SPI_RW(dat);
   305  07A4  0875               	movf	SPI_Write@dat,w
   306  07A5  27B0  3187         	fcall	_SPI_RW
   307                           
   308                           ;TEST_FT64F0AX_SPI.C: 189: NSSM0=1;
   309  07A7  1516               	bsf	22,2	;volatile
   310                           
   311                           ;TEST_FT64F0AX_SPI.C: 190: WriteDisable();
   312  07A8  27F6  3187         	fcall	_WriteDisable
   313  07AA                     l2692:	
   314                           ;TEST_FT64F0AX_SPI.C: 191: while(SPI_ReadStatus()&0x01);
   315                           
   316  07AA  27BA  3187         	fcall	_SPI_ReadStatus
   317  07AC  3901               	andlw	1
   318  07AD  1903               	btfsc	3,2
   319  07AE  0008               	return
   320  07AF  2FAA               	goto	l2692
   321  07B0                     __end_of_SPI_Write:	
   322  07B0                     __ptext6:	
   323 ;; *************** function _SPI_RW *****************
   324 ;; Defined at:
   325 ;;		line 98 in file "TEST_FT64F0AX_SPI.C"
   326 ;; Parameters:    Size  Location     Type
   327 ;;  data            1    wreg     unsigned char 
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  data            1    0[COMMON] unsigned char 
   330 ;;  spiData         1    1[COMMON] unsigned char 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      unsigned char 
   333 ;; Registers used:
   334 ;;		wreg
   335 ;; Tracked objects:
   336 ;;		On entry : 1F/0
   337 ;;		On exit  : 1F/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   344 ;;Total ram usage:        2 bytes
   345 ;; Hardware stack levels used:    1
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_WriteEnable
   350 ;;		_WriteDisable
   351 ;;		_SPI_ReadStatus
   352 ;;		_SPI_Read
   353 ;;		_SPI_Write
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           
   358                           ;psect for function _SPI_RW
   359  07B0                     _SPI_RW:	
   360                           
   361                           ;incstack = 0
   362                           ; Regs used in _SPI_RW: [wreg]
   363                           ;SPI_RW@data stored from wreg
   364  07B0  00F0               	movwf	SPI_RW@data
   365  07B1                     l2121:	
   366                           ;TEST_FT64F0AX_SPI.C: 100: unsigned char spiData;
   367                           ;TEST_FT64F0AX_SPI.C: 102: while(SBUSY);
   368                           
   369  07B1  1A1E               	btfsc	30,4	;volatile
   370  07B2  2FB1               	goto	l2121
   371                           
   372                           ;TEST_FT64F0AX_SPI.C: 103: SPIDATA=data;
   373  07B3  0870               	movf	SPI_RW@data,w
   374  07B4  0095               	movwf	21	;volatile
   375  07B5                     l2124:	
   376                           ;TEST_FT64F0AX_SPI.C: 104: while(RXBMT);
   377                           
   378  07B5  1817               	btfsc	23,0	;volatile
   379  07B6  2FB5               	goto	l2124
   380                           
   381                           ;TEST_FT64F0AX_SPI.C: 105: spiData=SPIDATA;
   382  07B7  0815               	movf	21,w	;volatile
   383  07B8  00F1               	movwf	SPI_RW@spiData
   384                           
   385                           ;TEST_FT64F0AX_SPI.C: 106: return spiData;
   386  07B9  0008               	return
   387  07BA                     __end_of_SPI_RW:	
   388  07BA                     __ptext5:	
   389 ;; *************** function _SPI_ReadStatus *****************
   390 ;; Defined at:
   391 ;;		line 134 in file "TEST_FT64F0AX_SPI.C"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  status          1    2[COMMON] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      unsigned char 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 1F/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; Hardware stack levels required when called:    1
   412 ;; This function calls:
   413 ;;		_SPI_RW
   414 ;; This function is called by:
   415 ;;		_SPI_Read
   416 ;;		_SPI_Write
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _SPI_ReadStatus
   422  07BA                     _SPI_ReadStatus:	
   423                           
   424                           ;TEST_FT64F0AX_SPI.C: 137: NSSM0=0;
   425                           
   426                           ;incstack = 0
   427                           ; Regs used in _SPI_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
   428  07BA  0020               	movlb	0	; select bank0
   429  07BB  1116               	bcf	22,2	;volatile
   430                           
   431                           ;TEST_FT64F0AX_SPI.C: 138: SPI_RW(0X05);
   432  07BC  3005               	movlw	5
   433  07BD  27B0  3187         	fcall	_SPI_RW
   434                           
   435                           ;TEST_FT64F0AX_SPI.C: 139: status=SPI_RW(0X00);
   436  07BF  3000               	movlw	0
   437  07C0  27B0               	fcall	_SPI_RW
   438  07C1  00F2               	movwf	SPI_ReadStatus@status
   439                           
   440                           ;TEST_FT64F0AX_SPI.C: 140: NSSM0=1;
   441  07C2  1516               	bsf	22,2	;volatile
   442                           
   443                           ;TEST_FT64F0AX_SPI.C: 141: return status;
   444  07C3  0008               	return
   445  07C4                     __end_of_SPI_ReadStatus:	
   446  07C4                     __ptext8:	
   447 ;; *************** function _POWER_INITIAL *****************
   448 ;; Defined at:
   449 ;;		line 40 in file "TEST_FT64F0AX_SPI.C"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2
   458 ;; Tracked objects:
   459 ;;		On entry : B1F/0
   460 ;;		On exit  : B1F/3
   461 ;;		Unchanged: B00/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used:    1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           
   477                           ;psect for function _POWER_INITIAL
   478  07C4                     _POWER_INITIAL:	
   479                           
   480                           ;TEST_FT64F0AX_SPI.C: 42: OSCCON=0B01110001;
   481                           
   482                           ;incstack = 0
   483                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   484  07C4  3071               	movlw	113
   485  07C5  0021               	movlb	1	; select bank1
   486  07C6  0099               	movwf	25	;volatile
   487                           
   488                           ;TEST_FT64F0AX_SPI.C: 44: INTCON=0;
   489  07C7  018B               	clrf	11	;volatile
   490                           
   491                           ;TEST_FT64F0AX_SPI.C: 46: PORTA=0B00000000;
   492  07C8  0020               	movlb	0	; select bank0
   493  07C9  018C               	clrf	12	;volatile
   494                           
   495                           ;TEST_FT64F0AX_SPI.C: 47: PORTB=0B00000000;
   496  07CA  018D               	clrf	13	;volatile
   497                           
   498                           ;TEST_FT64F0AX_SPI.C: 48: PORTC=0B00000000;
   499  07CB  018E               	clrf	14	;volatile
   500                           
   501                           ;TEST_FT64F0AX_SPI.C: 50: WPUA=0B00000010;
   502  07CC  3002               	movlw	2
   503  07CD  0023               	movlb	3	; select bank3
   504  07CE  008C               	movwf	12	;volatile
   505                           
   506                           ;TEST_FT64F0AX_SPI.C: 51: WPUB=0B00000000;
   507  07CF  018D               	clrf	13	;volatile
   508                           
   509                           ;TEST_FT64F0AX_SPI.C: 52: WPUC=0B00000000;
   510  07D0  018E               	clrf	14	;volatile
   511                           
   512                           ;TEST_FT64F0AX_SPI.C: 54: WPDA=0B00000000;
   513  07D1  0024               	movlb	4	; select bank4
   514  07D2  018C               	clrf	12	;volatile
   515                           
   516                           ;TEST_FT64F0AX_SPI.C: 55: WPDB=0B00000000;
   517  07D3  018D               	clrf	13	;volatile
   518                           
   519                           ;TEST_FT64F0AX_SPI.C: 56: WPDC=0B00000000;
   520  07D4  018E               	clrf	14	;volatile
   521                           
   522                           ;TEST_FT64F0AX_SPI.C: 58: TRISA=0B00000010;
   523  07D5  0021               	movlb	1	; select bank1
   524  07D6  008C               	movwf	12	;volatile
   525                           
   526                           ;TEST_FT64F0AX_SPI.C: 59: TRISB=0B00000000;
   527  07D7  018D               	clrf	13	;volatile
   528                           
   529                           ;TEST_FT64F0AX_SPI.C: 60: TRISC=0B00000000;
   530  07D8  018E               	clrf	14	;volatile
   531                           
   532                           ;TEST_FT64F0AX_SPI.C: 62: PSRC0=0B11111111;
   533  07D9  30FF               	movlw	255
   534  07DA  0022               	movlb	2	; select bank2
   535  07DB  009A               	movwf	26	;volatile
   536                           
   537                           ;TEST_FT64F0AX_SPI.C: 63: PSRC1=0B11111111;
   538  07DC  009B               	movwf	27	;volatile
   539                           
   540                           ;TEST_FT64F0AX_SPI.C: 64: PSRC2=0B00001111;
   541  07DD  300F               	movlw	15
   542  07DE  009C               	movwf	28	;volatile
   543                           
   544                           ;TEST_FT64F0AX_SPI.C: 66: PSINK0=0B11111111;
   545  07DF  30FF               	movlw	255
   546  07E0  0023               	movlb	3	; select bank3
   547  07E1  009A               	movwf	26	;volatile
   548                           
   549                           ;TEST_FT64F0AX_SPI.C: 67: PSINK1=0B11111111;
   550  07E2  009B               	movwf	27	;volatile
   551                           
   552                           ;TEST_FT64F0AX_SPI.C: 68: PSINK2=0B00000011;
   553  07E3  3003               	movlw	3
   554  07E4  009C               	movwf	28	;volatile
   555                           
   556                           ;TEST_FT64F0AX_SPI.C: 70: ANSELA=0B00000000;
   557  07E5  0197               	clrf	23	;volatile
   558  07E6  0008               	return
   559  07E7                     __end_of_POWER_INITIAL:	
   560  007E                     btemp	set	126	;btemp
   561  007E                     wtemp0	set	126
   562  07E7                     __ptext7:	
   563 ;; *************** function _SPI_INITIAL *****************
   564 ;; Defined at:
   565 ;;		line 78 in file "TEST_FT64F0AX_SPI.C"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2
   574 ;; Tracked objects:
   575 ;;		On entry : B1F/3
   576 ;;		On exit  : B1F/0
   577 ;;		Unchanged: B00/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _SPI_INITIAL
   594  07E7                     _SPI_INITIAL:	
   595                           
   596                           ;TEST_FT64F0AX_SPI.C: 80: PCKEN|=0B00010000;
   597                           
   598                           ;incstack = 0
   599                           ; Regs used in _SPI_INITIAL: [wreg+status,2]
   600  07E7  0021               	movlb	1	; select bank1
   601  07E8  161A               	bsf	26,4	;volatile
   602                           
   603                           ;TEST_FT64F0AX_SPI.C: 82: SPICTRL=0B00001000;
   604  07E9  3008               	movlw	8
   605  07EA  0020               	movlb	0	; select bank0
   606  07EB  0096               	movwf	22	;volatile
   607                           
   608                           ;TEST_FT64F0AX_SPI.C: 83: SPICFG=0B01000000;
   609  07EC  3040               	movlw	64
   610  07ED  0097               	movwf	23	;volatile
   611                           
   612                           ;TEST_FT64F0AX_SPI.C: 84: SPISCR=0B00000000;
   613  07EE  0198               	clrf	24	;volatile
   614                           
   615                           ;TEST_FT64F0AX_SPI.C: 85: SPIRXCRC=0B00000000;
   616  07EF  019A               	clrf	26	;volatile
   617                           
   618                           ;TEST_FT64F0AX_SPI.C: 86: SPITXCRC=0B00000000;
   619  07F0  019B               	clrf	27	;volatile
   620                           
   621                           ;TEST_FT64F0AX_SPI.C: 87: SPIIER=0B00000000;
   622  07F1  019C               	clrf	28	;volatile
   623                           
   624                           ;TEST_FT64F0AX_SPI.C: 88: SPICTRL2=0B00000000;
   625  07F2  019D               	clrf	29	;volatile
   626                           
   627                           ;TEST_FT64F0AX_SPI.C: 89: SPISTAT=0B00000000;
   628  07F3  019E               	clrf	30	;volatile
   629                           
   630                           ;TEST_FT64F0AX_SPI.C: 90: SPIEN=1;
   631  07F4  1416               	bsf	22,0	;volatile
   632  07F5  0008               	return
   633  07F6                     __end_of_SPI_INITIAL:	
   634  07F6                     __ptext3:	
   635 ;; *************** function _WriteDisable *****************
   636 ;; Defined at:
   637 ;;		line 122 in file "TEST_FT64F0AX_SPI.C"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 1F/0
   648 ;;		On exit  : 1F/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    1
   658 ;; This function calls:
   659 ;;		_SPI_RW
   660 ;; This function is called by:
   661 ;;		_SPI_Write
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _WriteDisable
   667  07F6                     _WriteDisable:	
   668                           
   669                           ;TEST_FT64F0AX_SPI.C: 124: NSSM0=0;
   670                           
   671                           ;incstack = 0
   672                           ; Regs used in _WriteDisable: [wreg+status,2+status,0+pclath+cstack]
   673  07F6  1116               	bcf	22,2	;volatile
   674                           
   675                           ;TEST_FT64F0AX_SPI.C: 125: SPI_RW(0X04);
   676  07F7  3004               	movlw	4
   677  07F8  27B0               	fcall	_SPI_RW
   678                           
   679                           ;TEST_FT64F0AX_SPI.C: 126: NSSM0=1;
   680  07F9  1516               	bsf	22,2	;volatile
   681  07FA  0008               	return
   682  07FB                     __end_of_WriteDisable:	
   683  07FB                     __ptext2:	
   684 ;; *************** function _WriteEnable *****************
   685 ;; Defined at:
   686 ;;		line 112 in file "TEST_FT64F0AX_SPI.C"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, pclath, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 1F/0
   697 ;;		On exit  : 1F/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    1
   707 ;; This function calls:
   708 ;;		_SPI_RW
   709 ;; This function is called by:
   710 ;;		_SPI_Write
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _WriteEnable
   716  07FB                     _WriteEnable:	
   717                           
   718                           ;TEST_FT64F0AX_SPI.C: 114: NSSM0=0;
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _WriteEnable: [wreg+status,2+status,0+pclath+cstack]
   722  07FB  1116               	bcf	22,2	;volatile
   723                           
   724                           ;TEST_FT64F0AX_SPI.C: 115: SPI_RW(0X06);
   725  07FC  3006               	movlw	6
   726  07FD  27B0               	fcall	_SPI_RW
   727                           
   728                           ;TEST_FT64F0AX_SPI.C: 116: NSSM0=1;
   729  07FE  1516               	bsf	22,2	;volatile
   730  07FF  0008               	return
   731  0800                     __end_of_WriteEnable:	
   732                           
   733                           	psect	bssCOMMON
   734  0076                     __pbssCOMMON:	
   735  0076                     _SPIReadData1:	
   736  0076                     	ds	1
   737  0077                     _SPIReadData:	
   738  0077                     	ds	1
   739                           
   740                           	psect	cstackCOMMON
   741  0070                     __pcstackCOMMON:	
   742  0070                     ?_POWER_INITIAL:	
   743  0070                     ??_POWER_INITIAL:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_SPI_INITIAL:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ??_SPI_INITIAL:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_SPI_RW:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ??_SPI_RW:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_WriteEnable:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_WriteDisable:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_SPI_ReadStatus:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_main:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     SPI_RW@data:	
   771                           ; 1 bytes @ 0x0
   772                           
   773                           
   774                           ; 1 bytes @ 0x0
   775  0070                     	ds	1
   776  0071                     SPI_RW@spiData:	
   777                           
   778                           ; 1 bytes @ 0x1
   779  0071                     	ds	1
   780  0072                     ??_WriteEnable:	
   781  0072                     ??_WriteDisable:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0072                     ??_SPI_ReadStatus:	
   785                           ; 1 bytes @ 0x2
   786                           
   787  0072                     SPI_ReadStatus@status:	
   788                           ; 1 bytes @ 0x2
   789                           
   790                           
   791                           ; 1 bytes @ 0x2
   792  0072                     	ds	1
   793  0073                     ?_SPI_Read:	
   794  0073                     ?_SPI_Write:	
   795                           ; 1 bytes @ 0x3
   796                           
   797  0073                     SPI_Read@addr:	
   798                           ; 1 bytes @ 0x3
   799                           
   800  0073                     SPI_Write@addr:	
   801                           ; 2 bytes @ 0x3
   802                           
   803                           
   804                           ; 2 bytes @ 0x3
   805  0073                     	ds	2
   806  0075                     ??_SPI_Read:	
   807  0075                     SPI_Read@spidata:	
   808                           ; 1 bytes @ 0x5
   809                           
   810  0075                     SPI_Write@dat:	
   811                           ; 1 bytes @ 0x5
   812                           
   813                           
   814                           ; 1 bytes @ 0x5
   815  0075                     	ds	1
   816  0076                     ??_SPI_Write:	
   817  0076                     ??_main:	
   818                           ; 1 bytes @ 0x6
   819                           


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Read
    _main->_SPI_Write
    _SPI_Write->_SPI_ReadStatus
    _WriteEnable->_SPI_RW
    _WriteDisable->_SPI_RW
    _SPI_Read->_SPI_ReadStatus
    _SPI_ReadStatus->_SPI_RW

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     603
                      _POWER_INITIAL
                        _SPI_INITIAL
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            3     0      3     374
                                              3 COMMON     3     0      3
                             _SPI_RW
                     _SPI_ReadStatus
                       _WriteDisable
                        _WriteEnable
 ---------------------------------------------------------------------------------
 (2) _WriteEnable                                          0     0      0      30
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (2) _WriteDisable                                         0     0      0      30
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             3     1      2     229
                                              3 COMMON     3     1      2
                             _SPI_RW
                     _SPI_ReadStatus
 ---------------------------------------------------------------------------------
 (2) _SPI_ReadStatus                                       1     1      0      45
                                              2 COMMON     1     1      0
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (3) _SPI_RW                                               2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI_INITIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POWER_INITIAL
   _SPI_INITIAL
   _SPI_Read
     _SPI_RW
     _SPI_ReadStatus
       _SPI_RW
   _SPI_Write
     _SPI_RW
     _SPI_ReadStatus
       _SPI_RW
     _WriteDisable
       _SPI_RW
     _WriteEnable
       _SPI_RW

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Wed Nov 17 11:41:20 2021

   __size_of_WriteEnable 0005    __size_of_WriteDisable 0005                     l2121 07B1  
                   l2124 07B5                     l2710 077D                     l2670 077F  
                   l2692 07AA                     l2684 0793          SPI_Read@spidata 0075  
                   _WPDA 020C                     _WPDB 020D                     _WPDC 020E  
                   _WPUA 018C                     _WPUB 018D                     _WPUC 018E  
                   _main 075C                     btemp 007E                     start 0002  
 __end_of_SPI_ReadStatus 07C4             _WriteDisable 07F6                    ?_main 0070  
                  _PCKEN 009A                    _NSSM0 00B2                    _SBUSY 00F4  
                  _PSRC0 011A                    _PSRC1 011B                    _PSRC2 011C  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _SPIEN 00B0                    _RXBMT 00B8                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E         __end_of_SPI_Read 0793  
                  status 0003                    wtemp0 007E       __size_of_SPI_Write 001D  
        ?_SPI_ReadStatus 0070             SPI_Read@addr 0073          __initialization 0758  
           __end_of_main 077F                   ??_main 0076            SPI_RW@spiData 0071  
                 _ANSELA 0197                   _INTCON 000B                   _OSCCON 0099  
                 _PSINK0 019A                   _PSINK1 019B                   _PSINK2 019C  
                 _SPICFG 0017                   _SPIIER 001C                   _SPISCR 0018  
                 _SPI_RW 07B0             SPI_Write@dat 0075        __end_of_SPI_Write 07B0  
           ?_SPI_INITIAL 0070    __end_of_POWER_INITIAL 07E7  __end_of__initialization 075A  
         __pcstackCOMMON 0070                ?_SPI_Read 0073                  ?_SPI_RW 0070  
             __pmaintext 075C            ??_WriteEnable 0072               ??_SPI_Read 0075  
                _SPIDATA 0015                  _SPICTRL 0016                  _SPISTAT 001E  
       ??_SPI_ReadStatus 0072          __size_of_SPI_RW 000A            SPI_Write@addr 0073  
                __ptext0 0000                  __ptext1 0793                  __ptext2 07FB  
                __ptext3 07F6                  __ptext4 077F                  __ptext5 07BA  
                __ptext6 07B0                  __ptext7 07E7                  __ptext8 07C4  
    __end_of_WriteEnable 0800     __size_of_SPI_INITIAL 000F     end_of_initialization 075A  
              _SPI_Write 0793           __end_of_SPI_RW 07BA              _WriteEnable 07FB  
      __size_of_SPI_Read 0014      start_initialization 0758               ?_SPI_Write 0073  
               ??_SPI_RW 0070            ?_WriteDisable 0070   __size_of_POWER_INITIAL 0023  
            __pbssCOMMON 0076                ___latbits 0003           ??_WriteDisable 0072  
   SPI_ReadStatus@status 0072              ??_SPI_Write 0076            _POWER_INITIAL 07C4  
               _SPICTRL2 001D                 _SPIRXCRC 001A                 _SPITXCRC 001B  
               _SPI_Read 077F            ??_SPI_INITIAL 0070               SPI_RW@data 0070  
         ?_POWER_INITIAL 0070  __size_of_SPI_ReadStatus 000A             ?_WriteEnable 0070  
    __end_of_SPI_INITIAL 07F6     __end_of_WriteDisable 07FB            __size_of_main 0023  
        ??_POWER_INITIAL 0070              _SPI_INITIAL 07E7             _SPIReadData1 0076  
            _SPIReadData 0077           _SPI_ReadStatus 07BA  
