

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Oct 12 17:58:47 2021

GNU C Code Generator                                                 
     1                           	processor	FT64F0AX
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 
    15                           ; 
    16                           ; SFR Addresses
    17  0000                     
    18                           	psect	idataCOMMON
    19  0000                     __pidataCOMMON:	
    20  0014                     _EPIF0	set	20
    21  000E                     _PORTC	set	14
    22  000D                     _PORTB	set	13
    23  000C                     _PORTA	set	12
    24  000B                     _INTCON	set	11
    25  006B                     _PB3	set	107
    26  0063                     _PA3	set	99
    27  005F                     _GIE	set	95
    28  009A                     _PCKEN	set	154
    29  0099                     _OSCCON	set	153
    30  0094                     _EPIE0	set	148
    31  008E                     _TRISC	set	142
    32  008D                     _TRISB	set	141
    33  008C                     _TRISA	set	140
    34  011F                     _ITYPE1	set	287
    35  011E                     _ITYPE0	set	286
    36  011C                     _PSRC2	set	284
    37  011B                     _PSRC1	set	283
    38  011A                     _PSRC0	set	282
    39  0119                     _EPS1	set	281
    40  0118                     _EPS0	set	280
    41  0117                     _TIM4ARR	set	279
    42  0116                     _TIM4PSCR	set	278
    43  0115                     _TIM4CNTR	set	277
    44  0114                     _TIM4EGR	set	276
    45  0113                     _TIM4SR	set	275
    46  0112                     _TIM4IER	set	274
    47  0111                     _TIM4CR1	set	273
    48  0898                     _T4UIF	set	2200
    49  0890                     _T4UIE	set	2192
    50  019C                     _PSINK2	set	412
    51  019B                     _PSINK1	set	411
    52  019A                     _PSINK0	set	410
    53  0197                     _ANSELA	set	407
    54  018E                     _WPUC	set	398
    55  018D                     _WPUB	set	397
    56  018C                     _WPUA	set	396
    57  020E                     _WPDC	set	526
    58  020D                     _WPDB	set	525
    59  020C                     _WPDA	set	524
    60                           
    61                           	psect	cinit
    62  0043                     start_initialization:	
    63                           ; #config settings
    64                           
    65  0043                     __initialization:	
    66                           
    67                           ;initializer for _bitdata
    68  0043  3001               	movlw	1
    69  0044  00F9               	movwf	__pdataCOMMON& (0+127)
    70                           
    71                           ; Clear objects allocated to COMMON
    72  0045  01F0               	clrf	__pbssCOMMON& (0+127)
    73  0046  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    74  0047  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    75  0048  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    76  0049  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    77  004A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    78  004B  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    79  004C  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
    80  004D  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
    81  004E                     end_of_initialization:	
    82                           ;End of C runtime variable initialization code
    83                           
    84  004E                     __end_of__initialization:	
    85  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    86  004F  0020               	movlb	0
    87  0050  2851               	ljmp	_main	;jump to C main() function
    88  0051                     __pmaintext:	
    89                           ; 1 bytes @ 0x0
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 174 in file "TEST_FT64F0AX_IR_Receive.C"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2, status,0, pclath, cstack
   104 ;; Tracked objects:
   105 ;;		On entry : B1F/0
   106 ;;		On exit  : B1F/0
   107 ;;		Unchanged: B00/0
   108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   113 ;;Total ram usage:        0 bytes
   114 ;; Hardware stack levels required when called:    2
   115 ;; This function calls:
   116 ;;		_POWER_INITIAL
   117 ;;		_Px_Level_Change_INITIAL
   118 ;;		_TIMER4_INITIAL
   119 ;; This function is called by:
   120 ;;		Startup code after reset
   121 ;; This function uses a non-reentrant model
   122 ;;
   123                           
   124                           
   125                           ;psect for function _main
   126  0051                     _main:	
   127                           
   128                           ;TEST_FT64F0AX_IR_Receive.C: 176: POWER_INITIAL();
   129                           
   130                           ;incstack = 0
   131                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   132  0051  206B  3180         	fcall	_POWER_INITIAL
   133                           
   134                           ;TEST_FT64F0AX_IR_Receive.C: 177: TIMER4_INITIAL();
   135  0053  209C  3180         	fcall	_TIMER4_INITIAL
   136                           
   137                           ;TEST_FT64F0AX_IR_Receive.C: 178: Px_Level_Change_INITIAL();
   138  0055  2091  3180         	fcall	_Px_Level_Change_INITIAL
   139                           
   140                           ;TEST_FT64F0AX_IR_Receive.C: 179: GIE=1;
   141  0057  178B               	bsf	11,7	;volatile
   142  0058                     l2639:	
   143                           
   144                           ;TEST_FT64F0AX_IR_Receive.C: 182: {
   145                           ;TEST_FT64F0AX_IR_Receive.C: 183: if(ReceiveFinish==1)
   146  0058  0B76               	decfsz	_ReceiveFinish,w
   147  0059  2858               	goto	l2639
   148                           
   149                           ;TEST_FT64F0AX_IR_Receive.C: 184: {
   150                           ;TEST_FT64F0AX_IR_Receive.C: 185: ReceiveFinish=0;
   151  005A  01F6               	clrf	_ReceiveFinish
   152                           
   153                           ;TEST_FT64F0AX_IR_Receive.C: 186: rdata1=0xFF-IRDataTimer[0];
   154  005B  0970               	comf	_IRDataTimer,w	;volatile
   155  005C  00F5               	movwf	_rdata1	;volatile
   156                           
   157                           ;TEST_FT64F0AX_IR_Receive.C: 187: rdata2=0xFF-IRDataTimer[2];
   158  005D  0972               	comf	_IRDataTimer+2,w	;volatile
   159  005E  00F4               	movwf	_rdata2	;volatile
   160                           
   161                           ;TEST_FT64F0AX_IR_Receive.C: 188: if((rdata1==IRDataTimer[1])&&(rdata2==IRDataTimer[3]))
   162  005F  0871               	movf	_IRDataTimer+1,w	;volatile
   163  0060  0675               	xorwf	_rdata1,w	;volatile
   164  0061  1D03               	skipz
   165  0062  2858               	goto	l2639
   166  0063  0873               	movf	_IRDataTimer+3,w	;volatile
   167  0064  0674               	xorwf	_rdata2,w	;volatile
   168  0065  1D03               	skipz
   169  0066  2858               	goto	l2639
   170                           
   171                           ;TEST_FT64F0AX_IR_Receive.C: 189: {
   172                           ;TEST_FT64F0AX_IR_Receive.C: 190: PB3=~PB3;
   173  0067  3008               	movlw	8
   174  0068  0020               	movlb	0	; select bank0
   175  0069  068D               	xorwf	13,f
   176  006A  2858               	goto	l2639
   177  006B                     __end_of_main:	
   178  006B                     __ptext3:	
   179 ;; *************** function _POWER_INITIAL *****************
   180 ;; Defined at:
   181 ;;		line 105 in file "TEST_FT64F0AX_IR_Receive.C"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, status,2
   190 ;; Tracked objects:
   191 ;;		On entry : B1F/0
   192 ;;		On exit  : B1F/3
   193 ;;		Unchanged: B00/0
   194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels used:    1
   201 ;; Hardware stack levels required when called:    1
   202 ;; This function calls:
   203 ;;		Nothing
   204 ;; This function is called by:
   205 ;;		_main
   206 ;; This function uses a non-reentrant model
   207 ;;
   208                           
   209                           
   210                           ;psect for function _POWER_INITIAL
   211  006B                     _POWER_INITIAL:	
   212                           
   213                           ;TEST_FT64F0AX_IR_Receive.C: 107: OSCCON=0B01110001;
   214                           
   215                           ;incstack = 0
   216                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   217  006B  3071               	movlw	113
   218  006C  0021               	movlb	1	; select bank1
   219  006D  0099               	movwf	25	;volatile
   220                           
   221                           ;TEST_FT64F0AX_IR_Receive.C: 108: INTCON=0;
   222  006E  018B               	clrf	11	;volatile
   223                           
   224                           ;TEST_FT64F0AX_IR_Receive.C: 110: PORTA=0B00000000;
   225  006F  0020               	movlb	0	; select bank0
   226  0070  018C               	clrf	12	;volatile
   227                           
   228                           ;TEST_FT64F0AX_IR_Receive.C: 111: PORTB=0B00000000;
   229  0071  018D               	clrf	13	;volatile
   230                           
   231                           ;TEST_FT64F0AX_IR_Receive.C: 112: PORTC=0B00000000;
   232  0072  018E               	clrf	14	;volatile
   233                           
   234                           ;TEST_FT64F0AX_IR_Receive.C: 114: WPUA=0B00001000;
   235  0073  3008               	movlw	8
   236  0074  0023               	movlb	3	; select bank3
   237  0075  008C               	movwf	12	;volatile
   238                           
   239                           ;TEST_FT64F0AX_IR_Receive.C: 115: WPUB=0B00000000;
   240  0076  018D               	clrf	13	;volatile
   241                           
   242                           ;TEST_FT64F0AX_IR_Receive.C: 116: WPUC=0B00000000;
   243  0077  018E               	clrf	14	;volatile
   244                           
   245                           ;TEST_FT64F0AX_IR_Receive.C: 118: WPDA=0B00000000;
   246  0078  0024               	movlb	4	; select bank4
   247  0079  018C               	clrf	12	;volatile
   248                           
   249                           ;TEST_FT64F0AX_IR_Receive.C: 119: WPDB=0B00000000;
   250  007A  018D               	clrf	13	;volatile
   251                           
   252                           ;TEST_FT64F0AX_IR_Receive.C: 120: WPDC=0B00000000;
   253  007B  018E               	clrf	14	;volatile
   254                           
   255                           ;TEST_FT64F0AX_IR_Receive.C: 122: TRISA=0B11111111;
   256  007C  30FF               	movlw	255
   257  007D  0021               	movlb	1	; select bank1
   258  007E  008C               	movwf	12	;volatile
   259                           
   260                           ;TEST_FT64F0AX_IR_Receive.C: 123: TRISB=0B11110111;
   261  007F  30F7               	movlw	247
   262  0080  008D               	movwf	13	;volatile
   263                           
   264                           ;TEST_FT64F0AX_IR_Receive.C: 124: TRISC=0B00000011;
   265  0081  3003               	movlw	3
   266  0082  008E               	movwf	14	;volatile
   267                           
   268                           ;TEST_FT64F0AX_IR_Receive.C: 126: PSRC0=0B11111111;
   269  0083  30FF               	movlw	255
   270  0084  0022               	movlb	2	; select bank2
   271  0085  009A               	movwf	26	;volatile
   272                           
   273                           ;TEST_FT64F0AX_IR_Receive.C: 127: PSRC1=0B11111111;
   274  0086  009B               	movwf	27	;volatile
   275                           
   276                           ;TEST_FT64F0AX_IR_Receive.C: 128: PSRC2=0B00001111;
   277  0087  300F               	movlw	15
   278  0088  009C               	movwf	28	;volatile
   279                           
   280                           ;TEST_FT64F0AX_IR_Receive.C: 130: PSINK0=0B11111111;
   281  0089  30FF               	movlw	255
   282  008A  0023               	movlb	3	; select bank3
   283  008B  009A               	movwf	26	;volatile
   284                           
   285                           ;TEST_FT64F0AX_IR_Receive.C: 131: PSINK1=0B11111111;
   286  008C  009B               	movwf	27	;volatile
   287                           
   288                           ;TEST_FT64F0AX_IR_Receive.C: 132: PSINK2=0B00000011;
   289  008D  3003               	movlw	3
   290  008E  009C               	movwf	28	;volatile
   291                           
   292                           ;TEST_FT64F0AX_IR_Receive.C: 134: ANSELA=0B00000000;
   293  008F  0197               	clrf	23	;volatile
   294  0090  0008               	return
   295  0091                     __end_of_POWER_INITIAL:	
   296  0091                     __ptext2:	
   297 ;; *************** function _Px_Level_Change_INITIAL *****************
   298 ;; Defined at:
   299 ;;		line 159 in file "TEST_FT64F0AX_IR_Receive.C"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2
   308 ;; Tracked objects:
   309 ;;		On entry : B1F/2
   310 ;;		On exit  : B1F/1
   311 ;;		Unchanged: B00/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; Hardware stack levels required when called:    1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           
   328                           ;psect for function _Px_Level_Change_INITIAL
   329  0091                     _Px_Level_Change_INITIAL:	
   330                           
   331                           ;TEST_FT64F0AX_IR_Receive.C: 161: EPS0=0B00000000;
   332                           
   333                           ;incstack = 0
   334                           ; Regs used in _Px_Level_Change_INITIAL: [wreg+status,2]
   335  0091  0198               	clrf	24	;volatile
   336                           
   337                           ;TEST_FT64F0AX_IR_Receive.C: 162: EPS1=0B00000000;
   338  0092  0199               	clrf	25	;volatile
   339                           
   340                           ;TEST_FT64F0AX_IR_Receive.C: 163: ITYPE0=0B11000000;
   341  0093  30C0               	movlw	192
   342  0094  009E               	movwf	30	;volatile
   343                           
   344                           ;TEST_FT64F0AX_IR_Receive.C: 164: ITYPE1=0B00000000;
   345  0095  019F               	clrf	31	;volatile
   346                           
   347                           ;TEST_FT64F0AX_IR_Receive.C: 165: EPIE0=0B00001000;
   348  0096  3008               	movlw	8
   349  0097  0021               	movlb	1	; select bank1
   350  0098  0094               	movwf	20	;volatile
   351                           
   352                           ;TEST_FT64F0AX_IR_Receive.C: 166: INTCON=0B01000000;
   353  0099  3040               	movlw	64
   354  009A  008B               	movwf	11	;volatile
   355  009B  0008               	return
   356  009C                     __end_of_Px_Level_Change_INITIAL:	
   357  009C                     __ptext1:	
   358 ;; *************** function _TIMER4_INITIAL *****************
   359 ;; Defined at:
   360 ;;		line 142 in file "TEST_FT64F0AX_IR_Receive.C"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2
   369 ;; Tracked objects:
   370 ;;		On entry : B1F/3
   371 ;;		On exit  : B1F/2
   372 ;;		Unchanged: B00/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; Hardware stack levels required when called:    1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _TIMER4_INITIAL
   390  009C                     _TIMER4_INITIAL:	
   391                           
   392                           ;TEST_FT64F0AX_IR_Receive.C: 144: PCKEN|=0B00001000;
   393                           
   394                           ;incstack = 0
   395                           ; Regs used in _TIMER4_INITIAL: [wreg+status,2]
   396  009C  0021               	movlb	1	; select bank1
   397  009D  159A               	bsf	26,3	;volatile
   398                           
   399                           ;TEST_FT64F0AX_IR_Receive.C: 145: TIM4CR1=0B00000101;
   400  009E  3005               	movlw	5
   401  009F  0022               	movlb	2	; select bank2
   402  00A0  0091               	movwf	17	;volatile
   403                           
   404                           ;TEST_FT64F0AX_IR_Receive.C: 146: TIM4IER=0B00000001;
   405  00A1  3001               	movlw	1
   406  00A2  0092               	movwf	18	;volatile
   407                           
   408                           ;TEST_FT64F0AX_IR_Receive.C: 147: TIM4SR=0B00000000;
   409  00A3  0193               	clrf	19	;volatile
   410                           
   411                           ;TEST_FT64F0AX_IR_Receive.C: 148: TIM4EGR=0B00000000;
   412  00A4  0194               	clrf	20	;volatile
   413                           
   414                           ;TEST_FT64F0AX_IR_Receive.C: 149: TIM4CNTR=0;
   415  00A5  0195               	clrf	21	;volatile
   416                           
   417                           ;TEST_FT64F0AX_IR_Receive.C: 150: TIM4PSCR=0B00000110;
   418  00A6  3006               	movlw	6
   419  00A7  0096               	movwf	22	;volatile
   420                           
   421                           ;TEST_FT64F0AX_IR_Receive.C: 151: TIM4ARR=140;
   422  00A8  308C               	movlw	140
   423  00A9  0097               	movwf	23	;volatile
   424  00AA  0008               	return
   425  00AB                     __end_of_TIMER4_INITIAL:	
   426                           
   427                           	psect	bssCOMMON
   428  0070                     __pbssCOMMON:	
   429  0070                     _IRDataTimer:	
   430  0070                     	ds	4
   431  0074                     _rdata2:	
   432  0074                     	ds	1
   433  0075                     _rdata1:	
   434  0075                     	ds	1
   435  0076                     _ReceiveFinish:	
   436  0076                     	ds	1
   437  0077                     _IRbitTime:	
   438  0077                     	ds	1
   439  0078                     _IRbitNum:	
   440  0078                     	ds	1
   441                           
   442                           	psect	dataCOMMON
   443  0079                     __pdataCOMMON:	
   444  0079                     _bitdata:	
   445  0079                     	ds	1
   446                           
   447                           	psect	cstackCOMMON
   448  0000                     __pcstackCOMMON:	
   449  0000                     ?_ISR:	
   450  0000                     ??_ISR:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0000                     ?_POWER_INITIAL:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0000                     ??_POWER_INITIAL:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0000                     ?_TIMER4_INITIAL:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0000                     ??_TIMER4_INITIAL:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0000                     ?_Px_Level_Change_INITIAL:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0000                     ??_Px_Level_Change_INITIAL:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0000                     ?_main:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0000                     ??_main:	
   475                           ; 1 bytes @ 0x0
   476                           
   477                           
   478                           	psect	intentry
   479  0004                     __pintentry:	
   480 ;; *************** function _ISR *****************
   481 ;; Defined at:
   482 ;;		line 47 in file "TEST_FT64F0AX_IR_Receive.C"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 1D/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		Interrupt level 1
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509  0004                     _ISR:	
   510                           
   511                           ;incstack = 0
   512  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   513                           
   514                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
   515  0005  3180               	pagesel	$
   516                           
   517                           ;TEST_FT64F0AX_IR_Receive.C: 50: if(T4UIE&&T4UIF)
   518  0006  0022               	movlb	2	; select bank2
   519  0007  1812               	btfsc	18,0	;volatile
   520  0008  1C13               	btfss	19,0	;volatile
   521  0009  2812               	goto	i1l2603
   522                           
   523                           ;TEST_FT64F0AX_IR_Receive.C: 51: {
   524                           ;TEST_FT64F0AX_IR_Receive.C: 52: T4UIF=1;
   525  000A  1413               	bsf	19,0	;volatile
   526  000B  3033               	movlw	51
   527                           
   528                           ;TEST_FT64F0AX_IR_Receive.C: 54: IRbitTime++;
   529  000C  0AF7               	incf	_IRbitTime,f
   530                           
   531                           ;TEST_FT64F0AX_IR_Receive.C: 55: if(IRbitTime>50)
   532  000D  0277               	subwf	_IRbitTime,w
   533  000E  1C03               	skipc
   534  000F  2812               	goto	i1l2603
   535                           
   536                           ;TEST_FT64F0AX_IR_Receive.C: 56: {
   537                           ;TEST_FT64F0AX_IR_Receive.C: 57: T4UIE=0;
   538  0010  1012               	bcf	18,0	;volatile
   539                           
   540                           ;TEST_FT64F0AX_IR_Receive.C: 58: IRbitTime=0;
   541  0011  01F7               	clrf	_IRbitTime
   542  0012                     i1l2603:	
   543                           
   544                           ;TEST_FT64F0AX_IR_Receive.C: 59: }
   545                           ;TEST_FT64F0AX_IR_Receive.C: 60: }
   546                           ;TEST_FT64F0AX_IR_Receive.C: 63: if(EPIF0&0X08)
   547  0012  0020               	movlb	0	; select bank0
   548  0013  1D94               	btfss	20,3	;volatile
   549  0014  283F               	goto	i1l2136
   550                           
   551                           ;TEST_FT64F0AX_IR_Receive.C: 64: {
   552                           ;TEST_FT64F0AX_IR_Receive.C: 65: EPIF0|=0X08;
   553  0015  1594               	bsf	20,3	;volatile
   554                           
   555                           ;TEST_FT64F0AX_IR_Receive.C: 67: if(PA3==0)
   556  0016  198C               	btfsc	12,3	;volatile
   557  0017  283F               	goto	i1l2136
   558                           
   559                           ;TEST_FT64F0AX_IR_Receive.C: 68: {
   560                           ;TEST_FT64F0AX_IR_Receive.C: 69: T4UIE=1;
   561  0018  0022               	movlb	2	; select bank2
   562  0019  1412               	bsf	18,0	;volatile
   563                           
   564                           ;TEST_FT64F0AX_IR_Receive.C: 70: if(IRbitTime>21)
   565  001A  3016               	movlw	22
   566  001B  0277               	subwf	_IRbitTime,w
   567  001C  1C03               	skipc
   568  001D  2825               	goto	i1l2613
   569                           
   570                           ;TEST_FT64F0AX_IR_Receive.C: 71: {
   571                           ;TEST_FT64F0AX_IR_Receive.C: 72: IRDataTimer[0]=0;
   572  001E  01F0               	clrf	_IRDataTimer	;volatile
   573                           
   574                           ;TEST_FT64F0AX_IR_Receive.C: 73: IRDataTimer[1]=0;
   575  001F  01F1               	clrf	_IRDataTimer+1	;volatile
   576                           
   577                           ;TEST_FT64F0AX_IR_Receive.C: 74: IRDataTimer[2]=0;
   578  0020  01F2               	clrf	_IRDataTimer+2	;volatile
   579                           
   580                           ;TEST_FT64F0AX_IR_Receive.C: 75: IRDataTimer[3]=0;
   581  0021  01F3               	clrf	_IRDataTimer+3	;volatile
   582                           
   583                           ;TEST_FT64F0AX_IR_Receive.C: 76: IRbitNum=0;
   584  0022  01F8               	clrf	_IRbitNum
   585                           
   586                           ;TEST_FT64F0AX_IR_Receive.C: 77: bitdata=0x00;
   587  0023  01F9               	clrf	_bitdata
   588                           
   589                           ;TEST_FT64F0AX_IR_Receive.C: 78: }
   590  0024  282F               	goto	i1l2617
   591  0025                     i1l2613:	
   592                           
   593                           ;TEST_FT64F0AX_IR_Receive.C: 79: else if(IRbitTime>3)
   594  0025  3004               	movlw	4
   595  0026  0277               	subwf	_IRbitTime,w
   596  0027  1C03               	skipc
   597  0028  282F               	goto	i1l2617
   598                           
   599                           ;TEST_FT64F0AX_IR_Receive.C: 80: {
   600                           ;TEST_FT64F0AX_IR_Receive.C: 81: IRDataTimer[IRbitNum-1]|=bitdata;
   601  0029  0878               	movf	_IRbitNum,w
   602  002A  3E6F               	addlw	(low ((_IRDataTimer| 0+255)))& (0+255)
   603  002B  0086               	movwf	6
   604  002C  0187               	clrf	7
   605  002D  0879               	movf	_bitdata,w
   606  002E  0481               	iorwf	1,f
   607  002F                     i1l2617:	
   608                           
   609                           ;TEST_FT64F0AX_IR_Receive.C: 82: }
   610                           ;TEST_FT64F0AX_IR_Receive.C: 83: IRbitTime = 0;
   611  002F  01F7               	clrf	_IRbitTime
   612                           
   613                           ;TEST_FT64F0AX_IR_Receive.C: 84: bitdata<<=1;
   614  0030  35F9               	lslf	_bitdata,f
   615                           
   616                           ;TEST_FT64F0AX_IR_Receive.C: 85: if(bitdata==0)
   617  0031  0879               	movf	_bitdata,w
   618  0032  1D03               	btfss	3,2
   619  0033  2837               	goto	i1l2627
   620                           
   621                           ;TEST_FT64F0AX_IR_Receive.C: 86: {
   622                           ;TEST_FT64F0AX_IR_Receive.C: 87: bitdata=0x01;
   623  0034  01F9               	clrf	_bitdata
   624  0035  0AF9               	incf	_bitdata,f
   625                           
   626                           ;TEST_FT64F0AX_IR_Receive.C: 88: IRbitNum++;
   627  0036  0AF8               	incf	_IRbitNum,f
   628  0037                     i1l2627:	
   629                           
   630                           ;TEST_FT64F0AX_IR_Receive.C: 89: }
   631                           ;TEST_FT64F0AX_IR_Receive.C: 90: if(IRbitNum>4)
   632  0037  3005               	movlw	5
   633  0038  0278               	subwf	_IRbitNum,w
   634  0039  1C03               	skipc
   635  003A  283F               	goto	i1l2136
   636                           
   637                           ;TEST_FT64F0AX_IR_Receive.C: 91: {
   638                           ;TEST_FT64F0AX_IR_Receive.C: 92: IRbitNum=0;
   639  003B  01F8               	clrf	_IRbitNum
   640                           
   641                           ;TEST_FT64F0AX_IR_Receive.C: 93: T4UIE=0;
   642  003C  1012               	bcf	18,0	;volatile
   643                           
   644                           ;TEST_FT64F0AX_IR_Receive.C: 94: ReceiveFinish=1;
   645  003D  01F6               	clrf	_ReceiveFinish
   646  003E  0AF6               	incf	_ReceiveFinish,f
   647  003F                     i1l2136:	
   648  003F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   649  0040  0009               	retfie
   650  0041                     __end_of_ISR:	
   651  007E                     btemp	set	126	;btemp
   652  007E                     int$flags	set	126
   653  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _POWER_INITIAL
            _Px_Level_Change_INITIAL
                     _TIMER4_INITIAL
 ---------------------------------------------------------------------------------
 (1) _TIMER4_INITIAL                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Px_Level_Change_INITIAL                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POWER_INITIAL
   _Px_Level_Change_INITIAL
   _TIMER4_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      0       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Oct 12 17:58:47 2021

                             _GIE 005F                               _PA3 0063                               _PB3 006B  
                             _ISR 0004                              ?_ISR 0000                              l2639 0058  
                            _EPS0 0118                              _EPS1 0119                              _WPDA 020C  
                            _WPDB 020D                              _WPDC 020E                              _WPUA 018C  
                            _WPUB 018D                              _WPUC 018E                              _main 0051  
                            fsr1h 0007                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              start 0041                             ??_ISR 0000  
                           ?_main 0000                             _EPIE0 0094                             _EPIF0 0014  
                           _T4UIE 0890                             _T4UIF 0898                             _PCKEN 009A  
                           _PSRC0 011A                             _PSRC1 011B                             _PSRC2 011C  
                           _PORTA 000C                             _PORTB 000D                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                  _TIMER4_INITIAL 009C         ??_Px_Level_Change_INITIAL 0000                             status 0003  
                           wtemp0 007E                   __initialization 0043                      __end_of_main 006B  
                          ??_main 0000            __end_of_TIMER4_INITIAL 00AB                            _ANSELA 0197  
                          i1l2136 003F                            i1l2603 0012                            i1l2613 0025  
                          i1l2617 002F                            i1l2627 0037                            _INTCON 000B  
                          _OSCCON 0099                            _ITYPE0 011E                            _ITYPE1 011F  
                          _TIM4SR 0113                            _PSINK0 019A                            _PSINK1 019B  
                          _PSINK2 019C                            _rdata1 0075                            _rdata2 0074  
                 ?_TIMER4_INITIAL 0000                      __pdataCOMMON 0079             __end_of_POWER_INITIAL 0091  
         __end_of__initialization 004E                     _ReceiveFinish 0076                    __pcstackCOMMON 0000  
                      __pmaintext 0051                        __pintentry 0004                           _TIM4CR1 0111  
                         _TIM4EGR 0114                           _TIM4ARR 0117                           _TIM4IER 0112  
                         _bitdata 0079                           __ptext1 009C                           __ptext2 0091  
                         __ptext3 006B                      __size_of_ISR 003D              end_of_initialization 004E  
                ??_TIMER4_INITIAL 0000                         _IRbitTime 0077          ?_Px_Level_Change_INITIAL 0000  
                   __pidataCOMMON 0000               start_initialization 0043                       __end_of_ISR 0041  
          __size_of_POWER_INITIAL 0026   __end_of_Px_Level_Change_INITIAL 009C                       __pbssCOMMON 0070  
                       ___latbits 0003                     _POWER_INITIAL 006B                          _TIM4CNTR 0115  
                        _TIM4PSCR 0116                          _IRbitNum 0078                    ?_POWER_INITIAL 0000  
__size_of_Px_Level_Change_INITIAL 000B                     __size_of_main 001A                       _IRDataTimer 0070  
                        int$flags 007E           __size_of_TIMER4_INITIAL 000F                   ??_POWER_INITIAL 0000  
                        intlevel1 0000           _Px_Level_Change_INITIAL 0091  
