//********************************************************* 
/* 文件名：TEST_64F0Ax_EEPROM.c
* 功能：   FT64F0Ax_EEPROM.功能演示
* IC:      FT64F0A5 TSSOP20
* 内部：   16M/2T
* 说明：   此演示程序位64F0Ax_EEPROM的演示程序.
*		   把0x55写入地址0x13，再读出该值
* 
*
*                FT64F0A5  TSSOP20
*              -------------------
* NC----------|1(PA5)   	(PA4)20|-----------NC     
* NC----------|2(PA6)   	(PA3)19|-----------NC 
* NC----------|3(PA7)   	(PA2)18|-----------NC
* NC----------|4(PC0)   	(PA1)17|-----------NC
* NC----------|5(PC1)		(PA0)16|-----------NC	
* NC----------|6(PB7)		(PB0)15|-----------NC
* GND---------|7(GND)		(PB1)14|-----------NC
* NC----------|8(PB6)		(PB2)13|-----------NC
* VDD---------|9(VDD)		(PB3)12|-----------NC
* NC----------|10(PB5)		(PB4)11|-----------NC
*				-------------------
*/ 
//*********************************************************
#include	"SYSCFG.h";
#include 	"FT64F0AX.h";
//***********************宏定义****************************
#define		uchar	unsigned char

volatile	uchar	EEReadData;
/*-------------------------------------------------
 * 函数名：POWER_INITIAL
 * 功能：  上电系统初始化
 * 输入：  无
 * 输出：  无
 --------------------------------------------------*/
 void POWER_INITIAL(void)
 {
	OSCCON=0B01110001;			//系统时钟选择为内部振荡器16MHz,分频比为1:1
	INTCON=0;					//禁止所有中断
    
    PORTA=0B00000000;
    PORTB=0B00000000;
    PORTC=0B00000000;
    
	WPUA=0B00000000;			//弱上拉的开关，0-关，1-开		
	WPUB=0B00000000;
	WPUC=0B00000000;			

	WPDA=0B00000000;			//弱下拉的开关，0-关，1-开
	WPDB=0B00000000;
	WPDC=0B00000000;
	
	TRISA=0B00000000;			//输入输出设置，0-输出，1-输入
	TRISB=0B00000000;				
	TRISC=0B00000000;

	PSRC0=0B11111111;			//源电流设置最大
	PSRC1=0B11111111;
	PSRC2=0B00001111;

	PSINK0=0B11111111;			//灌电流设置最大
	PSINK1=0B11111111;
	PSINK2=0B00000011;

	ANSELA=0B00000000;			//设置对应的IO为数字IO	
 }
 /*-------------------------------------------------
 * 函数名：EEPROMread
 * 功能：  读EEPROM数据
 * 输入：  EEAddr需读取数据的地址
 * 输出：  ReEEPROMread对应地址读出的数据
 --------------------------------------------------*/
uchar EEPROMread (uchar EEAddr)
{
    uchar ReEEPROMread;
	while(GIE)	           		//等待GIE为0
	{
          GIE = 0;            	//读数据必须关闭中断
          NOP();               
          NOP();            
	}				
    EEADRL=EEAddr;
    
    CFGS=0;
    EEPGD=0;
    RD=1;
    NOP();
    NOP();
    NOP();
    NOP();
    ReEEPROMread=EEDATL;
    
    return ReEEPROMread;
}
/*-------------------------------------------------
 * 函数名：Unlock_Flash
 * 功能：  进行FLASH/EEDATA操作时，解锁FLASH/EEDATA的时序不能被打断。
 *		   程序中要将此段用汇编指令处理防止被优化
 * 输入：  无
 * 输出：  无
 --------------------------------------------------*/
void Unlock_Flash()
{
#asm
    MOVLW    0x03
    MOVWF    _BSREG
    MOVLW    0x55
    MOVWF    _EECON2 & 0x7F
    MOVLW    0xAA
    MOVWF    _EECON2 & 0x7F
    BSF		_EECON1 & 0x7F,1  		//WR=1;
    NOP
    NOP
#endasm
}
/*-------------------------------------------------
 * 函数名：EEPROMwrite
 * 功能：  写数据到EEPROM
 * 输入：  EEAddr为需要写入数据的地址，Data为需要写入的数据
 * 输出：  无
 --------------------------------------------------*/
 void EEPROMwrite(uchar EEAddr,uchar Data)
 {
	while(GIE)	           		//等待GIE为0
	{
		GIE = 0;            	//写数据必须关闭中断
		NOP();               
		NOP();            
	}				
	EEADRL=EEAddr;			    //EEPROM的地址
	EEDATL=Data;				//EEPROM的数据
     
	CFGS=0;
	EEPGD=0;
	WREN=1;						//写使能
	EEIF=0;
    
	Unlock_Flash();        		//Flash 解锁时序不能修改
    NOP();
    NOP();
    NOP();
    NOP();
    
	while(WR);					//等待EEPROM写入完成
	WREN=0;
	GIE=1;
 }
/*-------------------------------------------------
 * 函数名：main
 * 功能：	 主函数 
 * 输入：	 无
 * 输出： 	 无
 --------------------------------------------------*/
void main(void)
{
    POWER_INITIAL();			//系统初始化
    
    EEPROMwrite(0x13,0x55);		//0x55写入地址0x13
    EEReadData=EEPROMread(0x13);//读取0x13地址EEPROM值
    while(1)
    {
        NOP();
    }
}