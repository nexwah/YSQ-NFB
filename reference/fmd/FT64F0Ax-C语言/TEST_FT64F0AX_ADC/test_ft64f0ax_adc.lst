

GNU Macro Assembler for 8 bit devices.       
                                                                                               Thu Aug 12 15:56:01 2021

GNU C Code Generator                                                 
     1                           	processor	FT64F0AX
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	pa_nodes0,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.45
    13                           ; Generated 16/11/2017 
    14                           ; 
    15                           ; SFR Addresses
    16  0000                     
    17                           	psect	nvCOMMON
    18  007C                     __pnvCOMMON:	
    19  007C                     _adcData:	
    20  007C                     	ds	2
    21                           
    22                           	psect	nvBANK0
    23  0024                     __pnvBANK0:	
    24  0024                     _theVoltage:	
    25  0024                     	ds	2
    26  001F                     _ADDLY	set	31
    27  000E                     _PORTC	set	14
    28  000D                     _PORTB	set	13
    29  000C                     _PORTA	set	12
    30  000B                     _INTCON	set	11
    31  009F                     _ADCON2	set	159
    32  009E                     _ADCON1	set	158
    33  009D                     _ADCON0	set	157
    34  009C                     _ADRESH	set	156
    35  009B                     _ADRESL	set	155
    36  009A                     _PCKEN	set	154
    37  0099                     _OSCCON	set	153
    38  008E                     _TRISC	set	142
    39  008D                     _TRISB	set	141
    40  008C                     _TRISA	set	140
    41  04E9                     _GO	set	1257
    42  04E8                     _ADON	set	1256
    43  011C                     _PSRC2	set	284
    44  011B                     _PSRC1	set	283
    45  011A                     _PSRC0	set	282
    46  019C                     _PSINK2	set	412
    47  019B                     _PSINK1	set	411
    48  019A                     _PSINK0	set	410
    49  0197                     _ANSELA	set	407
    50  018E                     _WPUC	set	398
    51  018D                     _WPUB	set	397
    52  018C                     _WPUA	set	396
    53  020E                     _WPDC	set	526
    54  020D                     _WPDB	set	525
    55  020C                     _WPDA	set	524
    56  041B                     _ADCMPH	set	1051
    57  041A                     _ADCON3	set	1050
    58                           
    59                           	psect	cinit
    60  074F                     start_initialization:	
    61                           ; #config settings
    62                           
    63  074F                     __initialization:	
    64  074F                     end_of_initialization:	
    65                           ;End of C runtime variable initialization code
    66                           
    67  074F                     __end_of__initialization:	
    68  074F  0020               	movlb	0
    69  0750  2F51               	ljmp	_main	;jump to C main() function
    70  0751                     __pmaintext:	
    71 ;;
    72 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
    73 ;;
    74 ;; *************** function _main *****************
    75 ;; Defined at:
    76 ;;		line 164 in file "TEST_FT64F0AX_ADC.C"
    77 ;; Parameters:    Size  Location     Type
    78 ;;		None
    79 ;; Auto vars:     Size  Location     Type
    80 ;;		None
    81 ;; Return value:  Size  Location     Type
    82 ;;                  1    wreg      void 
    83 ;; Registers used:
    84 ;;		wreg, status,2, status,0, pclath, cstack
    85 ;; Tracked objects:
    86 ;;		On entry : B1F/0
    87 ;;		On exit  : 0/0
    88 ;;		Unchanged: 0/0
    89 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
    90 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    91 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    92 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
    93 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
    94 ;;Total ram usage:        4 bytes
    95 ;; Hardware stack levels required when called:    2
    96 ;; This function calls:
    97 ;;		_ADC_INITIAL
    98 ;;		_GET_ADC_DATA
    99 ;;		_POWER_INITIAL
   100 ;;		___lmul
   101 ;; This function is called by:
   102 ;;		Startup code after reset
   103 ;; This function uses a non-reentrant model
   104 ;;
   105                           
   106                           
   107                           ;psect for function _main
   108  0751                     _main:	
   109                           
   110                           ;TEST_FT64F0AX_ADC.C: 166: POWER_INITIAL();
   111                           
   112                           ;incstack = 0
   113                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   114  0751  27B6  3187         	fcall	_POWER_INITIAL
   115                           
   116                           ;TEST_FT64F0AX_ADC.C: 167: ADC_INITIAL();
   117  0753  2785  3187         	fcall	_ADC_INITIAL
   118  0755                     l2151:	
   119                           ;TEST_FT64F0AX_ADC.C: 169: while(1)
   120                           
   121                           
   122                           ;TEST_FT64F0AX_ADC.C: 170: {
   123                           ;TEST_FT64F0AX_ADC.C: 171: adcData=GET_ADC_DATA(0);
   124  0755  3000               	movlw	0
   125  0756  2796  3187         	fcall	_GET_ADC_DATA
   126  0758  0873               	movf	?_GET_ADC_DATA+1,w
   127  0759  00FD               	movwf	_adcData+1	;volatile
   128  075A  0872               	movf	?_GET_ADC_DATA,w
   129  075B  00FC               	movwf	_adcData	;volatile
   130                           
   131                           ;TEST_FT64F0AX_ADC.C: 172: theVoltage=(unsigned long)adcData*2*1000/4096;
   132  075C  087C               	movf	_adcData,w	;volatile
   133  075D  00F0               	movwf	___lmul@multiplier
   134  075E  087D               	movf	_adcData+1,w	;volatile
   135  075F  00F1               	movwf	___lmul@multiplier+1
   136  0760  3003               	movlw	3
   137  0761  01F2               	clrf	___lmul@multiplier+2
   138  0762  01F3               	clrf	___lmul@multiplier+3
   139  0763  35F0               	lslf	___lmul@multiplier,f
   140  0764  0DF1               	rlf	___lmul@multiplier+1,f
   141  0765  0DF2               	rlf	___lmul@multiplier+2,f
   142  0766  0DF3               	rlf	___lmul@multiplier+3,f
   143  0767  01F7               	clrf	___lmul@multiplicand+3
   144  0768  01F6               	clrf	___lmul@multiplicand+2
   145  0769  00F5               	movwf	___lmul@multiplicand+1
   146  076A  30E8               	movlw	232
   147  076B  00F4               	movwf	___lmul@multiplicand
   148  076C  27DB  3187         	fcall	___lmul
   149  076E  0870               	movf	?___lmul,w
   150  076F  0020               	movlb	0	; select bank0
   151  0770  00A0               	movwf	??_main
   152  0771  0871               	movf	?___lmul+1,w
   153  0772  00A1               	movwf	??_main+1
   154  0773  0872               	movf	?___lmul+2,w
   155  0774  00A2               	movwf	??_main+2
   156  0775  0873               	movf	?___lmul+3,w
   157  0776  00A3               	movwf	??_main+3
   158  0777  300C               	movlw	12
   159  0778                     u105:	
   160  0778  36A3               	lsrf	??_main+3,f
   161  0779  0CA2               	rrf	??_main+2,f
   162  077A  0CA1               	rrf	??_main+1,f
   163  077B  0CA0               	rrf	??_main,f
   164  077C  0B89               	decfsz	9,f
   165  077D  2F78               	goto	u105
   166  077E  0821               	movf	??_main+1,w
   167  077F  00A5               	movwf	_theVoltage+1	;volatile
   168  0780  0820               	movf	??_main,w
   169  0781  00A4               	movwf	_theVoltage	;volatile
   170                           
   171                           ;TEST_FT64F0AX_ADC.C: 173: __nop();
   172  0782  0000               	nop
   173                           
   174                           ;TEST_FT64F0AX_ADC.C: 174: __nop();
   175  0783  0000               	nop
   176  0784  2F55               	goto	l2151
   177  0785                     __end_of_main:	
   178  0785                     __ptext5:	
   179 ;; *************** function _ADC_INITIAL *****************
   180 ;; Defined at:
   181 ;;		line 80 in file "TEST_FT64F0AX_ADC.C"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, status,2
   190 ;; Tracked objects:
   191 ;;		On entry : B1F/3
   192 ;;		On exit  : B1F/1
   193 ;;		Unchanged: B00/0
   194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels used:    1
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		_main
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           
   209                           ;psect for function _ADC_INITIAL
   210  0785                     _ADC_INITIAL:	
   211                           
   212                           ;TEST_FT64F0AX_ADC.C: 82: ANSELA=0B00000001;
   213                           
   214                           ;incstack = 0
   215                           ; Regs used in _ADC_INITIAL: [wreg+status,2]
   216  0785  3001               	movlw	1
   217  0786  0097               	movwf	23	;volatile
   218                           
   219                           ;TEST_FT64F0AX_ADC.C: 83: ADCON1=0B11100100;
   220  0787  30E4               	movlw	228
   221  0788  0021               	movlb	1	; select bank1
   222  0789  009E               	movwf	30	;volatile
   223                           
   224                           ;TEST_FT64F0AX_ADC.C: 84: ADCON0=0B00000000;
   225  078A  019D               	clrf	29	;volatile
   226                           
   227                           ;TEST_FT64F0AX_ADC.C: 85: ADCON2=0B01000000;
   228  078B  3040               	movlw	64
   229  078C  009F               	movwf	31	;volatile
   230                           
   231                           ;TEST_FT64F0AX_ADC.C: 86: ADCON3=0B00000000;
   232  078D  0028               	movlb	8	; select bank8
   233  078E  019A               	clrf	26	;volatile
   234                           
   235                           ;TEST_FT64F0AX_ADC.C: 87: ADDLY=0B00000000;
   236  078F  0020               	movlb	0	; select bank0
   237  0790  019F               	clrf	31	;volatile
   238                           
   239                           ;TEST_FT64F0AX_ADC.C: 88: ADCMPH=0B00000000;
   240  0791  0028               	movlb	8	; select bank8
   241  0792  019B               	clrf	27	;volatile
   242                           
   243                           ;TEST_FT64F0AX_ADC.C: 89: ADON=1;
   244  0793  0021               	movlb	1	; select bank1
   245  0794  141D               	bsf	29,0	;volatile
   246  0795  0008               	return
   247  0796                     __end_of_ADC_INITIAL:	
   248  007E                     btemp	set	126	;btemp
   249  007E                     wtemp0	set	126
   250  0796                     __ptext3:	
   251 ;; *************** function _GET_ADC_DATA *****************
   252 ;; Defined at:
   253 ;;		line 145 in file "TEST_FT64F0AX_ADC.C"
   254 ;; Parameters:    Size  Location     Type
   255 ;;  adcChannel      1    wreg     unsigned char 
   256 ;; Auto vars:     Size  Location     Type
   257 ;;  adcChannel      1    5[COMMON] unsigned char 
   258 ;; Return value:  Size  Location     Type
   259 ;;                  2    2[COMMON] unsigned int 
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, pclath, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : 0/1
   264 ;;		On exit  : 1F/1
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   267 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   270 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   271 ;;Total ram usage:        4 bytes
   272 ;; Hardware stack levels used:    1
   273 ;; Hardware stack levels required when called:    1
   274 ;; This function calls:
   275 ;;		_DelayUs
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           
   282                           ;psect for function _GET_ADC_DATA
   283  0796                     _GET_ADC_DATA:	
   284                           
   285                           ;incstack = 0
   286                           ; Regs used in _GET_ADC_DATA: [wreg+status,2+status,0+pclath+cstack]
   287                           ;GET_ADC_DATA@adcChannel stored from wreg
   288  0796  00F5               	movwf	GET_ADC_DATA@adcChannel
   289                           
   290                           ;TEST_FT64F0AX_ADC.C: 147: ADCON0&=0B00001111;
   291  0797  300F               	movlw	15
   292  0798  0021               	movlb	1	; select bank1
   293  0799  059D               	andwf	29,f	;volatile
   294                           
   295                           ;TEST_FT64F0AX_ADC.C: 148: ADCON0|=adcChannel<<4;
   296  079A  0E75               	swapf	GET_ADC_DATA@adcChannel,w
   297  079B  39F0               	andlw	240
   298  079C  049D               	iorwf	29,f	;volatile
   299                           
   300                           ;TEST_FT64F0AX_ADC.C: 149: DelayUs(40);
   301  079D  3028               	movlw	40
   302  079E  27AD  3187         	fcall	_DelayUs
   303                           
   304                           ;TEST_FT64F0AX_ADC.C: 150: GO=1;
   305  07A0  0021               	movlb	1	; select bank1
   306  07A1  149D               	bsf	29,1	;volatile
   307                           
   308                           ;TEST_FT64F0AX_ADC.C: 151: __nop();
   309  07A2  0000               	nop
   310                           
   311                           ;TEST_FT64F0AX_ADC.C: 152: __nop();
   312  07A3  0000               	nop
   313  07A4                     l2143:	
   314                           ;TEST_FT64F0AX_ADC.C: 153: while(GO);
   315                           
   316  07A4  0021               	movlb	1	; select bank1
   317  07A5  189D               	btfsc	29,1	;volatile
   318  07A6  2FA4               	goto	l2143
   319                           
   320                           ;TEST_FT64F0AX_ADC.C: 155: return (unsigned int)(ADRESH<<8|ADRESL);
   321  07A7  081C               	movf	28,w	;volatile
   322  07A8  00F3               	movwf	?_GET_ADC_DATA+1
   323  07A9  01F2               	clrf	?_GET_ADC_DATA
   324  07AA  081B               	movf	27,w	;volatile
   325  07AB  04F2               	iorwf	?_GET_ADC_DATA,f
   326  07AC  0008               	return
   327  07AD                     __end_of_GET_ADC_DATA:	
   328  07AD                     __ptext4:	
   329 ;; *************** function _DelayUs *****************
   330 ;; Defined at:
   331 ;;		line 97 in file "TEST_FT64F0AX_ADC.C"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  Time            1    wreg     unsigned char 
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  Time            1    0[COMMON] unsigned char 
   336 ;;  a               1    1[COMMON] unsigned char 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0
   341 ;; Tracked objects:
   342 ;;		On entry : 1F/1
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   350 ;;Total ram usage:        2 bytes
   351 ;; Hardware stack levels used:    1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_GET_ADC_DATA
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           
   360                           ;psect for function _DelayUs
   361  07AD                     _DelayUs:	
   362                           
   363                           ;incstack = 0
   364                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
   365                           ;DelayUs@Time stored from wreg
   366  07AD  00F0               	movwf	DelayUs@Time
   367                           
   368                           ;TEST_FT64F0AX_ADC.C: 99: unsigned char a;
   369                           ;TEST_FT64F0AX_ADC.C: 100: for(a=0;a<Time;a++)
   370  07AE  01F1               	clrf	DelayUs@a
   371  07AF                     l2606:	
   372  07AF  0870               	movf	DelayUs@Time,w
   373  07B0  0271               	subwf	DelayUs@a,w
   374  07B1  1803               	btfsc	3,0
   375  07B2  0008               	return
   376                           
   377                           ;TEST_FT64F0AX_ADC.C: 101: {
   378                           ;TEST_FT64F0AX_ADC.C: 102: __nop();
   379  07B3  0000               	nop
   380  07B4  0AF1               	incf	DelayUs@a,f
   381  07B5  2FAF               	goto	l2606
   382  07B6                     __end_of_DelayUs:	
   383  07B6                     __ptext2:	
   384 ;; *************** function _POWER_INITIAL *****************
   385 ;; Defined at:
   386 ;;		line 40 in file "TEST_FT64F0AX_ADC.C"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2
   395 ;; Tracked objects:
   396 ;;		On entry : B1F/0
   397 ;;		On exit  : B1F/3
   398 ;;		Unchanged: B00/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           
   414                           ;psect for function _POWER_INITIAL
   415  07B6                     _POWER_INITIAL:	
   416                           
   417                           ;TEST_FT64F0AX_ADC.C: 42: OSCCON=0B01110001;
   418                           
   419                           ;incstack = 0
   420                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   421  07B6  3071               	movlw	113
   422  07B7  0021               	movlb	1	; select bank1
   423  07B8  0099               	movwf	25	;volatile
   424                           
   425                           ;TEST_FT64F0AX_ADC.C: 44: PCKEN|=0B00000001;
   426  07B9  141A               	bsf	26,0	;volatile
   427                           
   428                           ;TEST_FT64F0AX_ADC.C: 46: INTCON=0;
   429  07BA  018B               	clrf	11	;volatile
   430                           
   431                           ;TEST_FT64F0AX_ADC.C: 48: PORTA=0B00000000;
   432  07BB  0020               	movlb	0	; select bank0
   433  07BC  018C               	clrf	12	;volatile
   434                           
   435                           ;TEST_FT64F0AX_ADC.C: 49: PORTB=0B00000000;
   436  07BD  018D               	clrf	13	;volatile
   437                           
   438                           ;TEST_FT64F0AX_ADC.C: 50: PORTC=0B00000000;
   439  07BE  018E               	clrf	14	;volatile
   440                           
   441                           ;TEST_FT64F0AX_ADC.C: 52: WPUA=0B00000000;
   442  07BF  0023               	movlb	3	; select bank3
   443  07C0  018C               	clrf	12	;volatile
   444                           
   445                           ;TEST_FT64F0AX_ADC.C: 53: WPUB=0B00000000;
   446  07C1  018D               	clrf	13	;volatile
   447                           
   448                           ;TEST_FT64F0AX_ADC.C: 54: WPUC=0B00000000;
   449  07C2  018E               	clrf	14	;volatile
   450                           
   451                           ;TEST_FT64F0AX_ADC.C: 56: WPDA=0B00000000;
   452  07C3  0024               	movlb	4	; select bank4
   453  07C4  018C               	clrf	12	;volatile
   454                           
   455                           ;TEST_FT64F0AX_ADC.C: 57: WPDB=0B00000000;
   456  07C5  018D               	clrf	13	;volatile
   457                           
   458                           ;TEST_FT64F0AX_ADC.C: 58: WPDC=0B00000000;
   459  07C6  018E               	clrf	14	;volatile
   460                           
   461                           ;TEST_FT64F0AX_ADC.C: 60: TRISA=0B11111111;
   462  07C7  30FF               	movlw	255
   463  07C8  0021               	movlb	1	; select bank1
   464  07C9  008C               	movwf	12	;volatile
   465                           
   466                           ;TEST_FT64F0AX_ADC.C: 61: TRISB=0B11111111;
   467  07CA  008D               	movwf	13	;volatile
   468                           
   469                           ;TEST_FT64F0AX_ADC.C: 62: TRISC=0B00000011;
   470  07CB  3003               	movlw	3
   471  07CC  008E               	movwf	14	;volatile
   472                           
   473                           ;TEST_FT64F0AX_ADC.C: 64: PSRC0=0B11111111;
   474  07CD  30FF               	movlw	255
   475  07CE  0022               	movlb	2	; select bank2
   476  07CF  009A               	movwf	26	;volatile
   477                           
   478                           ;TEST_FT64F0AX_ADC.C: 65: PSRC1=0B11111111;
   479  07D0  009B               	movwf	27	;volatile
   480                           
   481                           ;TEST_FT64F0AX_ADC.C: 66: PSRC2=0B00001111;
   482  07D1  300F               	movlw	15
   483  07D2  009C               	movwf	28	;volatile
   484                           
   485                           ;TEST_FT64F0AX_ADC.C: 68: PSINK0=0B11111111;
   486  07D3  30FF               	movlw	255
   487  07D4  0023               	movlb	3	; select bank3
   488  07D5  009A               	movwf	26	;volatile
   489                           
   490                           ;TEST_FT64F0AX_ADC.C: 69: PSINK1=0B11111111;
   491  07D6  009B               	movwf	27	;volatile
   492                           
   493                           ;TEST_FT64F0AX_ADC.C: 70: PSINK2=0B00000011;
   494  07D7  3003               	movlw	3
   495  07D8  009C               	movwf	28	;volatile
   496                           
   497                           ;TEST_FT64F0AX_ADC.C: 72: ANSELA=0B00000000;
   498  07D9  0197               	clrf	23	;volatile
   499  07DA  0008               	return
   500  07DB                     __end_of_POWER_INITIAL:	
   501  07DB                     __ptext1:	
   502 ;; *************** function ___lmul *****************
   503 ;; Defined at:
   504 ;;		line 15 in file "c:\users\administrator\desktop\ide3.0.3_210603_external_testing\data\sources\common\Umul32.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  multiplier      4    0[COMMON] unsigned long 
   507 ;;  multiplicand    4    4[COMMON] unsigned long 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  product         4    8[COMMON] unsigned long 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  4    0[COMMON] unsigned long 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0
   514 ;; Tracked objects:
   515 ;;		On entry : 1F/1
   516 ;;		On exit  : 1F/1
   517 ;;		Unchanged: 1F/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   519 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   520 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   522 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   523 ;;Total ram usage:       12 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function ___lmul
   534  07DB                     ___lmul:	
   535                           
   536                           ;incstack = 0
   537                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   538  07DB  01F8               	clrf	___lmul@product
   539  07DC  01F9               	clrf	___lmul@product+1
   540  07DD  01FA               	clrf	___lmul@product+2
   541  07DE  01FB               	clrf	___lmul@product+3
   542  07DF                     l2169:	
   543  07DF  1C70               	btfss	___lmul@multiplier,0
   544  07E0  2FE9               	goto	l2660
   545  07E1  0874               	movf	___lmul@multiplicand,w
   546  07E2  07F8               	addwf	___lmul@product,f
   547  07E3  0875               	movf	___lmul@multiplicand+1,w
   548  07E4  3DF9               	addwfc	___lmul@product+1,f
   549  07E5  0876               	movf	___lmul@multiplicand+2,w
   550  07E6  3DFA               	addwfc	___lmul@product+2,f
   551  07E7  0877               	movf	___lmul@multiplicand+3,w
   552  07E8  3DFB               	addwfc	___lmul@product+3,f
   553  07E9                     l2660:	
   554  07E9  35F4               	lslf	___lmul@multiplicand,f
   555  07EA  0DF5               	rlf	___lmul@multiplicand+1,f
   556  07EB  0DF6               	rlf	___lmul@multiplicand+2,f
   557  07EC  0DF7               	rlf	___lmul@multiplicand+3,f
   558  07ED  36F3               	lsrf	___lmul@multiplier+3,f
   559  07EE  0CF2               	rrf	___lmul@multiplier+2,f
   560  07EF  0CF1               	rrf	___lmul@multiplier+1,f
   561  07F0  0CF0               	rrf	___lmul@multiplier,f
   562  07F1  0873               	movf	___lmul@multiplier+3,w
   563  07F2  0472               	iorwf	___lmul@multiplier+2,w
   564  07F3  0471               	iorwf	___lmul@multiplier+1,w
   565  07F4  0470               	iorwf	___lmul@multiplier,w
   566  07F5  1D03               	skipz
   567  07F6  2FDF               	goto	l2169
   568  07F7  087B               	movf	___lmul@product+3,w
   569  07F8  00F3               	movwf	?___lmul+3
   570  07F9  087A               	movf	___lmul@product+2,w
   571  07FA  00F2               	movwf	?___lmul+2
   572  07FB  0879               	movf	___lmul@product+1,w
   573  07FC  00F1               	movwf	?___lmul+1
   574  07FD  0878               	movf	___lmul@product,w
   575  07FE  00F0               	movwf	?___lmul
   576  07FF  0008               	return
   577  0800                     __end_of___lmul:	
   578                           
   579                           	psect	cstackCOMMON
   580  0070                     __pcstackCOMMON:	
   581  0070                     ?_POWER_INITIAL:	
   582  0070                     ??_POWER_INITIAL:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_ADC_INITIAL:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ??_ADC_INITIAL:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_DelayUs:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ??_DelayUs:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_main:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?___lmul:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     DelayUs@Time:	
   604                           ; 4 bytes @ 0x0
   605                           
   606  0070                     ___lmul@multiplier:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 4 bytes @ 0x0
   611  0070                     	ds	1
   612  0071                     DelayUs@a:	
   613                           
   614                           ; 1 bytes @ 0x1
   615  0071                     	ds	1
   616  0072                     ?_GET_ADC_DATA:	
   617                           
   618                           ; 2 bytes @ 0x2
   619  0072                     	ds	2
   620  0074                     ___lmul@multiplicand:	
   621                           
   622                           ; 4 bytes @ 0x4
   623  0074                     	ds	1
   624  0075                     ??_GET_ADC_DATA:	
   625  0075                     GET_ADC_DATA@adcChannel:	
   626                           ; 1 bytes @ 0x5
   627                           
   628                           
   629                           ; 1 bytes @ 0x5
   630  0075                     	ds	3
   631  0078                     ??___lmul:	
   632  0078                     ___lmul@product:	
   633                           ; 1 bytes @ 0x8
   634                           
   635                           
   636                           ; 4 bytes @ 0x8
   637  0078                     	ds	4
   638                           
   639                           	psect	cstackBANK0
   640  0020                     __pcstackBANK0:	
   641  0020                     ??_main:	
   642                           
   643                           ; 1 bytes @ 0x0
   644  0020                     	ds	4


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      4       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lmul
    _GET_ADC_DATA->_DelayUs

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     268
                                              0 BANK0      4     4      0
                        _ADC_INITIAL
                       _GET_ADC_DATA
                      _POWER_INITIAL
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     200
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GET_ADC_DATA                                         4     1      3      68
                                              2 COMMON     4     1      3
                            _DelayUs
 ---------------------------------------------------------------------------------
 (2) _DelayUs                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_INITIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_INITIAL
   _GET_ADC_DATA
     _DelayUs
   _POWER_INITIAL
   ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       6       5        7.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      14      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      14      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Thu Aug 12 15:56:01 2021

   __size_of_ADC_INITIAL 0011                       _GO 04E9                      u105 0778  
                    wreg 0009                     l2143 07A4                     l2151 0755  
                   l2169 07DF                     l2606 07AF                     l2660 07E9  
                   _ADON 04E8                     _WPDA 020C                     _WPDB 020D  
                   _WPDC 020E                     _WPUA 018C                     _WPUB 018D  
                   _WPUC 018E                     _main 0751                     btemp 007E  
                   start 0002          __end_of_DelayUs 07B6                    ?_main 0070  
                  _ADDLY 001F                    _PCKEN 009A                    _PSRC0 011A  
                  _PSRC1 011B                    _PSRC2 011C                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E      ___lmul@multiplicand 0074  
                  wtemp0 007E          __initialization 074F             __end_of_main 0785  
                 ??_main 0020   GET_ADC_DATA@adcChannel 0075     __end_of_GET_ADC_DATA 07AD  
                 _ADCON0 009D                   _ADCON1 009E                   _ADCON2 009F  
                 _ADCON3 041A                   _ADCMPH 041B                   _ADRESH 009C  
                 _ADRESL 009B                   _ANSELA 0197                   _INTCON 000B  
              ??_DelayUs 0070                   _OSCCON 0099                   _PSINK0 019A  
                 _PSINK1 019B                   _PSINK2 019C                   ___lmul 07DB  
  __end_of_POWER_INITIAL 07DB  __end_of__initialization 074F           __pcstackCOMMON 0070  
             __pnvCOMMON 007C            ??_ADC_INITIAL 0070               __pmaintext 0751  
                ?___lmul 0070           ___lmul@product 0078    __size_of_GET_ADC_DATA 0017  
                _DelayUs 07AD                  _adcData 007C             _GET_ADC_DATA 0796  
        __size_of___lmul 0025      __end_of_ADC_INITIAL 0796                  __ptext1 07DB  
                __ptext2 07B6                  __ptext3 0796                  __ptext4 07AD  
                __ptext5 0785     end_of_initialization 074F               _theVoltage 0024  
            _ADC_INITIAL 0785           __end_of___lmul 0800      start_initialization 074F  
               ??___lmul 0078   __size_of_POWER_INITIAL 0025                ___latbits 0003  
          __pcstackBANK0 0020                 ?_DelayUs 0070                __pnvBANK0 0024  
          _POWER_INITIAL 07B6                 DelayUs@a 0071        ___lmul@multiplier 0070  
         ?_POWER_INITIAL 0070              DelayUs@Time 0070         __size_of_DelayUs 0009  
           ?_ADC_INITIAL 0070            __size_of_main 0034          ??_POWER_INITIAL 0070  
          ?_GET_ADC_DATA 0072           ??_GET_ADC_DATA 0075  
