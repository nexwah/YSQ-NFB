

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Nov 16 11:49:43 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F14X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text13,local,class=CODE,merge=1,delta=2
    13                           	psect	pa_nodes0,global,class=CODE,delta=2
    14                           	dabs	1,0x24,1,_CRC_H
    15                           	dabs	1,0x23,1,_CRC_L
    16                           	dabs	1,0x102,0,_iap_ok_flag
    17                           	dabs	1,0x20,1
    18                           	dabs	1,0x101,0,_iap_err_flag
    19                           	dabs	1,0x20,1
    20                           	dabs	1,0x100,0,_read_flag
    21                           	dabs	1,0x20,1
    22                           	dabs	1,0x71,1,_BSR_TMP
    23                           	dabs	1,0x70,1,_W_TMP
    24                           	dabs	1,0x23,2,_CRC_16
    25                           	dabs	1,0x22,1,_iap_recdata
    26                           	dabs	1,0x21,1,_count
    27                           	dabs	1,0x20,1,_flag
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 
    32                           ; 
    33                           ; SFR Addresses
    34  0000                     
    35                           	psect	text0
    36  0000                     __ptext0:		;_read_flag
    37  0008                     _BSREG	set	8
    38  005F                     _GIE	set	95
    39  005E                     _PEIE	set	94
    40  009A                     _PCKEN	set	154
    41  0099                     _OSCCON	set	153
    42  019F                     _AFP1	set	415
    43  0195                     _EECON1	set	405
    44  0194                     _EEDATH	set	404
    45  0193                     _EEDATL	set	403
    46  0192                     _EEADRH	set	402
    47  0191                     _EEADRL	set	401
    48  0CAF                     _EEPGD	set	3247
    49  0CAE                     _CFGS	set	3246
    50  0CA8                     _RD	set	3240
    51  0494                     _URDLL	set	1172
    52  0492                     _URLSR	set	1170
    53  0491                     _URMCR	set	1169
    54  048F                     _URLCR	set	1167
    55  048C                     _URDATAL	set	1164
    56  2493                     _FEF	set	9363
    57  2490                     _RXNEF	set	9360
    58  2470                     _URRXNE	set	9328
    59                           
    60                           	psect	cinit
    61  0021                     start_initialization:	
    62                           ; #config settings
    63                           
    64  0021                     __initialization:	
    65                           
    66                           ; Clear objects allocated to BANK1
    67  0021  30A0               	movlw	low __pbssBANK1
    68  0022  0084               	movwf	4
    69  0023  3000               	movlw	high __pbssBANK1
    70  0024  0085               	movwf	5
    71  0025  3045               	movlw	69
    72  0026  3182  22C5  3180   	fcall	clear_ram0
    73  0029                     end_of_initialization:	
    74                           ;End of C runtime variable initialization code
    75                           
    76  0029                     __end_of__initialization:	
    77  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    78  002A  0020               	movlb	0
    79  002B  282C               	ljmp	_main	;jump to C main() function
    80  002C                     __pmaintext:	
    81                           ; 1 bytes @ 0xF
    82 ;;
    83 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    84 ;;
    85 ;; *************** function _main *****************
    86 ;; Defined at:
    87 ;;		line 364 in file "IAP_FW.C"
    88 ;; Parameters:    Size  Location     Type
    89 ;;		None
    90 ;; Auto vars:     Size  Location     Type
    91 ;;		None
    92 ;; Return value:  Size  Location     Type
    93 ;;                  1    wreg      void 
    94 ;; Registers used:
    95 ;;		wreg, status,2, status,0, pclath, cstack
    96 ;; Tracked objects:
    97 ;;		On entry : B1F/0
    98 ;;		On exit  : 0/0
    99 ;;		Unchanged: 0/0
   100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   101 ;;      Params:         0       0       0       0       0       0       0       0
   102 ;;      Locals:         0       0       0       0       0       0       0       0
   103 ;;      Temps:          0       0       0       0       0       0       0       0
   104 ;;      Totals:         0       0       0       0       0       0       0       0
   105 ;;Total ram usage:        0 bytes
   106 ;; Hardware stack levels required when called:    8
   107 ;; This function calls:
   108 ;;		_Power_On_App_Check
   109 ;;		_iap_usart_init
   110 ;; This function is called by:
   111 ;;		Startup code after reset
   112 ;; This function uses a non-reentrant model
   113 ;;
   114                           
   115                           
   116                           ;psect for function _main
   117  002C                     _main:	
   118                           
   119                           ;IAP_FW.C: 366: iap_usart_init();
   120                           
   121                           ;incstack = 0
   122                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   123  002C  2035  3180         	fcall	_iap_usart_init
   124                           
   125                           ;IAP_FW.C: 367: Power_On_App_Check();
   126  002E  2046               	fcall	_Power_On_App_Check
   127                           
   128                           ;IAP_FW.C: 369: GIE=1;
   129  002F  178B               	bsf	11,7	;volatile
   130                           
   131                           ;IAP_FW.C: 370: PEIE=1;
   132  0030  170B               	bsf	11,6	;volatile
   133                           
   134                           ;IAP_FW.C: 372: if(read_flag !=1)
   135  0031  1C20               	btfss	32,0
   136  0032  2C00               	goto	1024	;# 
   137  0033                     l1737:	
   138                           ;IAP_FW.C: 375: }
   139                           ;IAP_FW.C: 376: while(1)
   140                           
   141  0033  0064               	clrwdt	;# 
   142  0034  2833               	goto	l1737
   143  0035                     __end_of_main:	
   144  0035                     __ptext1:	
   145 ;; *************** function _iap_usart_init *****************
   146 ;; Defined at:
   147 ;;		line 4 in file "USART_DRV.C"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg
   156 ;; Tracked objects:
   157 ;;		On entry : B1F/0
   158 ;;		On exit  : B1F/9
   159 ;;		Unchanged: B00/0
   160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   161 ;;      Params:         0       0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0       0
   164 ;;      Totals:         0       0       0       0       0       0       0       0
   165 ;;Total ram usage:        0 bytes
   166 ;; Hardware stack levels used:    1
   167 ;; Hardware stack levels required when called:    5
   168 ;; This function calls:
   169 ;;		Nothing
   170 ;; This function is called by:
   171 ;;		_main
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           
   176                           ;psect for function _iap_usart_init
   177  0035                     _iap_usart_init:	
   178                           
   179                           ;USART_DRV.C: 7: PCKEN = (0X1<<5 );
   180                           
   181                           ;incstack = 0
   182                           ; Regs used in _iap_usart_init: [wreg]
   183  0035  3020               	movlw	32
   184  0036  0021               	movlb	1	; select bank1
   185  0037  009A               	movwf	26	;volatile
   186                           
   187                           ;USART_DRV.C: 8: OSCCON = 0B01110001;
   188  0038  3071               	movlw	113
   189  0039  0099               	movwf	25	;volatile
   190                           
   191                           ;USART_DRV.C: 11: AFP1 = 0B00000100;
   192  003A  3004               	movlw	4
   193  003B  0023               	movlb	3	; select bank3
   194  003C  009F               	movwf	31	;volatile
   195                           
   196                           ;USART_DRV.C: 14: URDLL=104;
   197  003D  3068               	movlw	104
   198  003E  0029               	movlb	9	; select bank9
   199  003F  0094               	movwf	20	;volatile
   200                           
   201                           ;USART_DRV.C: 19: URLCR=(0x1 );
   202  0040  3001               	movlw	1
   203  0041  008F               	movwf	15	;volatile
   204                           
   205                           ;USART_DRV.C: 21: URMCR=(0X1<<4 )|(0x1<<3 );
   206  0042  3018               	movlw	24
   207  0043  0091               	movwf	17	;volatile
   208                           
   209                           ;USART_DRV.C: 23: URRXNE |= (0X1<<0 );
   210  0044  140E               	bsf	14,0	;volatile
   211  0045  0008               	return
   212  0046                     __end_of_iap_usart_init:	
   213  0046                     __ptext2:	
   214 ;; *************** function _Power_On_App_Check *****************
   215 ;; Defined at:
   216 ;;		line 87 in file "IAP_FW.C"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;  CRC_Eeprom      2   13[BANK0 ] unsigned int 
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, pclath, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : B1F/9
   227 ;;		On exit  : 1F/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   230 ;;      Params:         0       0       0       0       0       0       0       0
   231 ;;      Locals:         0       2       0       0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0
   233 ;;      Totals:         0       2       0       0       0       0       0       0
   234 ;;Total ram usage:        2 bytes
   235 ;; Hardware stack levels used:    1
   236 ;; Hardware stack levels required when called:    7
   237 ;; This function calls:
   238 ;;		_All_Page_Read_CRC
   239 ;;		_EEPROMread
   240 ;; This function is called by:
   241 ;;		_main
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           
   246                           ;psect for function _Power_On_App_Check
   247  0046                     _Power_On_App_Check:	
   248                           
   249                           ;IAP_FW.C: 89: unsigned int CRC_Eeprom;
   250                           ;IAP_FW.C: 91: count=0;
   251                           
   252                           ;incstack = 0
   253                           ; Regs used in _Power_On_App_Check: [wreg+status,2+status,0+pclath+cstack]
   254  0046  0020               	movlb	0	; select bank0
   255  0047  3000               	movlw	0
   256  0048  01A1               	clrf	33
   257                           
   258                           ;IAP_FW.C: 92: flag=0;
   259  0049  01A0               	clrf	32
   260                           
   261                           ;IAP_FW.C: 94: CRC_Eeprom=EEPROMread(0);
   262  004A  2064  3180         	fcall	_EEPROMread
   263  004C  00B2               	movwf	Power_On_App_Check@CRC_Eeprom
   264  004D  01B3               	clrf	Power_On_App_Check@CRC_Eeprom+1
   265                           
   266                           ;IAP_FW.C: 95: CRC_Eeprom= CRC_Eeprom << 8;
   267  004E  00B3               	movwf	Power_On_App_Check@CRC_Eeprom+1
   268  004F  3001               	movlw	1
   269  0050  01B2               	clrf	Power_On_App_Check@CRC_Eeprom
   270                           
   271                           ;IAP_FW.C: 96: CRC_Eeprom= CRC_Eeprom + EEPROMread(1);
   272  0051  2064  3180         	fcall	_EEPROMread
   273  0053  07B2               	addwf	Power_On_App_Check@CRC_Eeprom,f
   274  0054  1803               	skipnc
   275  0055  0AB3               	incf	Power_On_App_Check@CRC_Eeprom+1,f
   276                           
   277                           ;IAP_FW.C: 98: All_Page_Read_CRC();
   278  0056  2077  3180         	fcall	_All_Page_Read_CRC
   279                           
   280                           ;IAP_FW.C: 99: if(CRC_Eeprom == CRC_16)
   281  0058  0824               	movf	36,w
   282  0059  0633               	xorwf	Power_On_App_Check@CRC_Eeprom+1,w
   283  005A  1D03               	skipz
   284  005B  285E               	goto	u705
   285  005C  0823               	movf	35,w
   286  005D  0632               	xorwf	Power_On_App_Check@CRC_Eeprom,w
   287  005E                     u705:	
   288  005E  1D03               	skipz
   289  005F  2862               	goto	l1648
   290                           
   291                           ;IAP_FW.C: 100: {
   292                           ;IAP_FW.C: 101: read_flag=0;
   293  0060  1020               	bcf	32,0
   294                           
   295                           ;IAP_FW.C: 102: }
   296  0061  0008               	return
   297  0062                     l1648:	
   298                           
   299                           ;IAP_FW.C: 103: else
   300                           ;IAP_FW.C: 104: {
   301                           ;IAP_FW.C: 105: read_flag=1;
   302  0062  1420               	bsf	32,0
   303  0063  0008               	return
   304  0064                     __end_of_Power_On_App_Check:	
   305  0064                     __ptext3:	
   306 ;; *************** function _EEPROMread *****************
   307 ;; Defined at:
   308 ;;		line 48 in file "MEM_DRV.C"
   309 ;; Parameters:    Size  Location     Type
   310 ;;  EEAddr          1    wreg     unsigned char 
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  EEAddr          1    5[BANK0 ] unsigned char 
   313 ;;  ReEEPROMread    1    6[BANK0 ] unsigned char 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      unsigned char 
   316 ;; Registers used:
   317 ;;		wreg
   318 ;; Tracked objects:
   319 ;;		On entry : 1F/0
   320 ;;		On exit  : 1F/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   323 ;;      Params:         0       0       0       0       0       0       0       0
   324 ;;      Locals:         0       2       0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0       0
   326 ;;      Totals:         0       2       0       0       0       0       0       0
   327 ;;Total ram usage:        2 bytes
   328 ;; Hardware stack levels used:    1
   329 ;; Hardware stack levels required when called:    5
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_Power_On_App_Check
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           
   338                           ;psect for function _EEPROMread
   339  0064                     _EEPROMread:	
   340                           
   341                           ;incstack = 0
   342                           ; Regs used in _EEPROMread: [wreg]
   343                           ;EEPROMread@EEAddr stored from wreg
   344  0064  00AA               	movwf	EEPROMread@EEAddr
   345                           
   346                           ;MEM_DRV.C: 50: unsigned char ReEEPROMread;
   347                           ;MEM_DRV.C: 52: EEADRL = EEAddr;
   348  0065  0023               	movlb	3	; select bank3
   349  0066  0091               	movwf	17	;volatile
   350                           
   351                           ;MEM_DRV.C: 54: EEPGD=0;
   352  0067  1395               	bcf	21,7	;volsfr
   353                           
   354                           ;MEM_DRV.C: 55: CFGS=0;
   355  0068  1315               	bcf	21,6	;volsfr
   356                           
   357                           ;MEM_DRV.C: 56: RD = 1;
   358  0069  1415               	bsf	21,0	;volsfr
   359                           
   360                           ;MEM_DRV.C: 57: __nop();
   361  006A  0000               	nop
   362                           
   363                           ;MEM_DRV.C: 58: __nop();
   364  006B  0000               	nop
   365                           
   366                           ;MEM_DRV.C: 59: __nop();
   367  006C  0000               	nop
   368                           
   369                           ;MEM_DRV.C: 60: __nop();
   370  006D  0000               	nop
   371                           
   372                           ;MEM_DRV.C: 61: ReEEPROMread = EEDATL;
   373  006E  0023               	movlb	3	; select bank3
   374  006F  0813               	movf	19,w	;volatile
   375  0070  0020               	movlb	0	; select bank0
   376  0071  00AB               	movwf	EEPROMread@ReEEPROMread
   377                           
   378                           ;MEM_DRV.C: 62: RD=0;
   379  0072  0023               	movlb	3	; select bank3
   380  0073  1015               	bcf	21,0	;volsfr
   381                           
   382                           ;MEM_DRV.C: 63: return ReEEPROMread;
   383  0074  0020               	movlb	0	; select bank0
   384  0075  082B               	movf	EEPROMread@ReEEPROMread,w
   385  0076  0008               	return
   386  0077                     __end_of_EEPROMread:	
   387  0077                     __ptext4:	
   388 ;; *************** function _All_Page_Read_CRC *****************
   389 ;; Defined at:
   390 ;;		line 58 in file "IAP_FW.C"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  iap_addr        2   11[BANK0 ] unsigned int 
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 1F/0
   401 ;;		On exit  : 1F/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   404 ;;      Params:         0       0       0       0       0       0       0       0
   405 ;;      Locals:         0       2       0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0       0
   407 ;;      Totals:         0       2       0       0       0       0       0       0
   408 ;;Total ram usage:        2 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; Hardware stack levels required when called:    6
   411 ;; This function calls:
   412 ;;		_CRC16_CCITT
   413 ;;		_iap_mem_rd
   414 ;; This function is called by:
   415 ;;		_Power_On_App_Check
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _All_Page_Read_CRC
   421  0077                     _All_Page_Read_CRC:	
   422                           
   423                           ;IAP_FW.C: 60: unsigned int iap_addr;
   424                           ;IAP_FW.C: 61: CRC_16 = 0;
   425                           
   426                           ;incstack = 0
   427                           ; Regs used in _All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
   428                           
   429                           ;IAP_FW.C: 62: EECON1 = (0x1<<7 )|(0X1<<2 );
   430  0077  3182  22A0  3180   	fcall	PL10	;call to abstracted procedure
   431  007A  0095               	movwf	21	;volsfr
   432                           
   433                           ;IAP_FW.C: 63: for(iap_addr=0X400;iap_addr<0x1000;iap_addr++)
   434  007B  0020               	movlb	0	; select bank0
   435  007C  3004               	movlw	4
   436  007D  01B0               	clrf	All_Page_Read_CRC@iap_addr
   437  007E  00B1               	movwf	All_Page_Read_CRC@iap_addr+1
   438  007F                     l5862:	
   439                           
   440                           ;IAP_FW.C: 64: {
   441                           ;IAP_FW.C: 65: EEADRH = iap_addr>>8;
   442  007F  0831               	movf	All_Page_Read_CRC@iap_addr+1,w
   443  0080  0023               	movlb	3	; select bank3
   444  0081  0092               	movwf	18	;volatile
   445                           
   446                           ;IAP_FW.C: 66: EEADRL = iap_addr>>0;
   447  0082  0020               	movlb	0	; select bank0
   448  0083  0830               	movf	All_Page_Read_CRC@iap_addr,w
   449  0084  0023               	movlb	3	; select bank3
   450  0085  0091               	movwf	17	;volatile
   451                           
   452                           ;IAP_FW.C: 67: iap_mem_rd();
   453  0086  20B9  3180         	fcall	_iap_mem_rd
   454                           
   455                           ;IAP_FW.C: 68: CRC16_CCITT(EEDATL);
   456  0088  0813               	movf	19,w	;volatile
   457  0089  209A  3180         	fcall	_CRC16_CCITT
   458                           
   459                           ;IAP_FW.C: 69: CRC16_CCITT(EEDATH);
   460  008B  0023               	movlb	3	; select bank3
   461  008C  0814               	movf	20,w	;volatile
   462  008D  209A  3180         	fcall	_CRC16_CCITT
   463  008F  0AB0               	incf	All_Page_Read_CRC@iap_addr,f
   464  0090  1903               	skipnz
   465  0091  0AB1               	incf	All_Page_Read_CRC@iap_addr+1,f
   466  0092  3010               	movlw	16
   467  0093  0231               	subwf	All_Page_Read_CRC@iap_addr+1,w
   468  0094  3000               	movlw	0
   469  0095  1903               	skipnz
   470  0096  0230               	subwf	All_Page_Read_CRC@iap_addr,w
   471  0097  1803               	btfsc	3,0
   472  0098  0008               	return
   473  0099  287F               	goto	l5862
   474  009A                     __end_of_All_Page_Read_CRC:	
   475  009A                     __ptext6:	
   476 ;; *************** function _CRC16_CCITT *****************
   477 ;; Defined at:
   478 ;;		line 42 in file "IAP_FW.C"
   479 ;; Parameters:    Size  Location     Type
   480 ;;  data            1    wreg     unsigned char 
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  data            1    9[BANK0 ] unsigned char 
   483 ;;  i               1   10[BANK0 ] unsigned char 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0
   488 ;; Tracked objects:
   489 ;;		On entry : 1F/3
   490 ;;		On exit  : 1F/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   493 ;;      Params:         0       0       0       0       0       0       0       0
   494 ;;      Locals:         0       2       0       0       0       0       0       0
   495 ;;      Temps:          0       4       0       0       0       0       0       0
   496 ;;      Totals:         0       6       0       0       0       0       0       0
   497 ;;Total ram usage:        6 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    5
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_All_Page_Read_CRC
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _CRC16_CCITT
   509  009A                     _CRC16_CCITT:	
   510                           
   511                           ;incstack = 0
   512                           ; Regs used in _CRC16_CCITT: [wreg+status,2+status,0]
   513                           ;CRC16_CCITT@data stored from wreg
   514  009A  0020               	movlb	0	; select bank0
   515  009B  00AE               	movwf	CRC16_CCITT@data
   516                           
   517                           ;IAP_FW.C: 45: unsigned char i;
   518                           ;IAP_FW.C: 47: CRC_16 ^= data;
   519  009C  06A3               	xorwf	35,f
   520                           
   521                           ;IAP_FW.C: 49: for(i = 0;i < 8;i++)
   522  009D  01AF               	clrf	CRC16_CCITT@i
   523  009E                     l1633:	
   524                           
   525                           ;IAP_FW.C: 50: {
   526                           ;IAP_FW.C: 51: if(CRC_16 & 0x01)
   527  009E  1C23               	btfss	35,0
   528  009F  28B1               	goto	l5814
   529                           
   530                           ;IAP_FW.C: 52: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
   531  00A0  0824               	movf	36,w
   532  00A1  00AB               	movwf	??_CRC16_CCITT+1
   533  00A2  0823               	movf	35,w
   534  00A3  00AA               	movwf	??_CRC16_CCITT
   535  00A4  3008               	movlw	8
   536  00A5  36AB               	lsrf	??_CRC16_CCITT+1,f
   537  00A6  0CAA               	rrf	??_CRC16_CCITT,f
   538  00A7  062A               	xorwf	??_CRC16_CCITT,w
   539  00A8  00AC               	movwf	??_CRC16_CCITT+2
   540  00A9  3084               	movlw	132
   541  00AA  062B               	xorwf	??_CRC16_CCITT+1,w
   542  00AB  00AD               	movwf	??_CRC16_CCITT+3
   543  00AC  082C               	movf	??_CRC16_CCITT+2,w
   544  00AD  00A3               	movwf	35
   545  00AE  082D               	movf	??_CRC16_CCITT+3,w
   546  00AF  00A4               	movwf	36
   547  00B0  28B3               	goto	l1636
   548  00B1                     l5814:	
   549                           
   550                           ;IAP_FW.C: 53: else
   551                           ;IAP_FW.C: 54: CRC_16 = CRC_16 >> 1;
   552  00B1  36A4               	lsrf	36,f
   553  00B2  0CA3               	rrf	35,f
   554  00B3                     l1636:	
   555  00B3  3008               	movlw	8
   556  00B4  0AAF               	incf	CRC16_CCITT@i,f
   557  00B5  022F               	subwf	CRC16_CCITT@i,w
   558  00B6  1803               	btfsc	3,0
   559  00B7  0008               	return
   560  00B8  289E               	goto	l1633
   561  00B9                     __end_of_CRC16_CCITT:	
   562  00B9                     __ptext5:	
   563 ;; *************** function _iap_mem_rd *****************
   564 ;; Defined at:
   565 ;;		line 34 in file "MEM_DRV.C"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		None
   574 ;; Tracked objects:
   575 ;;		On entry : 1F/3
   576 ;;		On exit  : 1F/3
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   579 ;;      Params:         0       0       0       0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    5
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_All_Page_Read_CRC
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _iap_mem_rd
   595  00B9                     _iap_mem_rd:	
   596                           
   597                           ;MEM_DRV.C: 36: EECON1 |=(0x1<<0 );
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _iap_mem_rd: []
   601  00B9  1415               	bsf	21,0	;volsfr
   602  00BA  0000               	nop	;# 
   603  00BB                     l3352:	
   604                           ;MEM_DRV.C: 38: while(EECON1 & (0x1<<0 ));
   605                           
   606  00BB  0023               	movlb	3	; select bank3
   607  00BC  1815               	btfsc	21,0	;volsfr
   608  00BD  28BB               	goto	l3352
   609  00BE  0008               	return
   610  00BF                     __end_of_iap_mem_rd:	
   611                           
   612                           	psect	bssBANK1
   613  00A0                     __pbssBANK1:	
   614  00A0                     _iap_databuf:	
   615  00A0                     	ds	69
   616                           
   617                           	psect	clrtext
   618  02C5                     clear_ram0:	
   619                           ;	Called with FSR0 containing the base address, and
   620                           ;	WREG with the size to clear
   621                           
   622  02C5  0064               	clrwdt	;clear the watchdog before getting into this loop
   623  02C6                     clrloop0:	
   624  02C6  0180               	clrf	0	;clear RAM location pointed to by FSR
   625  02C7  3101               	addfsr 0,1
   626  02C8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   627  02C9  2AC6               	goto	clrloop0	;have we reached the end yet?
   628  02CA  3400               	retlw	0	;all done for this memory range, return
   629                           
   630                           	psect	cstackCOMMON
   631  0072                     __pcstackCOMMON:	
   632  0072                     ?_iap_mem_rd:	
   633  0072                     ?_iap_mem_prog:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0072                     ??_iap_mem_prog:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0072                     ?_EEPROMread:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0072                     ?_user_isr:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0072                     ?_iap_usart_rec:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0072                     ?_iap_mem_erase:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0072                     ??_iap_mem_erase:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0072                     ?_iap_usart_init:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0072                     ?_CRC16_CCITT:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0072                     ?_All_Page_Read_CRC:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0072                     ?_Eeprom_Write_Crc:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0072                     ?_Power_On_App_Check:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0072                     ?_data_check_erase_or_not:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0072                     ?_ISR:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0072                     ?_main:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0072                     ?_Unlock_Flash:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0072                     ??_Unlock_Flash:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0072                     ?_DelayUs:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0072                     ??_DelayUs:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0072                     ?i1_CRC16_CCITT:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0072                     ??i1_CRC16_CCITT:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0072                     ?i1_All_Page_Read_CRC:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0072                     ?i1_iap_mem_rd:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0072                     ??i1_iap_mem_rd:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0072                     DelayUs@a:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0072                     data_check_erase_or_not@addr:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 2 bytes @ 0x0
   713  0072                     	ds	1
   714  0073                     ??_iap_usart_rec:	
   715  0073                     iap_usart_rec@a:	
   716                           ; 1 bytes @ 0x1
   717                           
   718                           
   719                           ; 2 bytes @ 0x1
   720  0073                     	ds	1
   721  0074                     data_check_erase_or_not@mode:	
   722                           
   723                           ; 1 bytes @ 0x2
   724  0074                     	ds	1
   725  0075                     ??_data_check_erase_or_not:	
   726                           
   727                           ; 1 bytes @ 0x3
   728  0075                     	ds	1
   729  0076                     data_check_erase_or_not@j:	
   730  0076                     i1CRC16_CCITT@data:	
   731                           ; 1 bytes @ 0x4
   732                           
   733                           
   734                           ; 1 bytes @ 0x4
   735  0076                     	ds	1
   736  0077                     data_check_erase_or_not@k:	
   737  0077                     i1CRC16_CCITT@i:	
   738                           ; 1 bytes @ 0x5
   739                           
   740                           
   741                           ; 1 bytes @ 0x5
   742  0077                     	ds	1
   743  0078                     ??i1_All_Page_Read_CRC:	
   744  0078                     data_check_erase_or_not@i:	
   745                           ; 1 bytes @ 0x6
   746                           
   747  0078                     i1All_Page_Read_CRC@iap_addr:	
   748                           ; 1 bytes @ 0x6
   749                           
   750                           
   751                           ; 2 bytes @ 0x6
   752  0078                     	ds	2
   753  007A                     ??_user_isr:	
   754  007A                     ??_Eeprom_Write_Crc:	
   755                           ; 1 bytes @ 0x8
   756                           
   757                           
   758                           ; 1 bytes @ 0x8
   759  007A                     	ds	1
   760  007B                     ??_ISR:	
   761                           
   762                           	psect	cstackBANK0
   763  0025                     __pcstackBANK0:	
   764                           ; 1 bytes @ 0x9
   765                           
   766  0025                     user_isr@CRC16_dat1:	
   767                           
   768                           ; 2 bytes @ 0x0
   769  0025                     	ds	2
   770  0027                     user_isr@iap_addr:	
   771                           
   772                           ; 2 bytes @ 0x2
   773  0027                     	ds	2
   774  0029                     user_isr@i:	
   775                           
   776                           ; 1 bytes @ 0x4
   777  0029                     	ds	1
   778  002A                     ??_iap_mem_rd:	
   779  002A                     ??_EEPROMread:	
   780                           ; 1 bytes @ 0x5
   781                           
   782  002A                     ??_iap_usart_init:	
   783                           ; 1 bytes @ 0x5
   784                           
   785  002A                     ??_CRC16_CCITT:	
   786                           ; 1 bytes @ 0x5
   787                           
   788  002A                     EEPROMread@EEAddr:	
   789                           ; 1 bytes @ 0x5
   790                           
   791                           
   792                           ; 1 bytes @ 0x5
   793  002A                     	ds	1
   794  002B                     EEPROMread@ReEEPROMread:	
   795                           
   796                           ; 1 bytes @ 0x6
   797  002B                     	ds	3
   798  002E                     CRC16_CCITT@data:	
   799                           
   800                           ; 1 bytes @ 0x9
   801  002E                     	ds	1
   802  002F                     CRC16_CCITT@i:	
   803                           
   804                           ; 1 bytes @ 0xA
   805  002F                     	ds	1
   806  0030                     ??_All_Page_Read_CRC:	
   807  0030                     All_Page_Read_CRC@iap_addr:	
   808                           ; 1 bytes @ 0xB
   809                           
   810                           
   811                           ; 2 bytes @ 0xB
   812  0030                     	ds	2
   813  0032                     ??_Power_On_App_Check:	
   814  0032                     Power_On_App_Check@CRC_Eeprom:	
   815                           ; 1 bytes @ 0xD
   816                           
   817                           
   818                           ; 2 bytes @ 0xD
   819  0032                     	ds	2
   820  0034                     ??_main:	
   821                           
   822                           	psect	intentry
   823  0004                     __pintentry:	
   824 ;; *************** function _ISR *****************
   825 ;; Defined at:
   826 ;;		line 143 in file "IAP_FW.C"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   840 ;;      Params:         0       0       0       0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0
   843 ;;      Totals:         0       0       0       0       0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    4
   847 ;; This function calls:
   848 ;;		_user_isr
   849 ;; This function is called by:
   850 ;;		Interrupt level 1
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854  0004                     _ISR:	
   855                           
   856                           ;incstack = 0
   857  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   858                           
   859                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   860  0005  3180               	pagesel	$
   861  0006  0000               	nop	; ;# 
   862  0007  0000               	nop	; ;# 
   863  0008  0000               	nop	; ;# 
   864  0009  0000               	nop	; ;# 
   865  000A  0000               	nop	; ;# 
   866  000B  0000               	nop	; ;# 
   867  000C  0000               	nop	; ;# 
   868  000D  0000               	nop	; ;# 
   869  000E  0000               	nop	; ;# 
   870  000F  0000               	nop	; ;# 
   871  0010  0000               	nop	; ;# 
   872  0011  0000               	nop	; ;# 
   873  0012  0000               	nop	; ;# 
   874  0013  0000               	nop	; ;# 
   875  0014  0000               	nop	; ;# 
   876  0015  0000               	nop	; ;# 
   877  0016  0000               	nop	; ;# 
   878  0017  0000               	nop	; ;# 
   879  0018  0000               	nop	; ;# 
   880  0019  0000               	nop	; ;# 
   881  001A  0000               	nop	; ;# 
   882                           
   883                           ;IAP_FW.C: 168: user_isr();
   884  001B  3180  20D3         	fcall	_user_isr
   885  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   886  001E  0009               	retfie
   887  001F                     __end_of_ISR:	
   888                           
   889                           	psect	swtext1
   890  02A5                     __pswtext1:	
   891  02A5                     i1S6220:	
   892  02A5  3181  2903         	ljmp	i1l1677
   893  02A7  3181  2903         	ljmp	i1l1677
   894  02A9  3181  2903         	ljmp	i1l1677
   895  02AB  3181  2903         	ljmp	i1l1677
   896  02AD  3181  2903         	ljmp	i1l1677
   897  02AF  3181  2903         	ljmp	i1l1677
   898  02B1  3181  2903         	ljmp	i1l1677
   899  02B3  3181  2903         	ljmp	i1l1677
   900  02B5  3180  28DE         	ljmp	i1l6010
   901  02B7  3180  28E4         	ljmp	i1l6014
   902  02B9  3180  28E6         	ljmp	i1l6018
   903  02BB  3180  28E8         	ljmp	i1l6022
   904  02BD  3180  28EA         	ljmp	i1l6026
   905  02BF  3180  28EC         	ljmp	i1l6030
   906  02C1  3180  28EE         	ljmp	i1l6034
   907  02C3  3180  28F0         	ljmp	i1l6038
   908                           
   909                           	psect	text13
   910  00BF                     __ptext13:	
   911 ;; *************** function _Eeprom_Write_Crc *****************
   912 ;; Defined at:
   913 ;;		line 72 in file "IAP_FW.C"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0, pclath, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 1F/3
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   927 ;;      Params:         0       0       0       0       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0       0
   930 ;;      Totals:         0       0       0       0       0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    2
   934 ;; This function calls:
   935 ;;		_iap_mem_prog
   936 ;;		i1_All_Page_Read_CRC
   937 ;; This function is called by:
   938 ;;		_user_isr
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _Eeprom_Write_Crc
   944  00BF                     _Eeprom_Write_Crc:	
   945                           
   946                           ;IAP_FW.C: 74: All_Page_Read_CRC();
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _Eeprom_Write_Crc: [wreg+status,2+status,0+pclath+cstack]
   950  00BF  2222  3180         	fcall	i1_All_Page_Read_CRC
   951                           
   952                           ;IAP_FW.C: 76: EECON1 &=~(0x1<<7 );
   953  00C1  0023               	movlb	3	; select bank3
   954  00C2  1395               	bcf	21,7	;volsfr
   955                           
   956                           ;IAP_FW.C: 77: EECON1 =(0X1<<2 );
   957  00C3  3004               	movlw	4
   958  00C4  0095               	movwf	21	;volsfr
   959                           
   960                           ;IAP_FW.C: 79: EEADRL=0;
   961  00C5  0191               	clrf	17	;volatile
   962                           
   963                           ;IAP_FW.C: 80: EEDATL=CRC_H;
   964  00C6  0020               	movlb	0	; select bank0
   965  00C7  0824               	movf	36,w
   966  00C8  0023               	movlb	3	; select bank3
   967  00C9  0093               	movwf	19	;volatile
   968                           
   969                           ;IAP_FW.C: 81: iap_mem_prog();
   970  00CA  21F0  3180         	fcall	_iap_mem_prog
   971                           
   972                           ;IAP_FW.C: 82: EEADRL=1;
   973  00CC  3001               	movlw	1
   974  00CD  0091               	movwf	17	;volatile
   975                           
   976                           ;IAP_FW.C: 83: EEDATL=CRC_L;
   977  00CE  0020               	movlb	0	; select bank0
   978  00CF  0823               	movf	35,w
   979  00D0  0023               	movlb	3	; select bank3
   980  00D1  0093               	movwf	19	;volatile
   981                           
   982                           ;IAP_FW.C: 84: iap_mem_prog();
   983  00D2  29F0               	ljmp	i1l5820
   984  00D3                     __end_of_Eeprom_Write_Crc:	
   985  00D3                     __ptext8:	
   986 ;; *************** function _user_isr *****************
   987 ;; Defined at:
   988 ;;		line 170 in file "IAP_FW.C"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  iap_addr        2    2[BANK0 ] unsigned int 
   993 ;;  CRC16_dat1      2    0[BANK0 ] unsigned int 
   994 ;;  i               1    4[BANK0 ] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1004 ;;      Params:         0       0       0       0       0       0       0       0
  1005 ;;      Locals:         0       5       0       0       0       0       0       0
  1006 ;;      Temps:          1       0       0       0       0       0       0       0
  1007 ;;      Totals:         1       5       0       0       0       0       0       0
  1008 ;;Total ram usage:        6 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; Hardware stack levels required when called:    3
  1011 ;; This function calls:
  1012 ;;		_Eeprom_Write_Crc
  1013 ;;		_data_check_erase_or_not
  1014 ;;		_iap_mem_erase
  1015 ;;		_iap_mem_prog
  1016 ;;		_iap_usart_rec
  1017 ;;		i1_CRC16_CCITT
  1018 ;; This function is called by:
  1019 ;;		_ISR
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _user_isr
  1025  00D3                     _user_isr:	
  1026                           
  1027                           ;IAP_FW.C: 173: if(URRXNE && RXNEF)
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in _user_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1031  00D3  0029               	movlb	9	; select bank9
  1032  00D4  180E               	btfsc	14,0	;volatile
  1033  00D5  1C12               	btfss	18,0	;volatile
  1034  00D6  29BD               	goto	i1l1671
  1035                           
  1036                           ;IAP_FW.C: 174: {
  1037                           ;IAP_FW.C: 175: if(FEF==1)
  1038  00D7  1992               	btfsc	18,3	;volatile
  1039                           
  1040                           ;IAP_FW.C: 176: {FEF=0;}
  1041  00D8  1192               	bcf	18,3	;volatile
  1042                           
  1043                           ;IAP_FW.C: 177: iap_recdata= URDATAL;
  1044  00D9  080C               	movf	12,w	;volatile
  1045  00DA  0020               	movlb	0	; select bank0
  1046  00DB  00A2               	movwf	34
  1047                           
  1048                           ;IAP_FW.C: 178: count++;
  1049  00DC  0AA1               	incf	33,f
  1050                           
  1051                           ;IAP_FW.C: 179: switch(count)
  1052  00DD  28F6               	goto	i1l6044
  1053  00DE                     i1l6010:	
  1054                           
  1055                           ;IAP_FW.C: 183: if(iap_recdata != 0x46)
  1056  00DE  3046               	movlw	70
  1057  00DF                     L1:	
  1058  00DF  0622               	xorwf	34,w
  1059  00E0  1903               	btfsc	3,2
  1060  00E1  2903               	goto	i1l1677
  1061  00E2                     i1l6012:	
  1062                           
  1063                           ;IAP_FW.C: 184: {iap_err_flag=1;}
  1064  00E2  14A0               	bsf	32,1
  1065  00E3  2903               	goto	i1l1677
  1066  00E4                     i1l6014:	
  1067                           
  1068                           ;IAP_FW.C: 189: if(iap_recdata != 0x4D)
  1069  00E4  304D               	movlw	77
  1070  00E5  28DF               	goto	L1
  1071  00E6                     i1l6018:	
  1072                           
  1073                           ;IAP_FW.C: 195: if(iap_recdata!= 0x44)
  1074  00E6  3044               	movlw	68
  1075  00E7  28DF               	goto	L1
  1076  00E8                     i1l6022:	
  1077                           
  1078                           ;IAP_FW.C: 201: if(iap_recdata != 0x49)
  1079  00E8  3049               	movlw	73
  1080  00E9  28DF               	goto	L1
  1081  00EA                     i1l6026:	
  1082                           
  1083                           ;IAP_FW.C: 207: if(iap_recdata != 0x41)
  1084  00EA  3041               	movlw	65
  1085  00EB  28DF               	goto	L1
  1086  00EC                     i1l6030:	
  1087                           
  1088                           ;IAP_FW.C: 213: if(iap_recdata != 0x50)
  1089  00EC  3050               	movlw	80
  1090  00ED  28DF               	goto	L1
  1091  00EE                     i1l6034:	
  1092                           
  1093                           ;IAP_FW.C: 219: if(iap_recdata!= 0x55)
  1094  00EE  3055               	movlw	85
  1095  00EF  28DF               	goto	L1
  1096  00F0                     i1l6038:	
  1097                           
  1098                           ;IAP_FW.C: 226: if(iap_recdata!= 0xaa)
  1099  00F0  30AA               	movlw	170
  1100  00F1  0622               	xorwf	34,w
  1101  00F2  1D03               	btfss	3,2
  1102  00F3  28E2               	goto	i1l6012
  1103                           
  1104                           ;IAP_FW.C: 228: else
  1105                           ;IAP_FW.C: 229: {iap_ok_flag=1;}
  1106  00F4  1520               	bsf	32,2
  1107  00F5  2903               	goto	i1l1677
  1108  00F6                     i1l6044:	
  1109  00F6  0821               	movf	33,w
  1110                           
  1111                           ; Switch size 1, requested type "space"
  1112                           ; Number of cases is 16, Range of values is 1 to 16
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; direct_byte           41     9 (fixed)
  1116                           ; simple_byte           49    25 (average)
  1117                           ; jumptable            263     9 (fixed)
  1118                           ;	Chosen strategy is direct_byte
  1119  00F7  3EFF               	addlw	-1
  1120  00F8  1C03               	skipc
  1121  00F9  28E2               	goto	i1l6012
  1122  00FA  0084               	movwf	4
  1123  00FB  3010               	movlw	16
  1124  00FC  0204               	subwf	4,w
  1125  00FD  1803               	skipnc
  1126  00FE  28E2               	goto	i1l6012
  1127  00FF  3182               	movlp	high i1S6220
  1128  0100  3504               	lslf	4,w
  1129  0101  3EA5               	addlw	low i1S6220
  1130  0102  0082               	movwf	2
  1131  0103                     i1l1677:	
  1132                           
  1133                           ;IAP_FW.C: 236: if(iap_ok_flag==1)
  1134  0103  1D20               	btfss	32,2
  1135  0104  29AF               	goto	i1l1701
  1136                           
  1137                           ;IAP_FW.C: 237: {
  1138                           ;IAP_FW.C: 238: count=0;
  1139  0105  01A1               	clrf	33
  1140                           
  1141                           ;IAP_FW.C: 239: iap_ok_flag =0;
  1142  0106  1120               	bcf	32,2
  1143                           
  1144                           ;IAP_FW.C: 240: unsigned char i ;
  1145                           ;IAP_FW.C: 241: unsigned int iap_addr;
  1146                           ;IAP_FW.C: 242: unsigned int CRC16_dat1;
  1147                           ;IAP_FW.C: 243: URRXNE &= ~(0X1<<0 );
  1148  0107  0029               	movlb	9	; select bank9
  1149  0108  100E               	bcf	14,0	;volatile
  1150                           
  1151                           ;IAP_FW.C: 244: EECON1 = (0x1<<7 )|(0X1<<2 );
  1152  0109  3084               	movlw	132
  1153  010A  0023               	movlb	3	; select bank3
  1154  010B  0095               	movwf	21	;volsfr
  1155                           
  1156                           ;IAP_FW.C: 249: switch(iap_databuf[0])
  1157  010C  29A0               	goto	i1l6054
  1158  010D                     i1l1704:	
  1159                           ;IAP_FW.C: 250: {
  1160                           ;IAP_FW.C: 251: case 0X05:
  1161                           
  1162                           
  1163                           ;IAP_FW.C: 252: for(i=1;i<69;i++)
  1164  010D  0020               	movlb	0	; select bank0
  1165  010E  01A9               	clrf	user_isr@i
  1166  010F  0AA9               	incf	user_isr@i,f
  1167  0110                     i1l6060:	
  1168                           
  1169                           ;IAP_FW.C: 253: {
  1170                           ;IAP_FW.C: 254: iap_databuf[i]=iap_usart_rec();
  1171  0110  0829               	movf	user_isr@i,w
  1172  0111  3EA0               	addlw	(low (_iap_databuf| 0))& (0+255)
  1173  0112  0086               	movwf	6
  1174  0113  0187               	clrf	7
  1175  0114  21F7  3180         	fcall	_iap_usart_rec
  1176  0116  0081               	movwf	1
  1177  0117  0020               	movlb	0	; select bank0
  1178  0118  3045               	movlw	69
  1179  0119  0AA9               	incf	user_isr@i,f
  1180  011A  0229               	subwf	user_isr@i,w
  1181  011B  1C03               	skipc
  1182  011C  2910               	goto	i1l6060
  1183                           
  1184                           ;IAP_FW.C: 255: }
  1185                           ;IAP_FW.C: 256: CRC16_dat1 = iap_databuf[67];
  1186  011D  0021               	movlb	1	; select bank1
  1187  011E  0863               	movf	(_iap_databuf^(0+128)+67),w
  1188  011F  0020               	movlb	0	; select bank0
  1189  0120  00A5               	movwf	user_isr@CRC16_dat1
  1190  0121  01A6               	clrf	user_isr@CRC16_dat1+1
  1191                           
  1192                           ;IAP_FW.C: 257: CRC16_dat1 = ((CRC16_dat1<<8)+iap_databuf[68]);
  1193  0122  00FA               	movwf	??_user_isr
  1194  0123  0021               	movlb	1	; select bank1
  1195  0124  0864               	movf	(_iap_databuf^(0+128)+68),w
  1196  0125  0020               	movlb	0	; select bank0
  1197  0126  00A5               	movwf	user_isr@CRC16_dat1
  1198  0127  087A               	movf	??_user_isr,w
  1199  0128  00A6               	movwf	user_isr@CRC16_dat1+1
  1200                           
  1201                           ;IAP_FW.C: 258: CRC_16 = 0;
  1202  0129  01A3               	clrf	35
  1203  012A  01A4               	clrf	36
  1204                           
  1205                           ;IAP_FW.C: 259: for(i=0;i<67;i++)
  1206  012B  01A9               	clrf	user_isr@i
  1207  012C                     i1l6074:	
  1208                           
  1209                           ;IAP_FW.C: 260: {
  1210                           ;IAP_FW.C: 261: CRC16_CCITT(iap_databuf[i]);
  1211  012C  0829               	movf	user_isr@i,w
  1212  012D  3EA0               	addlw	(low (_iap_databuf| 0))& (0+255)
  1213  012E  0086               	movwf	6
  1214  012F  0187               	clrf	7
  1215  0130  0801               	movf	1,w
  1216  0131  2242  3180         	fcall	i1_CRC16_CCITT
  1217  0133  3043               	movlw	67
  1218  0134  0AA9               	incf	user_isr@i,f
  1219  0135  0229               	subwf	user_isr@i,w
  1220  0136  1C03               	skipc
  1221  0137  292C               	goto	i1l6074
  1222                           
  1223                           ;IAP_FW.C: 262: }
  1224                           ;IAP_FW.C: 263: if(CRC16_dat1 !=CRC_16)
  1225  0138  0824               	movf	36,w
  1226  0139  0626               	xorwf	user_isr@CRC16_dat1+1,w
  1227  013A  1D03               	skipz
  1228  013B  293E               	goto	u85_25
  1229  013C  0823               	movf	35,w
  1230  013D  0625               	xorwf	user_isr@CRC16_dat1,w
  1231  013E                     u85_25:	
  1232  013E  1903               	skipnz
  1233  013F  2942               	goto	i1l6084
  1234  0140  0001               	reset	;# 
  1235                           
  1236                           ;IAP_FW.C: 266: break;
  1237  0141  29A0               	goto	i1l6054
  1238  0142                     i1l6084:	
  1239                           
  1240                           ;IAP_FW.C: 267: }
  1241                           ;IAP_FW.C: 268: iap_addr = iap_databuf[1];
  1242                           
  1243                           ;IAP_FW.C: 269: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1244  0142  2284  3180         	fcall	PL4	;call to abstracted procedure
  1245                           
  1246                           ;IAP_FW.C: 270: if(iap_addr < 0X400)
  1247  0144  3004               	movlw	4
  1248  0145  0228               	subwf	user_isr@iap_addr+1,w
  1249  0146  3000               	movlw	0
  1250  0147  1903               	skipnz
  1251  0148  0227               	subwf	user_isr@iap_addr,w
  1252  0149  1803               	skipnc
  1253  014A  294D               	goto	i1l6088
  1254  014B  0001               	reset	;# 
  1255                           
  1256                           ;IAP_FW.C: 273: break;
  1257  014C  29A0               	goto	i1l6054
  1258  014D                     i1l6088:	
  1259                           
  1260                           ;IAP_FW.C: 274: }
  1261                           ;IAP_FW.C: 275: if(data_check_erase_or_not(iap_addr,1))
  1262  014D  229A  3180         	fcall	PL8	;call to abstracted procedure
  1263  014F  0AF4               	incf	data_check_erase_or_not@mode,f
  1264  0150  21BF  3180         	fcall	_data_check_erase_or_not
  1265  0152  3A00               	xorlw	0
  1266  0153  1903               	skipnz
  1267  0154  2960               	goto	i1l6094
  1268  0155                     i1l6090:	
  1269                           
  1270                           ;IAP_FW.C: 276: {
  1271                           ;IAP_FW.C: 277: if(iap_addr == (0x1000-0x20))
  1272  0155  30E0               	movlw	224
  1273  0156  0020               	movlb	0	; select bank0
  1274  0157  0627               	xorwf	user_isr@iap_addr,w
  1275  0158  300F               	movlw	15
  1276  0159  1903               	skipnz
  1277  015A  0628               	xorwf	user_isr@iap_addr+1,w
  1278  015B  1D03               	btfss	3,2
  1279  015C  29A0               	goto	i1l6054
  1280                           
  1281                           ;IAP_FW.C: 278: {
  1282                           ;IAP_FW.C: 279: Eeprom_Write_Crc();
  1283  015D  20BF  3180         	fcall	_Eeprom_Write_Crc
  1284  015F  29A0               	goto	i1l6054
  1285  0160                     i1l6094:	
  1286                           
  1287                           ;IAP_FW.C: 283: else
  1288                           ;IAP_FW.C: 284: {
  1289                           ;IAP_FW.C: 285: if(data_check_erase_or_not(iap_addr,0))
  1290  0160  0020               	movlb	0	; select bank0
  1291  0161  229A  3180         	fcall	PL8	;call to abstracted procedure
  1292  0163  21BF  3180         	fcall	_data_check_erase_or_not
  1293  0165  3A00               	xorlw	0
  1294  0166  1903               	skipnz
  1295  0167  2976               	goto	i1l6116
  1296                           
  1297                           ;IAP_FW.C: 286: {
  1298                           ;IAP_FW.C: 287: for(i=0;i<64;i=i+2)
  1299  0168  0020               	movlb	0	; select bank0
  1300  0169  01A9               	clrf	user_isr@i
  1301  016A                     i1l6102:	
  1302                           
  1303                           ;IAP_FW.C: 288: {
  1304                           ;IAP_FW.C: 289: EEADRH = iap_addr>>8;
  1305  016A  0828               	movf	user_isr@iap_addr+1,w
  1306  016B  0023               	movlb	3	; select bank3
  1307  016C  0092               	movwf	18	;volatile
  1308                           
  1309                           ;IAP_FW.C: 290: EEADRL = iap_addr>>0;
  1310                           
  1311                           ;IAP_FW.C: 291: EEDATH = iap_databuf[i+3];
  1312                           
  1313                           ;IAP_FW.C: 292: EEDATL = iap_databuf[i+4];
  1314  016D  2270  3180         	fcall	PL2	;call to abstracted procedure
  1315                           
  1316                           ;IAP_FW.C: 293: iap_mem_prog();
  1317  016F  21F0  3180         	fcall	_iap_mem_prog
  1318                           
  1319                           ;IAP_FW.C: 294: iap_addr++;
  1320  0171  2291  3180         	fcall	PL6	;call to abstracted procedure
  1321  0173  1803               	btfsc	3,0
  1322  0174  298D               	goto	i1l6140
  1323  0175  296A               	goto	i1l6102
  1324  0176                     i1l6116:	
  1325                           
  1326                           ;IAP_FW.C: 297: else
  1327                           ;IAP_FW.C: 298: {
  1328                           ;IAP_FW.C: 299: EEADRH = iap_addr>>8;
  1329  0176  0020               	movlb	0	; select bank0
  1330  0177  0828               	movf	user_isr@iap_addr+1,w
  1331  0178  0023               	movlb	3	; select bank3
  1332  0179  0092               	movwf	18	;volatile
  1333                           
  1334                           ;IAP_FW.C: 300: EEADRL = iap_addr>>0;
  1335  017A  0020               	movlb	0	; select bank0
  1336  017B  0827               	movf	user_isr@iap_addr,w
  1337  017C  0023               	movlb	3	; select bank3
  1338  017D  0091               	movwf	17	;volatile
  1339                           
  1340                           ;IAP_FW.C: 301: iap_mem_erase();
  1341  017E  2261  3180         	fcall	_iap_mem_erase
  1342                           
  1343                           ;IAP_FW.C: 302: for(i=0;i<64;i=i+2)
  1344  0180  0020               	movlb	0	; select bank0
  1345  0181  01A9               	clrf	user_isr@i
  1346  0182                     i1l6126:	
  1347                           
  1348                           ;IAP_FW.C: 303: {
  1349                           ;IAP_FW.C: 304: EEADRH = iap_addr>>8;
  1350  0182  0828               	movf	user_isr@iap_addr+1,w
  1351  0183  0023               	movlb	3	; select bank3
  1352  0184  0092               	movwf	18	;volatile
  1353                           
  1354                           ;IAP_FW.C: 305: EEADRL = iap_addr>>0;
  1355                           
  1356                           ;IAP_FW.C: 306: EEDATH = iap_databuf[i+3];
  1357                           
  1358                           ;IAP_FW.C: 307: EEDATL = iap_databuf[i+4];
  1359  0185  2270  3180         	fcall	PL2	;call to abstracted procedure
  1360                           
  1361                           ;IAP_FW.C: 308: iap_mem_prog();
  1362  0187  21F0  3180         	fcall	_iap_mem_prog
  1363                           
  1364                           ;IAP_FW.C: 309: iap_addr++;
  1365  0189  2291  3180         	fcall	PL6	;call to abstracted procedure
  1366  018B  1C03               	skipc
  1367  018C  2982               	goto	i1l6126
  1368  018D                     i1l6140:	
  1369                           
  1370                           ;IAP_FW.C: 310: }
  1371                           ;IAP_FW.C: 311: }
  1372                           ;IAP_FW.C: 312: iap_addr = iap_databuf[1];
  1373                           
  1374                           ;IAP_FW.C: 313: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1375  018D  2284  3180         	fcall	PL4	;call to abstracted procedure
  1376                           
  1377                           ;IAP_FW.C: 314: if(data_check_erase_or_not(iap_addr,1))
  1378  018F  00F3               	movwf	data_check_erase_or_not@addr+1
  1379  0190  0827               	movf	user_isr@iap_addr,w
  1380  0191  00F2               	movwf	data_check_erase_or_not@addr
  1381  0192  01F4               	clrf	data_check_erase_or_not@mode
  1382  0193  0AF4               	incf	data_check_erase_or_not@mode,f
  1383  0194  21BF  3180         	fcall	_data_check_erase_or_not
  1384  0196  3A00               	xorlw	0
  1385  0197  1D03               	btfss	3,2
  1386  0198  2955               	goto	i1l6090
  1387                           
  1388                           ;IAP_FW.C: 315: {
  1389                           ;IAP_FW.C: 316: if(iap_addr == (0x1000-0x20))
  1390  0199  0001               	reset	;# 
  1391                           
  1392                           ;IAP_FW.C: 325: break;
  1393  019A  29A0               	goto	i1l6054
  1394  019B                     i1l1724:	
  1395                           ;IAP_FW.C: 329: case 0X06:
  1396                           
  1397  019B  0001               	reset	;# 
  1398                           
  1399                           ;IAP_FW.C: 332: break;
  1400  019C  29A0               	goto	i1l6054
  1401  019D                     i1l6148:	
  1402                           
  1403                           ;IAP_FW.C: 335: count=0;
  1404  019D  0020               	movlb	0	; select bank0
  1405  019E  01A1               	clrf	33
  1406  019F  0001               	reset	;# 
  1407  01A0                     i1l6054:	
  1408                           ;IAP_FW.C: 337: break;
  1409                           
  1410                           
  1411                           ;IAP_FW.C: 246: {
  1412                           ;IAP_FW.C: 247: iap_databuf[0]=iap_usart_rec();
  1413  01A0  21F7  3180         	fcall	_iap_usart_rec
  1414  01A2  0021               	movlb	1	; select bank1
  1415  01A3  00A0               	movwf	_iap_databuf^(0+128)
  1416  01A4  0064               	clrwdt	;# 
  1417  01A5  0021               	movlb	1	; select bank1
  1418  01A6  0820               	movf	_iap_databuf^(0+128),w
  1419                           
  1420                           ; Switch size 1, requested type "space"
  1421                           ; Number of cases is 2, Range of values is 5 to 6
  1422                           ; switch strategies available:
  1423                           ; Name         Instructions Cycles
  1424                           ; simple_byte            7     4 (average)
  1425                           ; direct_byte           13     9 (fixed)
  1426                           ; jumptable            263     9 (fixed)
  1427                           ;	Chosen strategy is simple_byte
  1428  01A7  3A05               	xorlw	5	; case 5
  1429  01A8  1903               	skipnz
  1430  01A9  290D               	goto	i1l1704
  1431  01AA  3A03               	xorlw	3	; case 6
  1432  01AB  1903               	skipnz
  1433  01AC  299B               	goto	i1l1724
  1434  01AD  299D               	goto	i1l6148
  1435  01AE  29A0               	goto	i1l6054
  1436  01AF                     i1l1701:	
  1437                           
  1438                           ;IAP_FW.C: 339: }
  1439                           ;IAP_FW.C: 340: }
  1440                           ;IAP_FW.C: 341: if(iap_err_flag==1)
  1441  01AF  1CA0               	btfss	32,1
  1442  01B0  0008               	return
  1443                           
  1444                           ;IAP_FW.C: 342: {
  1445                           ;IAP_FW.C: 343: count=0;
  1446  01B1  01A1               	clrf	33
  1447                           
  1448                           ;IAP_FW.C: 344: iap_err_flag=0;
  1449  01B2  10A0               	bcf	32,1
  1450                           
  1451                           ;IAP_FW.C: 345: RXNEF=1;
  1452  01B3  0029               	movlb	9	; select bank9
  1453  01B4  1412               	bsf	18,0	;volatile
  1454                           
  1455                           ;IAP_FW.C: 346: URDATAL=iap_recdata;
  1456  01B5  0020               	movlb	0	; select bank0
  1457  01B6  0822               	movf	34,w
  1458  01B7  0029               	movlb	9	; select bank9
  1459  01B8  008C               	movwf	12	;volatile
  1460                           
  1461                           ;IAP_FW.C: 347: if(read_flag !=1)
  1462  01B9  0020               	movlb	0	; select bank0
  1463  01BA  1820               	btfsc	32,0
  1464  01BB  0008               	return
  1465  01BC  2C04               	goto	1028	;# 
  1466  01BD                     i1l1671:	
  1467  01BD  2C04               	goto	1028	;# 
  1468  01BE  0008               	return
  1469  01BF                     __end_of_user_isr:	
  1470  01BF                     __ptext12:	
  1471 ;; *************** function _data_check_erase_or_not *****************
  1472 ;; Defined at:
  1473 ;;		line 110 in file "IAP_FW.C"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  addr            2    0[COMMON] unsigned int 
  1476 ;;  mode            1    2[COMMON] unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  i               1    6[COMMON] unsigned char 
  1479 ;;  k               1    5[COMMON] unsigned char 
  1480 ;;  j               1    4[COMMON] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      unsigned char 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 1F/0
  1487 ;;		On exit  : 1F/3
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1490 ;;      Params:         3       0       0       0       0       0       0       0
  1491 ;;      Locals:         3       0       0       0       0       0       0       0
  1492 ;;      Temps:          1       0       0       0       0       0       0       0
  1493 ;;      Totals:         7       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        7 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		i1_iap_mem_rd
  1499 ;; This function is called by:
  1500 ;;		_user_isr
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _data_check_erase_or_not
  1506  01BF                     _data_check_erase_or_not:	
  1507                           
  1508                           ;IAP_FW.C: 112: unsigned char i ,j,k;
  1509                           ;IAP_FW.C: 113: for(i=0;i<32;i++)
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _data_check_erase_or_not: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  1513  01BF  01F8               	clrf	data_check_erase_or_not@i
  1514  01C0                     i1l5914:	
  1515                           
  1516                           ;IAP_FW.C: 114: {
  1517                           ;IAP_FW.C: 115: EEADRH = addr>>8;
  1518  01C0  0873               	movf	data_check_erase_or_not@addr+1,w
  1519  01C1  0023               	movlb	3	; select bank3
  1520  01C2  0092               	movwf	18	;volatile
  1521                           
  1522                           ;IAP_FW.C: 116: EEADRL = addr>>0;
  1523  01C3  0872               	movf	data_check_erase_or_not@addr,w
  1524  01C4  0091               	movwf	17	;volatile
  1525                           
  1526                           ;IAP_FW.C: 117: j = iap_databuf[i*2+3];
  1527  01C5  3578               	lslf	data_check_erase_or_not@i,w
  1528  01C6  3EA3               	addlw	(low ((_iap_databuf| 0+3)))& (0+255)
  1529  01C7  0086               	movwf	6
  1530  01C8  0187               	clrf	7
  1531  01C9  0801               	movf	1,w
  1532  01CA  00F6               	movwf	data_check_erase_or_not@j
  1533                           
  1534                           ;IAP_FW.C: 118: k = iap_databuf[i*2+4];
  1535  01CB  3578               	lslf	data_check_erase_or_not@i,w
  1536  01CC  3EA4               	addlw	(low ((_iap_databuf| 0+4)))& (0+255)
  1537  01CD  0086               	movwf	6
  1538  01CE  0801               	movf	1,w
  1539  01CF  00F7               	movwf	data_check_erase_or_not@k
  1540                           
  1541                           ;IAP_FW.C: 119: iap_mem_rd();
  1542  01D0  221C  3180         	fcall	i1_iap_mem_rd
  1543                           
  1544                           ;IAP_FW.C: 120: if(mode == 0)
  1545  01D2  0874               	movf	data_check_erase_or_not@mode,w
  1546  01D3  1D03               	btfss	3,2
  1547  01D4  29DF               	goto	i1l5932
  1548                           
  1549                           ;IAP_FW.C: 121: {
  1550                           ;IAP_FW.C: 122: if(((EEDATH & j) != j) || ((EEDATL & k) != k))
  1551  01D5  0876               	movf	data_check_erase_or_not@j,w
  1552  01D6  0514               	andwf	20,w	;volatile
  1553  01D7  00F5               	movwf	??_data_check_erase_or_not
  1554  01D8  0676               	xorwf	data_check_erase_or_not@j,w
  1555  01D9  1D03               	skipz
  1556  01DA  3400               	retlw	0
  1557  01DB  0877               	movf	data_check_erase_or_not@k,w
  1558  01DC  0513               	andwf	19,w	;volatile
  1559  01DD  00F5               	movwf	??_data_check_erase_or_not
  1560  01DE  29E4               	goto	L2
  1561  01DF                     i1l5932:	
  1562                           
  1563                           ;IAP_FW.C: 127: else
  1564                           ;IAP_FW.C: 128: {
  1565                           ;IAP_FW.C: 129: if((EEDATH != j) || (EEDATL != k))
  1566  01DF  0814               	movf	20,w	;volatile
  1567  01E0  0676               	xorwf	data_check_erase_or_not@j,w
  1568  01E1  1D03               	skipz
  1569  01E2  3400               	retlw	0
  1570  01E3  0813               	movf	19,w	;volatile
  1571  01E4                     L2:	
  1572  01E4  0677               	xorwf	data_check_erase_or_not@k,w
  1573  01E5  1D03               	btfss	3,2
  1574                           
  1575                           ;IAP_FW.C: 123: {
  1576                           ;IAP_FW.C: 124: return 0;
  1577  01E6  3400               	retlw	0
  1578                           
  1579                           ;IAP_FW.C: 132: }
  1580                           ;IAP_FW.C: 133: }
  1581                           ;IAP_FW.C: 134: addr++;
  1582  01E7  0AF2               	incf	data_check_erase_or_not@addr,f
  1583  01E8  1903               	skipnz
  1584  01E9  0AF3               	incf	data_check_erase_or_not@addr+1,f
  1585  01EA  3020               	movlw	32
  1586  01EB  0AF8               	incf	data_check_erase_or_not@i,f
  1587  01EC  0278               	subwf	data_check_erase_or_not@i,w
  1588  01ED  1803               	btfsc	3,0
  1589                           
  1590                           ;IAP_FW.C: 135: }
  1591                           ;IAP_FW.C: 136: return 1;
  1592  01EE  3401               	retlw	1
  1593  01EF  29C0               	goto	i1l5914
  1594  01F0                     __end_of_data_check_erase_or_not:	
  1595  01F0                     __ptext17:	
  1596 ;; *************** function _iap_mem_prog *****************
  1597 ;; Defined at:
  1598 ;;		line 27 in file "MEM_DRV.C"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		status,2, status,0, pclath, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 1F/3
  1609 ;;		On exit  : 1F/3
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1612 ;;      Params:         0       0       0       0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    1
  1619 ;; This function calls:
  1620 ;;		_Unlock_Flash
  1621 ;; This function is called by:
  1622 ;;		_Eeprom_Write_Crc
  1623 ;;		_user_isr
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _iap_mem_prog
  1629  01F0                     _iap_mem_prog:	
  1630  01F0                     i1l5820:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _iap_mem_prog: [status,2+status,0+pclath+cstack]
  1633                           
  1634                           
  1635                           ;MEM_DRV.C: 29: EECON1 &=~(0x1<<4 );
  1636  01F0  1215               	bcf	21,4	;volsfr
  1637                           
  1638                           ;MEM_DRV.C: 30: Unlock_Flash();
  1639  01F1  2212  3180         	fcall	_Unlock_Flash
  1640  01F3                     i1l3346:	
  1641                           ;MEM_DRV.C: 31: while(EECON1 & (0x1<<1 ));
  1642                           
  1643  01F3  0023               	movlb	3	; select bank3
  1644  01F4  1895               	btfsc	21,1	;volsfr
  1645  01F5  29F3               	goto	i1l3346
  1646  01F6  0008               	return
  1647  01F7                     __end_of_iap_mem_prog:	
  1648  01F7                     __ptext9:	
  1649 ;; *************** function _iap_usart_rec *****************
  1650 ;; Defined at:
  1651 ;;		line 49 in file "USART_DRV.C"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  a               2    1[COMMON] unsigned int 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      unsigned char 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/3
  1662 ;;		On exit  : 1F/9
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1665 ;;      Params:         0       0       0       0       0       0       0       0
  1666 ;;      Locals:         2       0       0       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0       0
  1668 ;;      Totals:         2       0       0       0       0       0       0       0
  1669 ;;Total ram usage:        2 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    1
  1672 ;; This function calls:
  1673 ;;		_DelayUs
  1674 ;; This function is called by:
  1675 ;;		_user_isr
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _iap_usart_rec
  1681  01F7                     _iap_usart_rec:	
  1682                           
  1683                           ;USART_DRV.C: 51: unsigned int a;
  1684                           ;USART_DRV.C: 52: for(a=0;a<47200;a++)
  1685                           
  1686                           ;incstack = 0
  1687                           ; Regs used in _iap_usart_rec: [wreg+status,2+status,0+pclath+cstack]
  1688  01F7  01F3               	clrf	iap_usart_rec@a
  1689  01F8  01F4               	clrf	iap_usart_rec@a+1
  1690  01F9                     i1l5954:	
  1691                           
  1692                           ;USART_DRV.C: 53: {
  1693                           ;USART_DRV.C: 54: DelayUs();
  1694  01F9  2268  3180         	fcall	_DelayUs
  1695                           
  1696                           ;USART_DRV.C: 55: if(((0x1 << 0 ) & URLSR))
  1697  01FB  0029               	movlb	9	; select bank9
  1698  01FC  1C12               	btfss	18,0	;volatile
  1699  01FD  2A07               	goto	i1l5972
  1700                           
  1701                           ;USART_DRV.C: 56: {
  1702                           ;USART_DRV.C: 57: if((URLSR & (0x1<<2 )) || (URLSR & (0x1<<3 )))
  1703  01FE  1912               	btfsc	18,2	;volatile
  1704  01FF  2A02               	goto	i1l5962
  1705  0200  1D92               	btfss	18,3	;volatile
  1706  0201  2A05               	goto	i1l5968
  1707  0202                     i1l5962:	
  1708                           
  1709                           ;USART_DRV.C: 58: {
  1710                           ;USART_DRV.C: 59: URLSR = ~((0x1<<2 )|(0x1<<3 ));
  1711  0202  30F3               	movlw	243
  1712  0203  0092               	movwf	18	;volatile
  1713                           
  1714                           ;USART_DRV.C: 60: return 0xff;
  1715  0204  34FF               	retlw	255
  1716  0205                     i1l5968:	
  1717                           
  1718                           ;USART_DRV.C: 62: else
  1719                           ;USART_DRV.C: 63: {
  1720                           ;USART_DRV.C: 64: return URDATAL;
  1721  0205  080C               	movf	12,w	;volatile
  1722  0206  0008               	return
  1723  0207                     i1l5972:	
  1724  0207  0AF3               	incf	iap_usart_rec@a,f
  1725  0208  1903               	skipnz
  1726  0209  0AF4               	incf	iap_usart_rec@a+1,f
  1727  020A  30B8               	movlw	184
  1728  020B  0274               	subwf	iap_usart_rec@a+1,w
  1729  020C  3060               	movlw	96
  1730  020D  1903               	skipnz
  1731  020E  0273               	subwf	iap_usart_rec@a,w
  1732  020F  1803               	btfsc	3,0
  1733                           
  1734                           ;USART_DRV.C: 65: }
  1735                           ;USART_DRV.C: 66: }
  1736                           ;USART_DRV.C: 67: }
  1737                           ;USART_DRV.C: 68: return 0xff;
  1738  0210  34FF               	retlw	255
  1739  0211  29F9               	goto	i1l5954
  1740  0212                     __end_of_iap_usart_rec:	
  1741  0212                     __ptext18:	
  1742 ;; *************** function _Unlock_Flash *****************
  1743 ;; Defined at:
  1744 ;;		line 4 in file "MEM_DRV.C"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		None
  1753 ;; Tracked objects:
  1754 ;;		On entry : 1F/3
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1758 ;;      Params:         0       0       0       0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0
  1761 ;;      Totals:         0       0       0       0       0       0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_iap_mem_erase
  1768 ;;		_iap_mem_prog
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _Unlock_Flash
  1774  0212                     _Unlock_Flash:	
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _Unlock_Flash: []
  1778  0212  3003               	movlw	3	;# 
  1779  0213  0088               	movwf	8	;# 
  1780  0214  3055               	movlw	85	;# 
  1781  0215  0096               	movwf	22	;# 
  1782  0216  30AA               	movlw	170	;# 
  1783  0217  0096               	movwf	22	;# 
  1784  0218  1495               	bsf	21,1	;# 
  1785  0219  0000               	nop	;# 
  1786  021A  0000               	nop	;# 
  1787  021B  0008               	return
  1788  021C                     __end_of_Unlock_Flash:	
  1789  007E                     btemp	set	126	;btemp
  1790  007E                     int$flags	set	126
  1791  007E                     wtemp0	set	126
  1792  021C                     __ptext15:	
  1793 ;; *************** function i1_iap_mem_rd *****************
  1794 ;; Defined at:
  1795 ;;		line 34 in file "MEM_DRV.C"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		None
  1804 ;; Tracked objects:
  1805 ;;		On entry : 1F/3
  1806 ;;		On exit  : 1F/3
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1809 ;;      Params:         0       0       0       0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0       0
  1812 ;;      Totals:         0       0       0       0       0       0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_data_check_erase_or_not
  1819 ;;		i1_All_Page_Read_CRC
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function i1_iap_mem_rd
  1825  021C                     i1_iap_mem_rd:	
  1826                           
  1827                           ;MEM_DRV.C: 36: EECON1 |=(0x1<<0 );
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in i1_iap_mem_rd: []
  1831  021C  1415               	bsf	21,0	;volsfr
  1832  021D  0000               	nop	;# 
  1833  021E                     i1l3352:	
  1834                           ;MEM_DRV.C: 38: while(EECON1 & (0x1<<0 ));
  1835                           
  1836  021E  0023               	movlb	3	; select bank3
  1837  021F  1815               	btfsc	21,0	;volsfr
  1838  0220  2A1E               	goto	i1l3352
  1839  0221  0008               	return
  1840  0222                     __end_ofi1_iap_mem_rd:	
  1841  0222                     __ptext14:	
  1842 ;; *************** function i1_All_Page_Read_CRC *****************
  1843 ;; Defined at:
  1844 ;;		line 58 in file "IAP_FW.C"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  All_Page_Rea    2    6[COMMON] unsigned int 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 1F/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1858 ;;      Params:         0       0       0       0       0       0       0       0
  1859 ;;      Locals:         2       0       0       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0
  1861 ;;      Totals:         2       0       0       0       0       0       0       0
  1862 ;;Total ram usage:        2 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    1
  1865 ;; This function calls:
  1866 ;;		i1_CRC16_CCITT
  1867 ;;		i1_iap_mem_rd
  1868 ;; This function is called by:
  1869 ;;		_Eeprom_Write_Crc
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function i1_All_Page_Read_CRC
  1875  0222                     i1_All_Page_Read_CRC:	
  1876                           
  1877                           ;IAP_FW.C: 60: unsigned int iap_addr;
  1878                           ;IAP_FW.C: 61: CRC_16 = 0;
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in i1_All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
  1882  0222  0020               	movlb	0	; select bank0
  1883                           
  1884                           ;IAP_FW.C: 62: EECON1 = (0x1<<7 )|(0X1<<2 );
  1885  0223  22A0  3180         	fcall	PL10	;call to abstracted procedure
  1886  0225  0095               	movwf	21	;volsfr
  1887                           
  1888                           ;IAP_FW.C: 63: for(iap_addr=0X400;iap_addr<0x1000;iap_addr++)
  1889  0226  3004               	movlw	4
  1890  0227  01F8               	clrf	i1All_Page_Read_CRC@iap_addr
  1891  0228  00F9               	movwf	i1All_Page_Read_CRC@iap_addr+1
  1892  0229                     i1l5844:	
  1893                           
  1894                           ;IAP_FW.C: 64: {
  1895                           ;IAP_FW.C: 65: EEADRH = iap_addr>>8;
  1896  0229  0879               	movf	i1All_Page_Read_CRC@iap_addr+1,w
  1897  022A  0023               	movlb	3	; select bank3
  1898  022B  0092               	movwf	18	;volatile
  1899                           
  1900                           ;IAP_FW.C: 66: EEADRL = iap_addr>>0;
  1901  022C  0878               	movf	i1All_Page_Read_CRC@iap_addr,w
  1902  022D  0091               	movwf	17	;volatile
  1903                           
  1904                           ;IAP_FW.C: 67: iap_mem_rd();
  1905  022E  221C  3180         	fcall	i1_iap_mem_rd
  1906                           
  1907                           ;IAP_FW.C: 68: CRC16_CCITT(EEDATL);
  1908  0230  0813               	movf	19,w	;volatile
  1909  0231  2242  3180         	fcall	i1_CRC16_CCITT
  1910                           
  1911                           ;IAP_FW.C: 69: CRC16_CCITT(EEDATH);
  1912  0233  0023               	movlb	3	; select bank3
  1913  0234  0814               	movf	20,w	;volatile
  1914  0235  2242  3180         	fcall	i1_CRC16_CCITT
  1915  0237  0AF8               	incf	i1All_Page_Read_CRC@iap_addr,f
  1916  0238  1903               	skipnz
  1917  0239  0AF9               	incf	i1All_Page_Read_CRC@iap_addr+1,f
  1918  023A  3010               	movlw	16
  1919  023B  0279               	subwf	i1All_Page_Read_CRC@iap_addr+1,w
  1920  023C  3000               	movlw	0
  1921  023D  1903               	skipnz
  1922  023E  0278               	subwf	i1All_Page_Read_CRC@iap_addr,w
  1923  023F  1803               	btfsc	3,0
  1924  0240  0008               	return
  1925  0241  2A29               	goto	i1l5844
  1926  0242                     __end_ofi1_All_Page_Read_CRC:	
  1927  0242                     __ptext16:	
  1928 ;; *************** function i1_CRC16_CCITT *****************
  1929 ;; Defined at:
  1930 ;;		line 42 in file "IAP_FW.C"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  data            1    wreg     unsigned char 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  data            1    4[COMMON] unsigned char 
  1935 ;;  CRC16_CCITT     1    5[COMMON] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 1C/0
  1942 ;;		On exit  : 1F/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1945 ;;      Params:         0       0       0       0       0       0       0       0
  1946 ;;      Locals:         2       0       0       0       0       0       0       0
  1947 ;;      Temps:          4       0       0       0       0       0       0       0
  1948 ;;      Totals:         6       0       0       0       0       0       0       0
  1949 ;;Total ram usage:        6 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_user_isr
  1955 ;;		i1_All_Page_Read_CRC
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function i1_CRC16_CCITT
  1961  0242                     i1_CRC16_CCITT:	
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in i1_CRC16_CCITT: [wreg+status,2+status,0]
  1965                           ;i1CRC16_CCITT@data stored from wreg
  1966  0242  00F6               	movwf	i1CRC16_CCITT@data
  1967                           
  1968                           ;IAP_FW.C: 45: unsigned char i;
  1969                           ;IAP_FW.C: 47: CRC_16 ^= data;
  1970  0243  0020               	movlb	0	; select bank0
  1971  0244  06A3               	xorwf	35,f
  1972                           
  1973                           ;IAP_FW.C: 49: for(i = 0;i < 8;i++)
  1974  0245  01F7               	clrf	i1CRC16_CCITT@i
  1975  0246                     i1l1633:	
  1976                           
  1977                           ;IAP_FW.C: 50: {
  1978                           ;IAP_FW.C: 51: if(CRC_16 & 0x01)
  1979  0246  1C23               	btfss	35,0
  1980  0247  2A59               	goto	i1l5798
  1981                           
  1982                           ;IAP_FW.C: 52: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
  1983  0248  0824               	movf	36,w
  1984  0249  00F3               	movwf	??i1_CRC16_CCITT+1
  1985  024A  0823               	movf	35,w
  1986  024B  00F2               	movwf	??i1_CRC16_CCITT
  1987  024C  3008               	movlw	8
  1988  024D  36F3               	lsrf	??i1_CRC16_CCITT+1,f
  1989  024E  0CF2               	rrf	??i1_CRC16_CCITT,f
  1990  024F  0672               	xorwf	??i1_CRC16_CCITT,w
  1991  0250  00F4               	movwf	??i1_CRC16_CCITT+2
  1992  0251  3084               	movlw	132
  1993  0252  0673               	xorwf	??i1_CRC16_CCITT+1,w
  1994  0253  00F5               	movwf	??i1_CRC16_CCITT+3
  1995  0254  0874               	movf	??i1_CRC16_CCITT+2,w
  1996  0255  00A3               	movwf	35
  1997  0256  0875               	movf	??i1_CRC16_CCITT+3,w
  1998  0257  00A4               	movwf	36
  1999  0258  2A5B               	goto	i1l1636
  2000  0259                     i1l5798:	
  2001                           
  2002                           ;IAP_FW.C: 53: else
  2003                           ;IAP_FW.C: 54: CRC_16 = CRC_16 >> 1;
  2004  0259  36A4               	lsrf	36,f
  2005  025A  0CA3               	rrf	35,f
  2006  025B                     i1l1636:	
  2007  025B  3008               	movlw	8
  2008  025C  0AF7               	incf	i1CRC16_CCITT@i,f
  2009  025D  0277               	subwf	i1CRC16_CCITT@i,w
  2010  025E  1803               	btfsc	3,0
  2011  025F  0008               	return
  2012  0260  2A46               	goto	i1l1633
  2013  0261                     __end_ofi1_CRC16_CCITT:	
  2014  0261                     __ptext11:	
  2015 ;; *************** function _iap_mem_erase *****************
  2016 ;; Defined at:
  2017 ;;		line 19 in file "MEM_DRV.C"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 1F/3
  2028 ;;		On exit  : 1F/3
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2031 ;;      Params:         0       0       0       0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    1
  2038 ;; This function calls:
  2039 ;;		_Unlock_Flash
  2040 ;; This function is called by:
  2041 ;;		_user_isr
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           
  2046                           ;psect for function _iap_mem_erase
  2047  0261                     _iap_mem_erase:	
  2048                           
  2049                           ;MEM_DRV.C: 21: EECON1 |=(0x1<<4 );
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in _iap_mem_erase: [status,2+status,0+pclath+cstack]
  2053  0261  1615               	bsf	21,4	;volsfr
  2054                           
  2055                           ;MEM_DRV.C: 22: Unlock_Flash();
  2056  0262  2212  3180         	fcall	_Unlock_Flash
  2057  0264                     i1l3340:	
  2058                           ;MEM_DRV.C: 23: while(EECON1 & (0x1<<1 ));
  2059                           
  2060  0264  0023               	movlb	3	; select bank3
  2061  0265  1895               	btfsc	21,1	;volsfr
  2062  0266  2A64               	goto	i1l3340
  2063  0267  0008               	return
  2064  0268                     __end_of_iap_mem_erase:	
  2065  0268                     __ptext10:	
  2066 ;; *************** function _DelayUs *****************
  2067 ;; Defined at:
  2068 ;;		line 35 in file "USART_DRV.C"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  a               1    0[COMMON] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/3
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2082 ;;      Params:         0       0       0       0       0       0       0       0
  2083 ;;      Locals:         1       0       0       0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0
  2085 ;;      Totals:         1       0       0       0       0       0       0       0
  2086 ;;Total ram usage:        1 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_iap_usart_rec
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _DelayUs
  2097  0268                     _DelayUs:	
  2098                           
  2099                           ;USART_DRV.C: 37: unsigned char a;
  2100                           ;USART_DRV.C: 38: for(a=0;a<10;a++)
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
  2104  0268  01F2               	clrf	DelayUs@a
  2105  0269                     i1l4958:	
  2106                           
  2107                           ;USART_DRV.C: 39: {
  2108                           ;USART_DRV.C: 40: __nop();
  2109  0269  0000               	nop
  2110  026A  300A               	movlw	10
  2111  026B  0AF2               	incf	DelayUs@a,f
  2112  026C  0272               	subwf	DelayUs@a,w
  2113  026D  1803               	btfsc	3,0
  2114  026E  0008               	return
  2115  026F  2A69               	goto	i1l4958
  2116  0270                     __end_of_DelayUs:	
  2117  0270                     PL2:	
  2118  0270  0020               	movlb	0	; select bank0
  2119  0271  0827               	movf	user_isr@iap_addr,w
  2120  0272  0023               	movlb	3	; select bank3
  2121  0273  0091               	movwf	17	;volatile
  2122  0274  0020               	movlb	0	; select bank0
  2123  0275  0829               	movf	user_isr@i,w
  2124  0276  3EA3               	addlw	(low ((_iap_databuf| 0+3)))& (0+255)
  2125  0277  0086               	movwf	6
  2126  0278  0187               	clrf	7
  2127  0279  0801               	movf	1,w
  2128  027A  0023               	movlb	3	; select bank3
  2129  027B  0094               	movwf	20	;volatile
  2130  027C  0020               	movlb	0	; select bank0
  2131  027D  0829               	movf	user_isr@i,w
  2132  027E  3EA4               	addlw	(low ((_iap_databuf| 0+4)))& (0+255)
  2133  027F  0086               	movwf	6
  2134  0280  0801               	movf	1,w
  2135  0281  0023               	movlb	3	; select bank3
  2136  0282  0093               	movwf	19	;volatile
  2137  0283  0008               	return
  2138  0284                     __end_ofPL2:	
  2139  0284                     PL4:	
  2140  0284  0021               	movlb	1	; select bank1
  2141  0285  0821               	movf	(_iap_databuf^(0+128)+1),w
  2142  0286  0020               	movlb	0	; select bank0
  2143  0287  00A7               	movwf	user_isr@iap_addr
  2144  0288  01A8               	clrf	user_isr@iap_addr+1
  2145  0289  00FA               	movwf	??_user_isr
  2146  028A  0021               	movlb	1	; select bank1
  2147  028B  0822               	movf	(_iap_databuf^(0+128)+2),w
  2148  028C  0020               	movlb	0	; select bank0
  2149  028D  00A7               	movwf	user_isr@iap_addr
  2150  028E  087A               	movf	??_user_isr,w
  2151  028F  00A8               	movwf	user_isr@iap_addr+1
  2152  0290  0008               	return
  2153  0291                     __end_ofPL4:	
  2154  0291                     PL6:	
  2155  0291  0020               	movlb	0	; select bank0
  2156  0292  0AA7               	incf	user_isr@iap_addr,f
  2157  0293  1903               	skipnz
  2158  0294  0AA8               	incf	user_isr@iap_addr+1,f
  2159  0295  3040               	movlw	64
  2160  0296  0AA9               	incf	user_isr@i,f
  2161  0297  0AA9               	incf	user_isr@i,f
  2162  0298  0229               	subwf	user_isr@i,w
  2163  0299  0008               	return
  2164  029A                     __end_ofPL6:	
  2165  029A                     PL8:	
  2166  029A  0828               	movf	user_isr@iap_addr+1,w
  2167  029B  00F3               	movwf	data_check_erase_or_not@addr+1
  2168  029C  0827               	movf	user_isr@iap_addr,w
  2169  029D  00F2               	movwf	data_check_erase_or_not@addr
  2170  029E  01F4               	clrf	data_check_erase_or_not@mode
  2171  029F  0008               	return
  2172  02A0                     __end_ofPL8:	
  2173  02A0                     PL10:	
  2174  02A0  3084               	movlw	132
  2175  02A1  01A3               	clrf	35
  2176  02A2  01A4               	clrf	36
  2177  02A3  0023               	movlb	3	; select bank3
  2178  02A4  0008               	return
  2179  02A5                     __end_ofPL10:	


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           12      9       9
    BANK0            75     15      15
    BANK1            80      0      69
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_user_isr
    _iap_usart_rec->_DelayUs
    _Eeprom_Write_Crc->i1_All_Page_Read_CRC
    i1_All_Page_Read_CRC->i1_CRC16_CCITT

Critical Paths under _main in BANK0

    _main->_Power_On_App_Check
    _Power_On_App_Check->_All_Page_Read_CRC
    _All_Page_Read_CRC->_CRC16_CCITT

Critical Paths under _ISR in BANK0

    _ISR->_user_isr

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     230
                 _Power_On_App_Check
                     _iap_usart_init
 ---------------------------------------------------------------------------------
 (1) _iap_usart_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_On_App_Check                                   2     2      0     230
                                             13 BANK0      2     2      0
                  _All_Page_Read_CRC
                         _EEPROMread
 ---------------------------------------------------------------------------------
 (2) _EEPROMread                                           2     2      0      45
                                              5 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _All_Page_Read_CRC                                    2     2      0     160
                                             11 BANK0      2     2      0
                        _CRC16_CCITT
                         _iap_mem_rd
 ---------------------------------------------------------------------------------
 (3) _iap_mem_rd                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC16_CCITT                                          6     6      0      68
                                              5 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0    1547
                           _user_isr
 ---------------------------------------------------------------------------------
 (5) _user_isr                                             6     6      0    1547
                                              8 COMMON     1     1      0
                                              0 BANK0      5     5      0
                   _Eeprom_Write_Crc
            _data_check_erase_or_not
                      _iap_mem_erase
                       _iap_mem_prog
                      _iap_usart_rec
                      i1_CRC16_CCITT
 ---------------------------------------------------------------------------------
 (6) _iap_usart_rec                                        2     2      0      92
                                              1 COMMON     2     2      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (7) _DelayUs                                              1     1      0      46
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_erase                                        0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (6) _data_check_erase_or_not                              7     4      3     550
                                              0 COMMON     7     4      3
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write_Crc                                     0     0      0     158
                       _iap_mem_prog
                i1_All_Page_Read_CRC
 ---------------------------------------------------------------------------------
 (7) i1_All_Page_Read_CRC                                  2     2      0     158
                                              6 COMMON     2     2      0
                      i1_CRC16_CCITT
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (7) i1_iap_mem_rd                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_CRC16_CCITT                                        6     6      0      68
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_prog                                         0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (7) _Unlock_Flash                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Power_On_App_Check
     _All_Page_Read_CRC
       _CRC16_CCITT
       _iap_mem_rd
     _EEPROMread
   _iap_usart_init

 _ISR (ROOT)
   _user_isr
     _Eeprom_Write_Crc
       _iap_mem_prog
         _Unlock_Flash
       i1_All_Page_Read_CRC
         i1_CRC16_CCITT
         i1_iap_mem_rd
     _data_check_erase_or_not
       i1_iap_mem_rd
     _iap_mem_erase
       _Unlock_Flash
     _iap_mem_prog
       _Unlock_Flash
     _iap_usart_rec
       _DelayUs
     i1_CRC16_CCITT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            C      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               C      9       9       2       75.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5D       4        0.0%
BITBANK0            4B      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               4B      F       F       6       20.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      45       8       86.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Nov 16 11:49:43 2021

                               pc 0002                                PL2 0270                                PL4 0284  
                              PL6 0291                                PL8 029A          __end_of_Eeprom_Write_Crc 00D3  
                              _RD 0CA8            __size_ofi1_CRC16_CCITT 001F         __end_of_All_Page_Read_CRC 009A  
                             PL10 02A0                               _FEF 2493                               _GIE 005F  
              _Power_On_App_Check 0046                               _ISR 0004                               u705 005E  
                  ??_iap_mem_prog 0072                               wreg 0009               ?_Power_On_App_Check 0072  
                            ?_ISR 0072                              l1633 009E                              l1636 00B3  
                            l3352 00BB                              l1648 0062                              l1737 0033  
                 ??_iap_mem_erase 0072                              l5814 00B1                              _AFP1 019F  
                            l5862 007F                              _CFGS 0CAE   __end_of_data_check_erase_or_not 01F0  
                            _PEIE 005E              __size_of_CRC16_CCITT 001F                              _flag 0020  
                            _main 002C                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              start 001F  
                 __end_of_DelayUs 0270               __size_of_EEPROMread 0013              ??_Power_On_App_Check 0032  
                           ??_ISR 007B             __size_ofi1_iap_mem_rd 0006                             ?_main 0072  
                           _EEPGD 0CAF                             _BSREG 0008                             _CRC_H 0024  
                           _CRC_L 0023      __size_ofi1_All_Page_Read_CRC 0020                             _PCKEN 009A  
                           _URDLL 0494                             _RXNEF 2490                             _URLCR 048F  
                           _URMCR 0491                             u85_25 013E                             _URLSR 0492  
                           _W_TMP 0070                 i1CRC16_CCITT@data 0076                             _count 0021  
                 ??_iap_usart_rec 0073                     i1_CRC16_CCITT 0242                             status 0003  
                           wtemp0 007E                      i1_iap_mem_rd 021C                   __initialization 0021  
                    __end_of_main 0035        __size_of_All_Page_Read_CRC 0023                            ??_main 0034  
                          i1S6220 02A5                            _EEADRH 0192                            _EEADRL 0191  
                          _EEDATH 0194                            _EEDATL 0193                            _EECON1 0195  
                  ?i1_CRC16_CCITT 0072                            _CRC_16 0023                            i1l1701 01AF  
                          i1l1704 010D                            i1l1633 0246                            i1l1636 025B  
                          i1l3340 0264                            i1l1724 019B                            i1l1671 01BD  
                          i1l3352 021E                            i1l3346 01F3                            i1l6010 00DE  
                          i1l6012 00E2                            i1l1677 0103                            i1l6102 016A  
                          i1l6030 00EC                            i1l6022 00E8                            i1l6014 00E4  
                          i1l6034 00EE                            i1l6026 00EA                            i1l6018 00E6  
                          i1l6140 018D                            i1l6116 0176                            i1l6060 0110  
                          i1l6044 00F6                            i1l6126 0182                            i1l6054 01A0  
                          i1l6038 00F0                            i1l6090 0155                            i1l6074 012C  
                          i1l6148 019D                            i1l6084 0142                            i1l6094 0160  
                          i1l6088 014D                            i1l5820 01F0                            i1l5914 01C0  
                          i1l5844 0229                            i1l5932 01DF                            i1l4958 0269  
                          i1l5962 0202                            i1l5954 01F9                            i1l5972 0207  
                          i1l5798 0259                            i1l5968 0205                         ??_DelayUs 0072  
                          _OSCCON 0099                            _URRXNE 2470              __end_of_iap_mem_prog 01F7  
                  iap_usart_rec@a 0073                  ??_iap_usart_init 002A                user_isr@CRC16_dat1 0025  
                    ??_EEPROMread 002A                  __end_of_user_isr 01BF           __end_of__initialization 0029  
                  __pcstackCOMMON 0072                __end_of_EEPROMread 0077                 ?_Eeprom_Write_Crc 0072  
                      __end_ofPL2 0284                        __end_ofPL4 0291                        __end_ofPL6 029A  
                      __end_ofPL8 02A0                ??_Eeprom_Write_Crc 007A                   ??i1_CRC16_CCITT 0072  
                      __pbssBANK1 00A0               i1_All_Page_Read_CRC 0222                        __pmaintext 002C  
        ?_data_check_erase_or_not 0072                        __pintentry 0004              ?i1_All_Page_Read_CRC 0072  
                      _iap_mem_rd 00B9                           _BSR_TMP 0071                           _URDATAL 048C  
                   ??_CRC16_CCITT 002A             __size_of_iap_mem_prog 0007                           _DelayUs 0268  
           __end_of_iap_mem_erase 0268       __size_of_Power_On_App_Check 001E                  EEPROMread@EEAddr 002A  
                       ?_user_isr 0072                           __ptext0 0000                           __ptext1 0035  
                         __ptext2 0046                           __ptext3 0064                           __ptext4 0077  
                         __ptext5 00B9                           __ptext6 009A                           __ptext8 00D3  
                         __ptext9 01F7             ??i1_All_Page_Read_CRC 0078          data_check_erase_or_not@i 0078  
        data_check_erase_or_not@j 0076          data_check_erase_or_not@k 0077                      __size_of_ISR 001B  
                    _iap_err_flag 0101                      _iap_mem_prog 01F0                      CRC16_CCITT@i 002F  
                         clrloop0 02C6              end_of_initialization 0029                  user_isr@iap_addr 0027  
           __end_of_iap_usart_rec 0212               __end_of_CRC16_CCITT 00B9                        ??_user_isr 007A  
                     ?_iap_mem_rd 0072                     ?_Unlock_Flash 0072                   CRC16_CCITT@data 002E  
                  i1CRC16_CCITT@i 0077                       __end_ofPL10 02A5               start_initialization 0021  
                     __end_of_ISR 001F                    ??_Unlock_Flash 0072                       _CRC16_CCITT 009A  
       __size_of_Eeprom_Write_Crc 0014               __size_of_iap_mem_rd 0006      Power_On_App_Check@CRC_Eeprom 0032  
__size_of_data_check_erase_or_not 0031                         ___latbits 0001                     __pcstackBANK0 0025  
         __size_of_iap_usart_init 0011             __end_ofi1_CRC16_CCITT 0261                          ?_DelayUs 0072  
                   ?i1_iap_mem_rd 0072                         __pswtext1 02A5                 __size_of_user_isr 00EC  
                     _iap_databuf 00A0                         _read_flag 0100                       _iap_ok_flag 0102  
                     _iap_recdata 0022                    ??i1_iap_mem_rd 0072                          DelayUs@a 0072  
                       clear_ram0 02C5        __end_of_Power_On_App_Check 0064       __end_ofi1_All_Page_Read_CRC 0242  
            __end_of_Unlock_Flash 021C                      ??_iap_mem_rd 002A            __size_of_iap_mem_erase 0007  
                _Eeprom_Write_Crc 00BF                  __size_of_DelayUs 0008                __end_of_iap_mem_rd 00BF  
          __size_of_iap_usart_rec 001B           _data_check_erase_or_not 01BF                        _EEPROMread 0064  
                  _iap_usart_init 0035                          __ptext10 0268                          __ptext11 0261  
                        __ptext12 01BF                          __ptext13 00BF                          __ptext14 0222  
                        __ptext15 021C                          __ptext16 0242                          __ptext17 01F0  
                        __ptext18 0212                      ?_CRC16_CCITT 0072                     __size_of_main 0009  
                   _iap_mem_erase 0261            EEPROMread@ReEEPROMread 002B                          int$flags 007E  
       All_Page_Read_CRC@iap_addr 0030                          _user_isr 00D3              __end_ofi1_iap_mem_rd 0222  
          __end_of_iap_usart_init 0046       data_check_erase_or_not@addr 0072       data_check_erase_or_not@mode 0074  
                        intlevel1 0000                     _iap_usart_rec 01F7                    ?_iap_mem_erase 0072  
                       user_isr@i 0029             __size_of_Unlock_Flash 000A         ??_data_check_erase_or_not 0075  
               _All_Page_Read_CRC 0077                   ?_iap_usart_init 0072                     ?_iap_mem_prog 0072  
                     ?_EEPROMread 0072                ?_All_Page_Read_CRC 0072                      _Unlock_Flash 0212  
     i1All_Page_Read_CRC@iap_addr 0078                    ?_iap_usart_rec 0072               ??_All_Page_Read_CRC 0030  
