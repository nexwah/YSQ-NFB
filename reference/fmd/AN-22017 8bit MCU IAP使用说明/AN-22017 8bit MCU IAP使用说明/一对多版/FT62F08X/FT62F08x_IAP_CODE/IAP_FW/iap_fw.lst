

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Nov 16 11:50:07 2021

GNU C Code Generator                                                 
     1                           	processor	FT62F08X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	_ad3nop_text,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	text8,local,class=CODE,merge=1,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x620,48
    14                           	dabs	1,0x5A0,80
    15                           	dabs	1,0x56B,5
    16                           	dabs	1,0x24,1,_CRC_H
    17                           	dabs	1,0x23,1,_CRC_L
    18                           	dabs	1,0x102,0,_iap_ok_flag
    19                           	dabs	1,0x20,1
    20                           	dabs	1,0x101,0,_iap_err_flag
    21                           	dabs	1,0x20,1
    22                           	dabs	1,0x100,0,_read_flag
    23                           	dabs	1,0x20,1
    24                           	dabs	1,0x71,1,_BSR_TMP
    25                           	dabs	1,0x70,1,_W_TMP
    26                           	dabs	1,0x23,2,_CRC_16
    27                           	dabs	1,0x22,1,_iap_recdata
    28                           	dabs	1,0x21,1,_count
    29                           	dabs	1,0x20,1,_flag
    30                           	dabs	1,0x236B,0,_iap_databuf
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.45
    34                           ; Generated 16/11/2017 
    35                           ; 
    36                           ; SFR Addresses
    37  0000                     	;_iap_databuf
    38  0003                     _ad3nop_absaddr	set	3
    39  0003                     _ad3nop_absaddr	set	3
    40                           
    41                           	psect	_ad3nop_text
    42  0003                     __p_ad3nop_text:	
    43  0003                     _ad3nop:	
    44  0003  3400               	retlw	0
    45  0004                     __end_of_ad3nop:		;_read_flag
    46  0008                     _BSREG	set	8
    47  005F                     _GIE	set	95
    48  005E                     _PEIE	set	94
    49  009A                     _PCKEN	set	154
    50  0099                     _OSCCON	set	153
    51  011D                     _AFP2	set	285
    52  0195                     _EECON1	set	405
    53  0194                     _EEDATH	set	404
    54  0193                     _EEDATL	set	403
    55  0192                     _EEADRH	set	402
    56  0191                     _EEADRL	set	401
    57  0CC0                     _DRDEN	set	3264
    58  0CAF                     _EEPGD	set	3247
    59  0CAE                     _CFGS	set	3246
    60  0CA8                     _RD	set	3240
    61  0494                     _URDLL	set	1172
    62  0492                     _URLSR	set	1170
    63  0491                     _URMCR	set	1169
    64  048F                     _URLCR	set	1167
    65  048C                     _URDATAL	set	1164
    66  2493                     _FEF	set	9363
    67  2490                     _RXNEF	set	9360
    68  2470                     _URRXNE	set	9328
    69                           
    70                           	psect	cinit
    71  0021                     start_initialization:	
    72                           ; #config settings
    73                           
    74  0021                     __initialization:		;BIGRAM
    75                           
    76                           ; Clear objects allocated to BIGRAM
    77  0021  306B               	movlw	107
    78  0022  0084               	movwf	4
    79  0023  3023               	movlw	35
    80  0024  0085               	movwf	5
    81  0025  3085               	movlw	133
    82  0026  00FE               	movwf	126
    83  0027  3000               	movlw	0
    84  0028  01FF               	clrf	127
    85  0029  3183  2320  3180   	fcall	clear_ram0
    86  002C                     end_of_initialization:	
    87                           ;End of C runtime variable initialization code
    88                           
    89  002C                     __end_of__initialization:	
    90  002C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    91  002D  0020               	movlb	0
    92  002E  282F               	ljmp	_main	;jump to C main() function
    93  002F                     __pmaintext:	
    94                           ; 1 bytes @ 0x13
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 363 in file "IAP_FW.C"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, status,0, pclath, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : B1F/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   118 ;;Total ram usage:        0 bytes
   119 ;; Hardware stack levels required when called:    8
   120 ;; This function calls:
   121 ;;		_Power_On_App_Check
   122 ;;		_iap_usart_init
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           
   129                           ;psect for function _main
   130  002F                     _main:	
   131                           
   132                           ;IAP_FW.C: 365: iap_usart_init();
   133                           
   134                           ;incstack = 0
   135                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   136  002F  2038  3180         	fcall	_iap_usart_init
   137                           
   138                           ;IAP_FW.C: 366: Power_On_App_Check();
   139  0031  2049               	fcall	_Power_On_App_Check
   140                           
   141                           ;IAP_FW.C: 368: GIE=1;
   142  0032  178B               	bsf	11,7	;volatile
   143                           
   144                           ;IAP_FW.C: 369: PEIE=1;
   145  0033  170B               	bsf	11,6	;volatile
   146                           
   147                           ;IAP_FW.C: 371: if(read_flag !=1)
   148  0034  1C20               	btfss	32,0
   149  0035  2C00               	goto	1024	;# 
   150  0036                     l2497:	
   151                           ;IAP_FW.C: 374: }
   152                           ;IAP_FW.C: 375: while(1)
   153                           
   154  0036  0064               	clrwdt	;# 
   155  0037  2836               	goto	l2497
   156  0038                     __end_of_main:	
   157  0038                     __ptext1:	
   158 ;; *************** function _iap_usart_init *****************
   159 ;; Defined at:
   160 ;;		line 4 in file "USART_DRV.C"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;		None
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg
   169 ;; Tracked objects:
   170 ;;		On entry : B1F/0
   171 ;;		On exit  : B1F/9
   172 ;;		Unchanged: B00/0
   173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   178 ;;Total ram usage:        0 bytes
   179 ;; Hardware stack levels used:    1
   180 ;; Hardware stack levels required when called:    5
   181 ;; This function calls:
   182 ;;		Nothing
   183 ;; This function is called by:
   184 ;;		_main
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           
   189                           ;psect for function _iap_usart_init
   190  0038                     _iap_usart_init:	
   191                           
   192                           ;USART_DRV.C: 7: PCKEN = (0X1<<5 );
   193                           
   194                           ;incstack = 0
   195                           ; Regs used in _iap_usart_init: [wreg]
   196  0038  3020               	movlw	32
   197  0039  0021               	movlb	1	; select bank1
   198  003A  009A               	movwf	26	;volatile
   199                           
   200                           ;USART_DRV.C: 8: OSCCON = 0B01110001;
   201  003B  3071               	movlw	113
   202  003C  0099               	movwf	25	;volatile
   203                           
   204                           ;USART_DRV.C: 11: AFP2 = 0B00000010;
   205  003D  3002               	movlw	2
   206  003E  0022               	movlb	2	; select bank2
   207  003F  009D               	movwf	29	;volatile
   208                           
   209                           ;USART_DRV.C: 16: URDLL=26;
   210  0040  301A               	movlw	26
   211  0041  0029               	movlb	9	; select bank9
   212  0042  0094               	movwf	20	;volatile
   213                           
   214                           ;USART_DRV.C: 20: URLCR=(0x1 );
   215  0043  3001               	movlw	1
   216  0044  008F               	movwf	15	;volatile
   217                           
   218                           ;USART_DRV.C: 22: URMCR=(0X1<<4 )|(0x1<<3 );
   219  0045  3018               	movlw	24
   220  0046  0091               	movwf	17	;volatile
   221                           
   222                           ;USART_DRV.C: 24: URRXNE |= (0X1<<0 );
   223  0047  140E               	bsf	14,0	;volatile
   224  0048  0008               	return
   225  0049                     __end_of_iap_usart_init:	
   226  0049                     __ptext2:	
   227 ;; *************** function _Power_On_App_Check *****************
   228 ;; Defined at:
   229 ;;		line 86 in file "IAP_FW.C"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;  CRC_Eeprom      2   17[BANK0 ] unsigned int 
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2, status,0, pclath, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : B1F/9
   240 ;;		On exit  : 1F/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   244 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   246 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   247 ;;Total ram usage:        2 bytes
   248 ;; Hardware stack levels used:    1
   249 ;; Hardware stack levels required when called:    7
   250 ;; This function calls:
   251 ;;		_All_Page_Read_CRC
   252 ;;		_EEPROMread
   253 ;; This function is called by:
   254 ;;		_main
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           
   259                           ;psect for function _Power_On_App_Check
   260  0049                     _Power_On_App_Check:	
   261                           
   262                           ;IAP_FW.C: 88: unsigned int CRC_Eeprom;
   263                           ;IAP_FW.C: 90: count=0;
   264                           
   265                           ;incstack = 0
   266                           ; Regs used in _Power_On_App_Check: [wreg+status,2+status,0+pclath+cstack]
   267  0049  0020               	movlb	0	; select bank0
   268  004A  3000               	movlw	0
   269  004B  01A1               	clrf	33
   270                           
   271                           ;IAP_FW.C: 91: flag=0;
   272  004C  01A0               	clrf	32
   273                           
   274                           ;IAP_FW.C: 93: CRC_Eeprom=EEPROMread(0);
   275  004D  2067  3180         	fcall	_EEPROMread
   276  004F  00B6               	movwf	Power_On_App_Check@CRC_Eeprom
   277  0050  01B7               	clrf	Power_On_App_Check@CRC_Eeprom+1
   278                           
   279                           ;IAP_FW.C: 94: CRC_Eeprom= CRC_Eeprom << 8;
   280  0051  00B7               	movwf	Power_On_App_Check@CRC_Eeprom+1
   281  0052  3001               	movlw	1
   282  0053  01B6               	clrf	Power_On_App_Check@CRC_Eeprom
   283                           
   284                           ;IAP_FW.C: 95: CRC_Eeprom= CRC_Eeprom + EEPROMread(1);
   285  0054  2067  3180         	fcall	_EEPROMread
   286  0056  07B6               	addwf	Power_On_App_Check@CRC_Eeprom,f
   287  0057  1803               	skipnc
   288  0058  0AB7               	incf	Power_On_App_Check@CRC_Eeprom+1,f
   289                           
   290                           ;IAP_FW.C: 97: All_Page_Read_CRC();
   291  0059  2080  3180         	fcall	_All_Page_Read_CRC
   292                           
   293                           ;IAP_FW.C: 98: if(CRC_Eeprom == CRC_16)
   294  005B  0824               	movf	36,w
   295  005C  0637               	xorwf	Power_On_App_Check@CRC_Eeprom+1,w
   296  005D  1D03               	skipz
   297  005E  2861               	goto	u705
   298  005F  0823               	movf	35,w
   299  0060  0636               	xorwf	Power_On_App_Check@CRC_Eeprom,w
   300  0061                     u705:	
   301  0061  1D03               	skipz
   302  0062  2865               	goto	l2408
   303                           
   304                           ;IAP_FW.C: 99: {
   305                           ;IAP_FW.C: 100: read_flag=0;
   306  0063  1020               	bcf	32,0
   307                           
   308                           ;IAP_FW.C: 101: }
   309  0064  0008               	return
   310  0065                     l2408:	
   311                           
   312                           ;IAP_FW.C: 102: else
   313                           ;IAP_FW.C: 103: {
   314                           ;IAP_FW.C: 104: read_flag=1;
   315  0065  1420               	bsf	32,0
   316  0066  0008               	return
   317  0067                     __end_of_Power_On_App_Check:	
   318  0067                     __ptext3:	
   319 ;; *************** function _EEPROMread *****************
   320 ;; Defined at:
   321 ;;		line 48 in file "MEM_DRV.C"
   322 ;; Parameters:    Size  Location     Type
   323 ;;  EEAddr          1    wreg     unsigned char 
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  EEAddr          1    9[BANK0 ] unsigned char 
   326 ;;  ReEEPROMread    1   10[BANK0 ] unsigned char 
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      unsigned char 
   329 ;; Registers used:
   330 ;;		wreg
   331 ;; Tracked objects:
   332 ;;		On entry : 1F/0
   333 ;;		On exit  : 1F/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   339 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   340 ;;Total ram usage:        2 bytes
   341 ;; Hardware stack levels used:    1
   342 ;; Hardware stack levels required when called:    5
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_Power_On_App_Check
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           
   351                           ;psect for function _EEPROMread
   352  0067                     _EEPROMread:	
   353                           
   354                           ;incstack = 0
   355                           ; Regs used in _EEPROMread: [wreg]
   356                           ;EEPROMread@EEAddr stored from wreg
   357  0067  00AE               	movwf	EEPROMread@EEAddr
   358                           
   359                           ;MEM_DRV.C: 50: unsigned char ReEEPROMread;
   360                           ;MEM_DRV.C: 51: DRDEN=1;
   361  0068  0023               	movlb	3	; select bank3
   362  0069  1418               	bsf	24,0	;volatile
   363                           
   364                           ;MEM_DRV.C: 52: __nop();
   365  006A  0000               	nop
   366                           
   367                           ;MEM_DRV.C: 53: __nop();
   368  006B  0000               	nop
   369                           
   370                           ;MEM_DRV.C: 54: EEADRL = EEAddr;
   371  006C  0020               	movlb	0	; select bank0
   372  006D  082E               	movf	EEPROMread@EEAddr,w
   373  006E  0023               	movlb	3	; select bank3
   374  006F  0091               	movwf	17	;volatile
   375                           
   376                           ;MEM_DRV.C: 56: EEPGD=0;
   377  0070  1395               	bcf	21,7	;volatile
   378                           
   379                           ;MEM_DRV.C: 57: CFGS=0;
   380  0071  1315               	bcf	21,6	;volatile
   381                           
   382                           ;MEM_DRV.C: 58: RD = 1;
   383  0072  1415               	bsf	21,0	;volatile
   384                           
   385                           ;MEM_DRV.C: 59: __nop();
   386  0073  0000               	nop
   387                           
   388                           ;MEM_DRV.C: 60: __nop();
   389  0074  0000               	nop
   390                           
   391                           ;MEM_DRV.C: 61: __nop();
   392  0075  0000               	nop
   393                           
   394                           ;MEM_DRV.C: 62: __nop();
   395  0076  0000               	nop
   396                           
   397                           ;MEM_DRV.C: 63: ReEEPROMread = EEDATL;
   398  0077  0023               	movlb	3	; select bank3
   399  0078  0813               	movf	19,w	;volatile
   400  0079  0020               	movlb	0	; select bank0
   401  007A  00AF               	movwf	EEPROMread@ReEEPROMread
   402                           
   403                           ;MEM_DRV.C: 65: DRDEN=0;
   404  007B  0023               	movlb	3	; select bank3
   405  007C  1018               	bcf	24,0	;volatile
   406                           
   407                           ;MEM_DRV.C: 66: return ReEEPROMread;
   408  007D  0020               	movlb	0	; select bank0
   409  007E  082F               	movf	EEPROMread@ReEEPROMread,w
   410  007F  0008               	return
   411  0080                     __end_of_EEPROMread:	
   412  0080                     __ptext4:	
   413 ;; *************** function _All_Page_Read_CRC *****************
   414 ;; Defined at:
   415 ;;		line 57 in file "IAP_FW.C"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  iap_addr        2   15[BANK0 ] unsigned int 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 1F/0
   426 ;;		On exit  : 1F/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   433 ;;Total ram usage:        2 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; Hardware stack levels required when called:    6
   436 ;; This function calls:
   437 ;;		_CRC16_CCITT
   438 ;;		_iap_mem_rd
   439 ;; This function is called by:
   440 ;;		_Power_On_App_Check
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _All_Page_Read_CRC
   446  0080                     _All_Page_Read_CRC:	
   447                           
   448                           ;IAP_FW.C: 59: unsigned int iap_addr;
   449                           ;IAP_FW.C: 60: CRC_16 = 0;
   450                           
   451                           ;incstack = 0
   452                           ; Regs used in _All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
   453                           
   454                           ;IAP_FW.C: 61: EECON1 = (0x1<<7 )|(0X1<<2 );
   455  0080  2119  3180         	fcall	PL12	;call to abstracted procedure
   456                           
   457                           ;IAP_FW.C: 62: for(iap_addr=0X400;iap_addr<0x2000;iap_addr++)
   458  0082  0020               	movlb	0	; select bank0
   459  0083  3004               	movlw	4
   460  0084  01B4               	clrf	All_Page_Read_CRC@iap_addr
   461  0085  00B5               	movwf	All_Page_Read_CRC@iap_addr+1
   462  0086                     l8148:	
   463                           
   464                           ;IAP_FW.C: 63: {
   465                           ;IAP_FW.C: 64: EEADRH = iap_addr>>8;
   466  0086  0835               	movf	All_Page_Read_CRC@iap_addr+1,w
   467  0087  0023               	movlb	3	; select bank3
   468  0088  0092               	movwf	18	;volatile
   469                           
   470                           ;IAP_FW.C: 65: EEADRL = iap_addr>>0;
   471  0089  0020               	movlb	0	; select bank0
   472  008A  0834               	movf	All_Page_Read_CRC@iap_addr,w
   473  008B  0023               	movlb	3	; select bank3
   474  008C  0091               	movwf	17	;volatile
   475                           
   476                           ;IAP_FW.C: 66: iap_mem_rd();
   477  008D  20C0  3180         	fcall	_iap_mem_rd
   478                           
   479                           ;IAP_FW.C: 67: CRC16_CCITT(EEDATL);
   480  008F  0813               	movf	19,w	;volatile
   481  0090  20A1  3180         	fcall	_CRC16_CCITT
   482                           
   483                           ;IAP_FW.C: 68: CRC16_CCITT(EEDATH);
   484  0092  0023               	movlb	3	; select bank3
   485  0093  0814               	movf	20,w	;volatile
   486  0094  20A1  3180         	fcall	_CRC16_CCITT
   487  0096  0AB4               	incf	All_Page_Read_CRC@iap_addr,f
   488  0097  1903               	skipnz
   489  0098  0AB5               	incf	All_Page_Read_CRC@iap_addr+1,f
   490  0099  3020               	movlw	32
   491  009A  0235               	subwf	All_Page_Read_CRC@iap_addr+1,w
   492  009B  3000               	movlw	0
   493  009C  1903               	skipnz
   494  009D  0234               	subwf	All_Page_Read_CRC@iap_addr,w
   495  009E  1803               	btfsc	3,0
   496  009F  0008               	return
   497  00A0  2886               	goto	l8148
   498  00A1                     __end_of_All_Page_Read_CRC:	
   499  00A1                     __ptext6:	
   500 ;; *************** function _CRC16_CCITT *****************
   501 ;; Defined at:
   502 ;;		line 41 in file "IAP_FW.C"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  data            1    wreg     unsigned char 
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  data            1   13[BANK0 ] unsigned char 
   507 ;;  i               1   14[BANK0 ] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0
   512 ;; Tracked objects:
   513 ;;		On entry : 1F/3
   514 ;;		On exit  : 1F/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   519 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   520 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   521 ;;Total ram usage:        6 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; Hardware stack levels required when called:    5
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_All_Page_Read_CRC
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _CRC16_CCITT
   533  00A1                     _CRC16_CCITT:	
   534                           
   535                           ;incstack = 0
   536                           ; Regs used in _CRC16_CCITT: [wreg+status,2+status,0]
   537                           ;CRC16_CCITT@data stored from wreg
   538  00A1  0020               	movlb	0	; select bank0
   539  00A2  00B2               	movwf	CRC16_CCITT@data
   540                           
   541                           ;IAP_FW.C: 44: unsigned char i;
   542                           ;IAP_FW.C: 46: CRC_16 ^= data;
   543  00A3  06A3               	xorwf	35,f
   544                           
   545                           ;IAP_FW.C: 48: for(i = 0;i < 8;i++)
   546  00A4  01B3               	clrf	CRC16_CCITT@i
   547  00A5                     l2393:	
   548                           
   549                           ;IAP_FW.C: 49: {
   550                           ;IAP_FW.C: 50: if(CRC_16 & 0x01)
   551  00A5  1C23               	btfss	35,0
   552  00A6  28B8               	goto	l8100
   553                           
   554                           ;IAP_FW.C: 51: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
   555  00A7  0824               	movf	36,w
   556  00A8  00AF               	movwf	??_CRC16_CCITT+1
   557  00A9  0823               	movf	35,w
   558  00AA  00AE               	movwf	??_CRC16_CCITT
   559  00AB  3008               	movlw	8
   560  00AC  36AF               	lsrf	??_CRC16_CCITT+1,f
   561  00AD  0CAE               	rrf	??_CRC16_CCITT,f
   562  00AE  062E               	xorwf	??_CRC16_CCITT,w
   563  00AF  00B0               	movwf	??_CRC16_CCITT+2
   564  00B0  3084               	movlw	132
   565  00B1  062F               	xorwf	??_CRC16_CCITT+1,w
   566  00B2  00B1               	movwf	??_CRC16_CCITT+3
   567  00B3  0830               	movf	??_CRC16_CCITT+2,w
   568  00B4  00A3               	movwf	35
   569  00B5  0831               	movf	??_CRC16_CCITT+3,w
   570  00B6  00A4               	movwf	36
   571  00B7  28BA               	goto	l2396
   572  00B8                     l8100:	
   573                           
   574                           ;IAP_FW.C: 52: else
   575                           ;IAP_FW.C: 53: CRC_16 = CRC_16 >> 1;
   576  00B8  36A4               	lsrf	36,f
   577  00B9  0CA3               	rrf	35,f
   578  00BA                     l2396:	
   579  00BA  3008               	movlw	8
   580  00BB  0AB3               	incf	CRC16_CCITT@i,f
   581  00BC  0233               	subwf	CRC16_CCITT@i,w
   582  00BD  1803               	btfsc	3,0
   583  00BE  0008               	return
   584  00BF  28A5               	goto	l2393
   585  00C0                     __end_of_CRC16_CCITT:	
   586  00C0                     __ptext5:	
   587 ;; *************** function _iap_mem_rd *****************
   588 ;; Defined at:
   589 ;;		line 34 in file "MEM_DRV.C"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		None
   598 ;; Tracked objects:
   599 ;;		On entry : 1F/3
   600 ;;		On exit  : 1F/3
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    5
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_All_Page_Read_CRC
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _iap_mem_rd
   619  00C0                     _iap_mem_rd:	
   620                           
   621                           ;MEM_DRV.C: 36: EECON1 |=(0x1<<0 );
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _iap_mem_rd: []
   625  00C0  1415               	bsf	21,0	;volatile
   626  00C1  0000               	nop	;# 
   627  00C2                     l4872:	
   628                           ;MEM_DRV.C: 38: while(EECON1 & (0x1<<0 ));
   629                           
   630  00C2  0023               	movlb	3	; select bank3
   631  00C3  1C15               	btfss	21,0	;volatile
   632  00C4  0008               	return
   633  00C5  28C2               	goto	l4872
   634  00C6                     __end_of_iap_mem_rd:	
   635  00C6                     __ptext13:	
   636 ;; *************** function _Eeprom_Write_Crc *****************
   637 ;; Defined at:
   638 ;;		line 71 in file "IAP_FW.C"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0, pclath, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 1F/3
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    2
   659 ;; This function calls:
   660 ;;		_iap_mem_prog
   661 ;;		i1_All_Page_Read_CRC
   662 ;; This function is called by:
   663 ;;		_user_isr
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _Eeprom_Write_Crc
   669  00C6                     _Eeprom_Write_Crc:	
   670                           
   671                           ;IAP_FW.C: 73: All_Page_Read_CRC();
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in _Eeprom_Write_Crc: [wreg+status,2+status,0+pclath+cstack]
   675  00C6  20DB               	fcall	i1_All_Page_Read_CRC
   676                           
   677                           ;IAP_FW.C: 75: EECON1 &=~(0x1<<7 );
   678  00C7  0023               	movlb	3	; select bank3
   679  00C8  1395               	bcf	21,7	;volatile
   680                           
   681                           ;IAP_FW.C: 76: EECON1 =(0X1<<2 );
   682  00C9  3004               	movlw	4
   683  00CA  0095               	movwf	21	;volatile
   684                           
   685                           ;IAP_FW.C: 78: EEADRL=0;
   686  00CB  0191               	clrf	17	;volatile
   687                           
   688                           ;IAP_FW.C: 79: EEDATL=CRC_H;
   689  00CC  0020               	movlb	0	; select bank0
   690  00CD  0824               	movf	36,w
   691  00CE  0023               	movlb	3	; select bank3
   692  00CF  0093               	movwf	19	;volatile
   693                           
   694                           ;IAP_FW.C: 80: iap_mem_prog();
   695  00D0  3182  2252  3180   	fcall	_iap_mem_prog
   696                           
   697                           ;IAP_FW.C: 81: EEADRL=1;
   698  00D3  3001               	movlw	1
   699  00D4  0091               	movwf	17	;volatile
   700                           
   701                           ;IAP_FW.C: 82: EEDATL=CRC_L;
   702  00D5  0020               	movlb	0	; select bank0
   703  00D6  0823               	movf	35,w
   704  00D7  0023               	movlb	3	; select bank3
   705  00D8  0093               	movwf	19	;volatile
   706                           
   707                           ;IAP_FW.C: 83: iap_mem_prog();
   708  00D9  3182  2A52         	ljmp	i1l8106
   709  00DB                     __end_of_Eeprom_Write_Crc:	
   710  00DB                     __ptext14:	
   711 ;; *************** function i1_All_Page_Read_CRC *****************
   712 ;; Defined at:
   713 ;;		line 57 in file "IAP_FW.C"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  All_Page_Rea    2    6[COMMON] unsigned int 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 1F/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   731 ;;Total ram usage:        2 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; Hardware stack levels required when called:    1
   734 ;; This function calls:
   735 ;;		i1_CRC16_CCITT
   736 ;;		i1_iap_mem_rd
   737 ;; This function is called by:
   738 ;;		_Eeprom_Write_Crc
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function i1_All_Page_Read_CRC
   744  00DB                     i1_All_Page_Read_CRC:	
   745                           
   746                           ;IAP_FW.C: 59: unsigned int iap_addr;
   747                           ;IAP_FW.C: 60: CRC_16 = 0;
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in i1_All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
   751  00DB  0020               	movlb	0	; select bank0
   752                           
   753                           ;IAP_FW.C: 61: EECON1 = (0x1<<7 )|(0X1<<2 );
   754  00DC  2119               	fcall	PL12	;call to abstracted procedure
   755                           
   756                           ;IAP_FW.C: 62: for(iap_addr=0X400;iap_addr<0x2000;iap_addr++)
   757  00DD  3004               	movlw	4
   758  00DE  01F8               	clrf	i1All_Page_Read_CRC@iap_addr
   759  00DF  00F9               	movwf	i1All_Page_Read_CRC@iap_addr+1
   760  00E0                     i1l8130:	
   761                           
   762                           ;IAP_FW.C: 63: {
   763                           ;IAP_FW.C: 64: EEADRH = iap_addr>>8;
   764  00E0  0879               	movf	i1All_Page_Read_CRC@iap_addr+1,w
   765  00E1  0023               	movlb	3	; select bank3
   766  00E2  0092               	movwf	18	;volatile
   767                           
   768                           ;IAP_FW.C: 65: EEADRL = iap_addr>>0;
   769  00E3  0878               	movf	i1All_Page_Read_CRC@iap_addr,w
   770  00E4  0091               	movwf	17	;volatile
   771                           
   772                           ;IAP_FW.C: 66: iap_mem_rd();
   773  00E5  3182  227E  3180   	fcall	i1_iap_mem_rd
   774                           
   775                           ;IAP_FW.C: 67: CRC16_CCITT(EEDATL);
   776  00E8  0813               	movf	19,w	;volatile
   777  00E9  20FA  3180         	fcall	i1_CRC16_CCITT
   778                           
   779                           ;IAP_FW.C: 68: CRC16_CCITT(EEDATH);
   780  00EB  0023               	movlb	3	; select bank3
   781  00EC  0814               	movf	20,w	;volatile
   782  00ED  20FA  3180         	fcall	i1_CRC16_CCITT
   783  00EF  0AF8               	incf	i1All_Page_Read_CRC@iap_addr,f
   784  00F0  1903               	skipnz
   785  00F1  0AF9               	incf	i1All_Page_Read_CRC@iap_addr+1,f
   786  00F2  3020               	movlw	32
   787  00F3  0279               	subwf	i1All_Page_Read_CRC@iap_addr+1,w
   788  00F4  3000               	movlw	0
   789  00F5  1903               	skipnz
   790  00F6  0278               	subwf	i1All_Page_Read_CRC@iap_addr,w
   791  00F7  1803               	btfsc	3,0
   792  00F8  0008               	return
   793  00F9  28E0               	goto	i1l8130
   794  00FA                     __end_ofi1_All_Page_Read_CRC:	
   795  00FA                     __ptext16:	
   796 ;; *************** function i1_CRC16_CCITT *****************
   797 ;; Defined at:
   798 ;;		line 41 in file "IAP_FW.C"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  data            1    wreg     unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  data            1    4[COMMON] unsigned char 
   803 ;;  CRC16_CCITT     1    5[COMMON] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 1C/0
   810 ;;		On exit  : 1F/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   816 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   817 ;;Total ram usage:        6 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_user_isr
   823 ;;		i1_All_Page_Read_CRC
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function i1_CRC16_CCITT
   829  00FA                     i1_CRC16_CCITT:	
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in i1_CRC16_CCITT: [wreg+status,2+status,0]
   833                           ;i1CRC16_CCITT@data stored from wreg
   834  00FA  00F6               	movwf	i1CRC16_CCITT@data
   835                           
   836                           ;IAP_FW.C: 44: unsigned char i;
   837                           ;IAP_FW.C: 46: CRC_16 ^= data;
   838  00FB  0020               	movlb	0	; select bank0
   839  00FC  06A3               	xorwf	35,f
   840                           
   841                           ;IAP_FW.C: 48: for(i = 0;i < 8;i++)
   842  00FD  01F7               	clrf	i1CRC16_CCITT@i
   843  00FE                     i1l2393:	
   844                           
   845                           ;IAP_FW.C: 49: {
   846                           ;IAP_FW.C: 50: if(CRC_16 & 0x01)
   847  00FE  1C23               	btfss	35,0
   848  00FF  2911               	goto	i1l8084
   849                           
   850                           ;IAP_FW.C: 51: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
   851  0100  0824               	movf	36,w
   852  0101  00F3               	movwf	??i1_CRC16_CCITT+1
   853  0102  0823               	movf	35,w
   854  0103  00F2               	movwf	??i1_CRC16_CCITT
   855  0104  3008               	movlw	8
   856  0105  36F3               	lsrf	??i1_CRC16_CCITT+1,f
   857  0106  0CF2               	rrf	??i1_CRC16_CCITT,f
   858  0107  0672               	xorwf	??i1_CRC16_CCITT,w
   859  0108  00F4               	movwf	??i1_CRC16_CCITT+2
   860  0109  3084               	movlw	132
   861  010A  0673               	xorwf	??i1_CRC16_CCITT+1,w
   862  010B  00F5               	movwf	??i1_CRC16_CCITT+3
   863  010C  0874               	movf	??i1_CRC16_CCITT+2,w
   864  010D  00A3               	movwf	35
   865  010E  0875               	movf	??i1_CRC16_CCITT+3,w
   866  010F  00A4               	movwf	36
   867  0110  2913               	goto	i1l2396
   868  0111                     i1l8084:	
   869                           
   870                           ;IAP_FW.C: 52: else
   871                           ;IAP_FW.C: 53: CRC_16 = CRC_16 >> 1;
   872  0111  36A4               	lsrf	36,f
   873  0112  0CA3               	rrf	35,f
   874  0113                     i1l2396:	
   875  0113  3008               	movlw	8
   876  0114  0AF7               	incf	i1CRC16_CCITT@i,f
   877  0115  0277               	subwf	i1CRC16_CCITT@i,w
   878  0116  1803               	btfsc	3,0
   879  0117  0008               	return
   880  0118  28FE               	goto	i1l2393
   881  0119                     __end_ofi1_CRC16_CCITT:	
   882  0119                     PL12:	
   883  0119  3084               	movlw	132
   884  011A  01A3               	clrf	35
   885  011B  01A4               	clrf	36
   886  011C  0023               	movlb	3	; select bank3
   887  011D  0095               	movwf	21	;volatile
   888  011E  0008               	return
   889  011F                     __end_ofPL12:	
   890                           
   891                           	psect	clrtext
   892  0320                     clear_ram0:	
   893                           ;	Called with FSR0 containing the base address, and
   894                           ;	btemp/btemp+1 has the size to clear
   895                           
   896  0320  0064               	clrwdt	;clear the watchdog before getting into this loop
   897  0321                     clrloop0:	
   898  0321  3001               	movlw	1
   899  0322  0180               	clrf	0	;clear RAM location pointed to by FSR
   900  0323  3101               	addfsr 0,1
   901  0324  02FE               	subwf	126,f
   902  0325  3000               	movlw	0
   903  0326  3BFF               	subwfb	127,f
   904  0327  087F               	movf	127,w
   905  0328  047E               	iorwf	126,w
   906  0329  1903               	btfsc	3,2
   907  032A  3400               	retlw	0	;all done for this memory range, return
   908  032B  2B21               	goto	clrloop0	;have we reached the end yet?
   909                           
   910                           	psect	cstackCOMMON
   911  0072                     __pcstackCOMMON:	
   912  0072                     ?_iap_mem_rd:	
   913  0072                     ?_iap_mem_prog:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0072                     ??_iap_mem_prog:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0072                     ?_EEPROMread:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0072                     ?_user_isr:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0072                     ?_iap_usart_rec:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0072                     ?_iap_mem_erase:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0072                     ??_iap_mem_erase:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0072                     ?_iap_usart_init:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0072                     ?_CRC16_CCITT:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0072                     ?_All_Page_Read_CRC:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0072                     ?_Eeprom_Write_Crc:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0072                     ?_Power_On_App_Check:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0072                     ?_data_check_erase_or_not:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0072                     ?_ISR:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0072                     ?_main:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0072                     ?_Unlock_Flash:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0072                     ??_Unlock_Flash:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0072                     ?_DelayUs:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0072                     ??_DelayUs:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0072                     ?i1_CRC16_CCITT:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0072                     ??i1_CRC16_CCITT:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0072                     ?i1_All_Page_Read_CRC:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0072                     ?i1_iap_mem_rd:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0072                     ??i1_iap_mem_rd:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0072                     DelayUs@a:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0072                     data_check_erase_or_not@addr:	
   989                           ; 1 bytes @ 0x0
   990                           
   991                           
   992                           ; 2 bytes @ 0x0
   993  0072                     	ds	1
   994  0073                     ??_iap_usart_rec:	
   995  0073                     iap_usart_rec@a:	
   996                           ; 1 bytes @ 0x1
   997                           
   998                           
   999                           ; 2 bytes @ 0x1
  1000  0073                     	ds	1
  1001  0074                     data_check_erase_or_not@mode:	
  1002                           
  1003                           ; 1 bytes @ 0x2
  1004  0074                     	ds	1
  1005  0075                     ??_data_check_erase_or_not:	
  1006                           
  1007                           ; 1 bytes @ 0x3
  1008  0075                     	ds	1
  1009  0076                     i1CRC16_CCITT@data:	
  1010                           
  1011                           ; 1 bytes @ 0x4
  1012  0076                     	ds	1
  1013  0077                     i1CRC16_CCITT@i:	
  1014                           
  1015                           ; 1 bytes @ 0x5
  1016  0077                     	ds	1
  1017  0078                     ??i1_All_Page_Read_CRC:	
  1018  0078                     i1All_Page_Read_CRC@iap_addr:	
  1019                           ; 1 bytes @ 0x6
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x6
  1023  0078                     	ds	1
  1024  0079                     data_check_erase_or_not@j:	
  1025                           
  1026                           ; 1 bytes @ 0x7
  1027  0079                     	ds	1
  1028  007A                     ??_Eeprom_Write_Crc:	
  1029  007A                     data_check_erase_or_not@k:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x8
  1034  007A                     	ds	1
  1035  007B                     data_check_erase_or_not@i:	
  1036                           
  1037                           ; 1 bytes @ 0x9
  1038  007B                     	ds	1
  1039  007C                     ??_ISR:	
  1040                           
  1041                           	psect	cstackBANK0
  1042  0025                     __pcstackBANK0:	
  1043                           ; 1 bytes @ 0xA
  1044                           
  1045  0025                     ??_user_isr:	
  1046                           
  1047                           ; 1 bytes @ 0x0
  1048  0025                     	ds	4
  1049  0029                     user_isr@CRC16_dat1:	
  1050                           
  1051                           ; 2 bytes @ 0x4
  1052  0029                     	ds	2
  1053  002B                     user_isr@iap_addr:	
  1054                           
  1055                           ; 2 bytes @ 0x6
  1056  002B                     	ds	2
  1057  002D                     user_isr@i:	
  1058                           
  1059                           ; 1 bytes @ 0x8
  1060  002D                     	ds	1
  1061  002E                     ??_iap_mem_rd:	
  1062  002E                     ??_EEPROMread:	
  1063                           ; 1 bytes @ 0x9
  1064                           
  1065  002E                     ??_iap_usart_init:	
  1066                           ; 1 bytes @ 0x9
  1067                           
  1068  002E                     ??_CRC16_CCITT:	
  1069                           ; 1 bytes @ 0x9
  1070                           
  1071  002E                     EEPROMread@EEAddr:	
  1072                           ; 1 bytes @ 0x9
  1073                           
  1074                           
  1075                           ; 1 bytes @ 0x9
  1076  002E                     	ds	1
  1077  002F                     EEPROMread@ReEEPROMread:	
  1078                           
  1079                           ; 1 bytes @ 0xA
  1080  002F                     	ds	3
  1081  0032                     CRC16_CCITT@data:	
  1082                           
  1083                           ; 1 bytes @ 0xD
  1084  0032                     	ds	1
  1085  0033                     CRC16_CCITT@i:	
  1086                           
  1087                           ; 1 bytes @ 0xE
  1088  0033                     	ds	1
  1089  0034                     ??_All_Page_Read_CRC:	
  1090  0034                     All_Page_Read_CRC@iap_addr:	
  1091                           ; 1 bytes @ 0xF
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0xF
  1095  0034                     	ds	2
  1096  0036                     ??_Power_On_App_Check:	
  1097  0036                     Power_On_App_Check@CRC_Eeprom:	
  1098                           ; 1 bytes @ 0x11
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x11
  1102  0036                     	ds	2
  1103  0038                     ??_main:	
  1104                           
  1105                           	psect	intentry
  1106  0004                     __pintentry:	
  1107 ;; *************** function _ISR *****************
  1108 ;; Defined at:
  1109 ;;		line 142 in file "IAP_FW.C"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    4
  1130 ;; This function calls:
  1131 ;;		_user_isr
  1132 ;; This function is called by:
  1133 ;;		Interrupt level 1
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137  0004                     _ISR:	
  1138                           
  1139                           ;incstack = 0
  1140  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1141                           
  1142                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1143  0005  3180               	pagesel	$
  1144  0006  0000               	nop	; ;# 
  1145  0007  0000               	nop	; ;# 
  1146  0008  0000               	nop	; ;# 
  1147  0009  0000               	nop	; ;# 
  1148  000A  0000               	nop	; ;# 
  1149  000B  0000               	nop	; ;# 
  1150  000C  0000               	nop	; ;# 
  1151  000D  0000               	nop	; ;# 
  1152  000E  0000               	nop	; ;# 
  1153  000F  0000               	nop	; ;# 
  1154  0010  0000               	nop	; ;# 
  1155  0011  0000               	nop	; ;# 
  1156  0012  0000               	nop	; ;# 
  1157  0013  0000               	nop	; ;# 
  1158  0014  0000               	nop	; ;# 
  1159  0015  0000               	nop	; ;# 
  1160  0016  0000               	nop	; ;# 
  1161  0017  0000               	nop	; ;# 
  1162  0018  0000               	nop	; ;# 
  1163  0019  0000               	nop	; ;# 
  1164  001A  0000               	nop	; ;# 
  1165                           
  1166                           ;IAP_FW.C: 167: user_isr();
  1167  001B  3181  211F         	fcall	_user_isr
  1168  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1169  001E  0009               	retfie
  1170  001F                     __end_of_ISR:	
  1171                           
  1172                           	psect	text8
  1173  011F                     __ptext8:	
  1174 ;; *************** function _user_isr *****************
  1175 ;; Defined at:
  1176 ;;		line 169 in file "IAP_FW.C"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  iap_addr        2    6[BANK0 ] unsigned int 
  1181 ;;  CRC16_dat1      2    4[BANK0 ] unsigned int 
  1182 ;;  i               1    8[BANK0 ] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1193 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1194 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;Total ram usage:        9 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    3
  1199 ;; This function calls:
  1200 ;;		_Eeprom_Write_Crc
  1201 ;;		_data_check_erase_or_not
  1202 ;;		_iap_mem_erase
  1203 ;;		_iap_mem_prog
  1204 ;;		_iap_usart_rec
  1205 ;;		i1_CRC16_CCITT
  1206 ;; This function is called by:
  1207 ;;		_ISR
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function _user_isr
  1213  011F                     _user_isr:	
  1214                           
  1215                           ;IAP_FW.C: 172: if(URRXNE && RXNEF)
  1216                           
  1217                           ;incstack = 0
  1218                           ; Regs used in _user_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1219  011F  0029               	movlb	9	; select bank9
  1220  0120  180E               	btfsc	14,0	;volatile
  1221  0121  1C12               	btfss	18,0	;volatile
  1222  0122  2A1E               	goto	i1l2431
  1223                           
  1224                           ;IAP_FW.C: 173: {
  1225                           ;IAP_FW.C: 174: if(FEF==1)
  1226  0123  1992               	btfsc	18,3	;volatile
  1227                           
  1228                           ;IAP_FW.C: 175: {FEF=0;}
  1229  0124  1192               	bcf	18,3	;volatile
  1230                           
  1231                           ;IAP_FW.C: 176: iap_recdata= URDATAL;
  1232  0125  080C               	movf	12,w	;volatile
  1233  0126  0020               	movlb	0	; select bank0
  1234  0127  00A2               	movwf	34
  1235                           
  1236                           ;IAP_FW.C: 177: count++;
  1237  0128  0AA1               	incf	33,f
  1238                           
  1239                           ;IAP_FW.C: 178: switch(count)
  1240  0129  2942               	goto	i1l8332
  1241  012A                     i1l8298:	
  1242                           
  1243                           ;IAP_FW.C: 182: if(iap_recdata != 0x46)
  1244  012A  3046               	movlw	70
  1245  012B                     L1:	
  1246  012B  0622               	xorwf	34,w
  1247  012C  1903               	btfsc	3,2
  1248  012D  294F               	goto	i1l2437
  1249  012E                     i1l8300:	
  1250                           
  1251                           ;IAP_FW.C: 183: {iap_err_flag=1;}
  1252  012E  14A0               	bsf	32,1
  1253  012F  294F               	goto	i1l2437
  1254  0130                     i1l8302:	
  1255                           
  1256                           ;IAP_FW.C: 188: if(iap_recdata != 0x4D)
  1257  0130  304D               	movlw	77
  1258  0131  292B               	goto	L1
  1259  0132                     i1l8306:	
  1260                           
  1261                           ;IAP_FW.C: 194: if(iap_recdata!= 0x44)
  1262  0132  3044               	movlw	68
  1263  0133  292B               	goto	L1
  1264  0134                     i1l8310:	
  1265                           
  1266                           ;IAP_FW.C: 200: if(iap_recdata != 0x49)
  1267  0134  3049               	movlw	73
  1268  0135  292B               	goto	L1
  1269  0136                     i1l8314:	
  1270                           
  1271                           ;IAP_FW.C: 206: if(iap_recdata != 0x41)
  1272  0136  3041               	movlw	65
  1273  0137  292B               	goto	L1
  1274  0138                     i1l8318:	
  1275                           
  1276                           ;IAP_FW.C: 212: if(iap_recdata != 0x50)
  1277  0138  3050               	movlw	80
  1278  0139  292B               	goto	L1
  1279  013A                     i1l8322:	
  1280                           
  1281                           ;IAP_FW.C: 218: if(iap_recdata!= 0x55)
  1282  013A  3055               	movlw	85
  1283  013B  292B               	goto	L1
  1284  013C                     i1l8326:	
  1285                           
  1286                           ;IAP_FW.C: 225: if(iap_recdata!= 0xaa)
  1287  013C  30AA               	movlw	170
  1288  013D  0622               	xorwf	34,w
  1289  013E  1D03               	btfss	3,2
  1290  013F  292E               	goto	i1l8300
  1291                           
  1292                           ;IAP_FW.C: 227: else
  1293                           ;IAP_FW.C: 228: {iap_ok_flag=1;}
  1294  0140  1520               	bsf	32,2
  1295  0141  294F               	goto	i1l2437
  1296  0142                     i1l8332:	
  1297  0142  0821               	movf	33,w
  1298                           
  1299                           ; Switch size 1, requested type "space"
  1300                           ; Number of cases is 16, Range of values is 1 to 16
  1301                           ; switch strategies available:
  1302                           ; Name         Instructions Cycles
  1303                           ; direct_byte           41     9 (fixed)
  1304                           ; simple_byte           49    25 (average)
  1305                           ; jumptable            263     9 (fixed)
  1306                           ;	Chosen strategy is direct_byte
  1307  0143  3EFF               	addlw	-1
  1308  0144  1C03               	skipc
  1309  0145  292E               	goto	i1l8300
  1310  0146  0084               	movwf	4
  1311  0147  3010               	movlw	16
  1312  0148  0204               	subwf	4,w
  1313  0149  1803               	skipnc
  1314  014A  292E               	goto	i1l8300
  1315  014B  3183               	movlp	high i1S8512
  1316  014C  3504               	lslf	4,w
  1317  014D  3E00               	addlw	low i1S8512
  1318  014E  0082               	movwf	2
  1319  014F                     i1l2437:	
  1320                           
  1321                           ;IAP_FW.C: 235: if(iap_ok_flag==1)
  1322  014F  1D20               	btfss	32,2
  1323  0150  2A10               	goto	i1l2461
  1324                           
  1325                           ;IAP_FW.C: 236: {
  1326                           ;IAP_FW.C: 237: count=0;
  1327  0151  01A1               	clrf	33
  1328                           
  1329                           ;IAP_FW.C: 238: iap_ok_flag =0;
  1330  0152  1120               	bcf	32,2
  1331                           
  1332                           ;IAP_FW.C: 239: unsigned char i ;
  1333                           ;IAP_FW.C: 240: unsigned int iap_addr;
  1334                           ;IAP_FW.C: 241: unsigned int CRC16_dat1;
  1335                           ;IAP_FW.C: 242: URRXNE &= ~(0X1<<0 );
  1336  0153  0029               	movlb	9	; select bank9
  1337  0154  100E               	bcf	14,0	;volatile
  1338                           
  1339                           ;IAP_FW.C: 243: EECON1 = (0x1<<7 )|(0X1<<2 );
  1340  0155  3084               	movlw	132
  1341  0156  0023               	movlb	3	; select bank3
  1342  0157  0095               	movwf	21	;volatile
  1343                           
  1344                           ;IAP_FW.C: 248: switch(iap_databuf[0])
  1345  0158  29FB               	goto	i1l8342
  1346  0159                     i1l2464:	
  1347                           ;IAP_FW.C: 249: {
  1348                           ;IAP_FW.C: 250: case 0X05:
  1349                           
  1350                           
  1351                           ;IAP_FW.C: 251: for(i=1;i<133;i++)
  1352  0159  0020               	movlb	0	; select bank0
  1353  015A  01AD               	clrf	user_isr@i
  1354  015B  0AAD               	incf	user_isr@i,f
  1355  015C                     i1l8348:	
  1356                           
  1357                           ;IAP_FW.C: 252: {
  1358                           ;IAP_FW.C: 253: iap_databuf[i]=iap_usart_rec();
  1359  015C  2259  3181         	fcall	_iap_usart_rec
  1360  015E  0020               	movlb	0	; select bank0
  1361  015F  00A5               	movwf	??_user_isr
  1362  0160  082D               	movf	user_isr@i,w
  1363  0161  3E6B               	addlw	107
  1364  0162  00A6               	movwf	??_user_isr+1
  1365  0163  3023               	movlw	35
  1366  0164  01A7               	clrf	??_user_isr+2
  1367  0165  3DA7               	addwfc	??_user_isr+2,f
  1368  0166  0826               	movf	??_user_isr+1,w
  1369  0167  0086               	movwf	6
  1370  0168  0827               	movf	??_user_isr+2,w
  1371  0169  0087               	movwf	7
  1372  016A  0825               	movf	??_user_isr,w
  1373  016B  0081               	movwf	1
  1374  016C  3085               	movlw	133
  1375  016D  0AAD               	incf	user_isr@i,f
  1376  016E  022D               	subwf	user_isr@i,w
  1377  016F  1C03               	skipc
  1378  0170  295C               	goto	i1l8348
  1379                           
  1380                           ;IAP_FW.C: 254: }
  1381                           ;IAP_FW.C: 255: CRC16_dat1 = iap_databuf[131];
  1382  0171  30EE               	movlw	238
  1383  0172  0086               	movwf	6
  1384  0173  3023               	movlw	35
  1385  0174  0087               	movwf	7
  1386  0175  0801               	movf	1,w
  1387  0176  00A9               	movwf	user_isr@CRC16_dat1
  1388  0177  30EF               	movlw	239
  1389  0178  01AA               	clrf	user_isr@CRC16_dat1+1
  1390                           
  1391                           ;IAP_FW.C: 256: CRC16_dat1 = ((CRC16_dat1<<8)+iap_databuf[132]);
  1392  0179  0086               	movwf	6
  1393  017A  0829               	movf	user_isr@CRC16_dat1,w
  1394  017B  00A5               	movwf	??_user_isr
  1395  017C  0801               	movf	1,w
  1396  017D  00A9               	movwf	user_isr@CRC16_dat1
  1397  017E  0825               	movf	??_user_isr,w
  1398  017F  00AA               	movwf	user_isr@CRC16_dat1+1
  1399                           
  1400                           ;IAP_FW.C: 257: CRC_16 = 0;
  1401  0180  01A3               	clrf	35
  1402  0181  01A4               	clrf	36
  1403                           
  1404                           ;IAP_FW.C: 258: for(i=0;i<131;i++)
  1405  0182  01AD               	clrf	user_isr@i
  1406  0183                     i1l8364:	
  1407                           
  1408                           ;IAP_FW.C: 259: {
  1409                           ;IAP_FW.C: 260: CRC16_CCITT(iap_databuf[i]);
  1410  0183  082D               	movf	user_isr@i,w
  1411  0184  3E6B               	addlw	107
  1412  0185  0086               	movwf	6
  1413  0186  3023               	movlw	35
  1414  0187  0187               	clrf	7
  1415  0188  3D87               	addwfc	7,f
  1416  0189  0801               	movf	1,w
  1417  018A  3180  20FA  3181   	fcall	i1_CRC16_CCITT
  1418  018D  3083               	movlw	131
  1419  018E  0AAD               	incf	user_isr@i,f
  1420  018F  022D               	subwf	user_isr@i,w
  1421  0190  1C03               	skipc
  1422  0191  2983               	goto	i1l8364
  1423                           
  1424                           ;IAP_FW.C: 261: }
  1425                           ;IAP_FW.C: 262: if(CRC16_dat1 !=CRC_16)
  1426  0192  0824               	movf	36,w
  1427  0193  062A               	xorwf	user_isr@CRC16_dat1+1,w
  1428  0194  1D03               	skipz
  1429  0195  2998               	goto	u85_25
  1430  0196  0823               	movf	35,w
  1431  0197  0629               	xorwf	user_isr@CRC16_dat1,w
  1432  0198                     u85_25:	
  1433  0198  1903               	skipnz
  1434  0199  299C               	goto	i1l8374
  1435  019A  0001               	reset	;# 
  1436                           
  1437                           ;IAP_FW.C: 265: break;
  1438  019B  29FB               	goto	i1l8342
  1439  019C                     i1l8374:	
  1440                           
  1441                           ;IAP_FW.C: 266: }
  1442                           ;IAP_FW.C: 267: iap_addr = iap_databuf[1];
  1443                           
  1444                           ;IAP_FW.C: 268: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1445  019C  22AB  3181         	fcall	PL4	;call to abstracted procedure
  1446                           
  1447                           ;IAP_FW.C: 269: if(iap_addr < 0X400)
  1448  019E  3004               	movlw	4
  1449  019F  022C               	subwf	user_isr@iap_addr+1,w
  1450  01A0  3000               	movlw	0
  1451  01A1  1903               	skipnz
  1452  01A2  022B               	subwf	user_isr@iap_addr,w
  1453  01A3  1803               	skipnc
  1454  01A4  29A7               	goto	i1l8380
  1455  01A5  0001               	reset	;# 
  1456                           
  1457                           ;IAP_FW.C: 272: break;
  1458  01A6  29FB               	goto	i1l8342
  1459  01A7                     i1l8380:	
  1460                           
  1461                           ;IAP_FW.C: 273: }
  1462                           ;IAP_FW.C: 274: if(data_check_erase_or_not(iap_addr,1))
  1463  01A7  22D6  3181         	fcall	PL10	;call to abstracted procedure
  1464  01A9  0AF4               	incf	data_check_erase_or_not@mode,f
  1465  01AA  2220  3181         	fcall	_data_check_erase_or_not
  1466  01AC  3A00               	xorlw	0
  1467  01AD  1903               	skipnz
  1468  01AE  29BB               	goto	i1l8386
  1469  01AF                     i1l8382:	
  1470                           
  1471                           ;IAP_FW.C: 275: {
  1472                           ;IAP_FW.C: 276: if(iap_addr == (0x2000-0x40))
  1473  01AF  30C0               	movlw	192
  1474  01B0  0020               	movlb	0	; select bank0
  1475  01B1  062B               	xorwf	user_isr@iap_addr,w
  1476  01B2  301F               	movlw	31
  1477  01B3  1903               	skipnz
  1478  01B4  062C               	xorwf	user_isr@iap_addr+1,w
  1479  01B5  1D03               	btfss	3,2
  1480  01B6  29FB               	goto	i1l8342
  1481                           
  1482                           ;IAP_FW.C: 277: {
  1483                           ;IAP_FW.C: 278: Eeprom_Write_Crc();
  1484  01B7  3180  20C6  3181   	fcall	_Eeprom_Write_Crc
  1485  01BA  29FB               	goto	i1l8342
  1486  01BB                     i1l8386:	
  1487                           
  1488                           ;IAP_FW.C: 282: else
  1489                           ;IAP_FW.C: 283: {
  1490                           ;IAP_FW.C: 284: if(data_check_erase_or_not(iap_addr,0))
  1491  01BB  0020               	movlb	0	; select bank0
  1492  01BC  22D6  3181         	fcall	PL10	;call to abstracted procedure
  1493  01BE  2220  3181         	fcall	_data_check_erase_or_not
  1494  01C0  3A00               	xorlw	0
  1495  01C1  1903               	skipnz
  1496  01C2  29D1               	goto	i1l8408
  1497                           
  1498                           ;IAP_FW.C: 285: {
  1499                           ;IAP_FW.C: 286: for(i=0;i<128;i=i+2)
  1500  01C3  0020               	movlb	0	; select bank0
  1501  01C4  01AD               	clrf	user_isr@i
  1502  01C5                     i1l8394:	
  1503                           
  1504                           ;IAP_FW.C: 287: {
  1505                           ;IAP_FW.C: 288: EEADRH = iap_addr>>8;
  1506  01C5  082C               	movf	user_isr@iap_addr+1,w
  1507  01C6  0023               	movlb	3	; select bank3
  1508  01C7  0092               	movwf	18	;volatile
  1509                           
  1510                           ;IAP_FW.C: 289: EEADRL = iap_addr>>0;
  1511                           
  1512                           ;IAP_FW.C: 290: EEDATH = iap_databuf[i+3];
  1513                           
  1514                           ;IAP_FW.C: 291: EEDATL = iap_databuf[i+4];
  1515  01C8  2284  3181         	fcall	PL2	;call to abstracted procedure
  1516                           
  1517                           ;IAP_FW.C: 292: iap_mem_prog();
  1518  01CA  2252  3181         	fcall	_iap_mem_prog
  1519                           
  1520                           ;IAP_FW.C: 293: iap_addr++;
  1521  01CC  22CD  3181         	fcall	PL8	;call to abstracted procedure
  1522  01CE  1803               	btfsc	3,0
  1523  01CF  29E8               	goto	i1l8432
  1524  01D0  29C5               	goto	i1l8394
  1525  01D1                     i1l8408:	
  1526                           
  1527                           ;IAP_FW.C: 296: else
  1528                           ;IAP_FW.C: 297: {
  1529                           ;IAP_FW.C: 298: EEADRH = iap_addr>>8;
  1530  01D1  0020               	movlb	0	; select bank0
  1531  01D2  082C               	movf	user_isr@iap_addr+1,w
  1532  01D3  0023               	movlb	3	; select bank3
  1533  01D4  0092               	movwf	18	;volatile
  1534                           
  1535                           ;IAP_FW.C: 299: EEADRL = iap_addr>>0;
  1536  01D5  0020               	movlb	0	; select bank0
  1537  01D6  082B               	movf	user_isr@iap_addr,w
  1538  01D7  0023               	movlb	3	; select bank3
  1539  01D8  0091               	movwf	17	;volatile
  1540                           
  1541                           ;IAP_FW.C: 300: iap_mem_erase();
  1542  01D9  22DC  3181         	fcall	_iap_mem_erase
  1543                           
  1544                           ;IAP_FW.C: 301: for(i=0;i<128;i=i+2)
  1545  01DB  0020               	movlb	0	; select bank0
  1546  01DC  01AD               	clrf	user_isr@i
  1547  01DD                     i1l8418:	
  1548                           
  1549                           ;IAP_FW.C: 302: {
  1550                           ;IAP_FW.C: 303: EEADRH = iap_addr>>8;
  1551  01DD  082C               	movf	user_isr@iap_addr+1,w
  1552  01DE  0023               	movlb	3	; select bank3
  1553  01DF  0092               	movwf	18	;volatile
  1554                           
  1555                           ;IAP_FW.C: 304: EEADRL = iap_addr>>0;
  1556                           
  1557                           ;IAP_FW.C: 305: EEDATH = iap_databuf[i+3];
  1558                           
  1559                           ;IAP_FW.C: 306: EEDATL = iap_databuf[i+4];
  1560  01E0  2284  3181         	fcall	PL2	;call to abstracted procedure
  1561                           
  1562                           ;IAP_FW.C: 307: iap_mem_prog();
  1563  01E2  2252  3181         	fcall	_iap_mem_prog
  1564                           
  1565                           ;IAP_FW.C: 308: iap_addr++;
  1566  01E4  22CD  3181         	fcall	PL8	;call to abstracted procedure
  1567  01E6  1C03               	skipc
  1568  01E7  29DD               	goto	i1l8418
  1569  01E8                     i1l8432:	
  1570                           
  1571                           ;IAP_FW.C: 309: }
  1572                           ;IAP_FW.C: 310: }
  1573                           ;IAP_FW.C: 311: iap_addr = iap_databuf[1];
  1574                           
  1575                           ;IAP_FW.C: 312: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1576  01E8  22AB  3181         	fcall	PL4	;call to abstracted procedure
  1577                           
  1578                           ;IAP_FW.C: 313: if(data_check_erase_or_not(iap_addr,1))
  1579  01EA  00F3               	movwf	data_check_erase_or_not@addr+1
  1580  01EB  082B               	movf	user_isr@iap_addr,w
  1581  01EC  00F2               	movwf	data_check_erase_or_not@addr
  1582  01ED  01F4               	clrf	data_check_erase_or_not@mode
  1583  01EE  0AF4               	incf	data_check_erase_or_not@mode,f
  1584  01EF  2220  3181         	fcall	_data_check_erase_or_not
  1585  01F1  3A00               	xorlw	0
  1586  01F2  1D03               	btfss	3,2
  1587  01F3  29AF               	goto	i1l8382
  1588                           
  1589                           ;IAP_FW.C: 314: {
  1590                           ;IAP_FW.C: 315: if(iap_addr == (0x2000-0x40))
  1591  01F4  0001               	reset	;# 
  1592                           
  1593                           ;IAP_FW.C: 324: break;
  1594  01F5  29FB               	goto	i1l8342
  1595  01F6                     i1l2484:	
  1596                           ;IAP_FW.C: 328: case 0X06:
  1597                           
  1598  01F6  0001               	reset	;# 
  1599                           
  1600                           ;IAP_FW.C: 331: break;
  1601  01F7  29FB               	goto	i1l8342
  1602  01F8                     i1l8440:	
  1603                           
  1604                           ;IAP_FW.C: 334: count=0;
  1605  01F8  0020               	movlb	0	; select bank0
  1606  01F9  01A1               	clrf	33
  1607  01FA  0001               	reset	;# 
  1608  01FB                     i1l8342:	
  1609                           ;IAP_FW.C: 336: break;
  1610                           
  1611                           
  1612                           ;IAP_FW.C: 245: {
  1613                           ;IAP_FW.C: 246: iap_databuf[0]=iap_usart_rec();
  1614  01FB  306B               	movlw	107
  1615  01FC  0086               	movwf	6
  1616  01FD  3023               	movlw	35
  1617  01FE  0087               	movwf	7
  1618  01FF  2259  3181         	fcall	_iap_usart_rec
  1619  0201  3FC0               	movwi [0]fsr1
  1620  0202  0064               	clrwdt	;# 
  1621  0203  306B               	movlw	107
  1622  0204  0086               	movwf	6
  1623  0205  3023               	movlw	35
  1624  0206  0087               	movwf	7
  1625  0207  0801               	movf	1,w
  1626                           
  1627                           ; Switch size 1, requested type "space"
  1628                           ; Number of cases is 2, Range of values is 5 to 6
  1629                           ; switch strategies available:
  1630                           ; Name         Instructions Cycles
  1631                           ; simple_byte            7     4 (average)
  1632                           ; direct_byte           13     9 (fixed)
  1633                           ; jumptable            263     9 (fixed)
  1634                           ;	Chosen strategy is simple_byte
  1635  0208  3A05               	xorlw	5	; case 5
  1636  0209  1903               	skipnz
  1637  020A  2959               	goto	i1l2464
  1638  020B  3A03               	xorlw	3	; case 6
  1639  020C  1903               	skipnz
  1640  020D  29F6               	goto	i1l2484
  1641  020E  29F8               	goto	i1l8440
  1642  020F  29FB               	goto	i1l8342
  1643  0210                     i1l2461:	
  1644                           
  1645                           ;IAP_FW.C: 338: }
  1646                           ;IAP_FW.C: 339: }
  1647                           ;IAP_FW.C: 340: if(iap_err_flag==1)
  1648  0210  1CA0               	btfss	32,1
  1649  0211  0008               	return
  1650                           
  1651                           ;IAP_FW.C: 341: {
  1652                           ;IAP_FW.C: 342: count=0;
  1653  0212  01A1               	clrf	33
  1654                           
  1655                           ;IAP_FW.C: 343: iap_err_flag=0;
  1656  0213  10A0               	bcf	32,1
  1657                           
  1658                           ;IAP_FW.C: 344: RXNEF=1;
  1659  0214  0029               	movlb	9	; select bank9
  1660  0215  1412               	bsf	18,0	;volatile
  1661                           
  1662                           ;IAP_FW.C: 345: URDATAL=iap_recdata;
  1663  0216  0020               	movlb	0	; select bank0
  1664  0217  0822               	movf	34,w
  1665  0218  0029               	movlb	9	; select bank9
  1666  0219  008C               	movwf	12	;volatile
  1667                           
  1668                           ;IAP_FW.C: 346: if(read_flag !=1)
  1669  021A  0020               	movlb	0	; select bank0
  1670  021B  1820               	btfsc	32,0
  1671  021C  0008               	return
  1672  021D  2C04               	goto	1028	;# 
  1673  021E                     i1l2431:	
  1674  021E  2C04               	goto	1028	;# 
  1675  021F  0008               	return
  1676  0220                     __end_of_user_isr:	
  1677  0220                     __ptext12:	
  1678 ;; *************** function _data_check_erase_or_not *****************
  1679 ;; Defined at:
  1680 ;;		line 109 in file "IAP_FW.C"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  addr            2    0[COMMON] unsigned int 
  1683 ;;  mode            1    2[COMMON] unsigned char 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  i               1    9[COMMON] unsigned char 
  1686 ;;  k               1    8[COMMON] unsigned char 
  1687 ;;  j               1    7[COMMON] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      unsigned char 
  1690 ;; Registers used:
  1691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 1F/0
  1694 ;;		On exit  : 1F/3
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1697 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1699 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1700 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1701 ;;Total ram usage:       10 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    1
  1704 ;; This function calls:
  1705 ;;		i1_iap_mem_rd
  1706 ;; This function is called by:
  1707 ;;		_user_isr
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _data_check_erase_or_not
  1713  0220                     _data_check_erase_or_not:	
  1714                           
  1715                           ;IAP_FW.C: 111: unsigned char i ,j,k;
  1716                           ;IAP_FW.C: 112: for(i=0;i<64;i++)
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in _data_check_erase_or_not: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  1720  0220  01FB               	clrf	data_check_erase_or_not@i
  1721  0221                     i1l8202:	
  1722                           
  1723                           ;IAP_FW.C: 113: {
  1724                           ;IAP_FW.C: 114: EEADRH = addr>>8;
  1725  0221  0873               	movf	data_check_erase_or_not@addr+1,w
  1726  0222  0023               	movlb	3	; select bank3
  1727  0223  0092               	movwf	18	;volatile
  1728                           
  1729                           ;IAP_FW.C: 115: EEADRL = addr>>0;
  1730  0224  0872               	movf	data_check_erase_or_not@addr,w
  1731  0225  0091               	movwf	17	;volatile
  1732                           
  1733                           ;IAP_FW.C: 116: j = iap_databuf[i*2+3];
  1734  0226  087B               	movf	data_check_erase_or_not@i,w
  1735  0227  00F5               	movwf	??_data_check_erase_or_not
  1736  0228  306E               	movlw	110
  1737  0229  22BF  3181         	fcall	PL6	;call to abstracted procedure
  1738  022B  00F9               	movwf	data_check_erase_or_not@j
  1739                           
  1740                           ;IAP_FW.C: 117: k = iap_databuf[i*2+4];
  1741  022C  087B               	movf	data_check_erase_or_not@i,w
  1742  022D  00F5               	movwf	??_data_check_erase_or_not
  1743  022E  306F               	movlw	111
  1744  022F  22BF  3181         	fcall	PL6	;call to abstracted procedure
  1745  0231  00FA               	movwf	data_check_erase_or_not@k
  1746                           
  1747                           ;IAP_FW.C: 118: iap_mem_rd();
  1748  0232  227E  3181         	fcall	i1_iap_mem_rd
  1749                           
  1750                           ;IAP_FW.C: 119: if(mode == 0)
  1751  0234  0874               	movf	data_check_erase_or_not@mode,w
  1752  0235  1D03               	btfss	3,2
  1753  0236  2A41               	goto	i1l8220
  1754                           
  1755                           ;IAP_FW.C: 120: {
  1756                           ;IAP_FW.C: 121: if(((EEDATH & j) != j) || ((EEDATL & k) != k))
  1757  0237  0879               	movf	data_check_erase_or_not@j,w
  1758  0238  0514               	andwf	20,w	;volatile
  1759  0239  00F5               	movwf	??_data_check_erase_or_not
  1760  023A  0679               	xorwf	data_check_erase_or_not@j,w
  1761  023B  1D03               	skipz
  1762  023C  3400               	retlw	0
  1763  023D  087A               	movf	data_check_erase_or_not@k,w
  1764  023E  0513               	andwf	19,w	;volatile
  1765  023F  00F5               	movwf	??_data_check_erase_or_not
  1766  0240  2A46               	goto	L2
  1767  0241                     i1l8220:	
  1768                           
  1769                           ;IAP_FW.C: 126: else
  1770                           ;IAP_FW.C: 127: {
  1771                           ;IAP_FW.C: 128: if((EEDATH != j) || (EEDATL != k))
  1772  0241  0814               	movf	20,w	;volatile
  1773  0242  0679               	xorwf	data_check_erase_or_not@j,w
  1774  0243  1D03               	skipz
  1775  0244  3400               	retlw	0
  1776  0245  0813               	movf	19,w	;volatile
  1777  0246                     L2:	
  1778  0246  067A               	xorwf	data_check_erase_or_not@k,w
  1779  0247  1D03               	btfss	3,2
  1780                           
  1781                           ;IAP_FW.C: 122: {
  1782                           ;IAP_FW.C: 123: return 0;
  1783  0248  3400               	retlw	0
  1784                           
  1785                           ;IAP_FW.C: 131: }
  1786                           ;IAP_FW.C: 132: }
  1787                           ;IAP_FW.C: 133: addr++;
  1788  0249  0AF2               	incf	data_check_erase_or_not@addr,f
  1789  024A  1903               	skipnz
  1790  024B  0AF3               	incf	data_check_erase_or_not@addr+1,f
  1791  024C  3040               	movlw	64
  1792  024D  0AFB               	incf	data_check_erase_or_not@i,f
  1793  024E  027B               	subwf	data_check_erase_or_not@i,w
  1794  024F  1803               	btfsc	3,0
  1795                           
  1796                           ;IAP_FW.C: 134: }
  1797                           ;IAP_FW.C: 135: return 1;
  1798  0250  3401               	retlw	1
  1799  0251  2A21               	goto	i1l8202
  1800  0252                     __end_of_data_check_erase_or_not:	
  1801  0252                     __ptext17:	
  1802 ;; *************** function _iap_mem_prog *****************
  1803 ;; Defined at:
  1804 ;;		line 27 in file "MEM_DRV.C"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		status,2, status,0, pclath, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 1F/3
  1815 ;;		On exit  : 1F/3
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    1
  1825 ;; This function calls:
  1826 ;;		_Unlock_Flash
  1827 ;; This function is called by:
  1828 ;;		_Eeprom_Write_Crc
  1829 ;;		_user_isr
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _iap_mem_prog
  1835  0252                     _iap_mem_prog:	
  1836  0252                     i1l8106:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _iap_mem_prog: [status,2+status,0+pclath+cstack]
  1839                           
  1840                           
  1841                           ;MEM_DRV.C: 29: EECON1 &=~(0x1<<4 );
  1842  0252  1215               	bcf	21,4	;volatile
  1843                           
  1844                           ;MEM_DRV.C: 30: Unlock_Flash();
  1845  0253  2274  3181         	fcall	_Unlock_Flash
  1846  0255                     i1l4866:	
  1847                           ;MEM_DRV.C: 31: while(EECON1 & (0x1<<1 ));
  1848                           
  1849  0255  0023               	movlb	3	; select bank3
  1850  0256  1C95               	btfss	21,1	;volatile
  1851  0257  0008               	return
  1852  0258  2A55               	goto	i1l4866
  1853  0259                     __end_of_iap_mem_prog:	
  1854  0259                     __ptext9:	
  1855 ;; *************** function _iap_usart_rec *****************
  1856 ;; Defined at:
  1857 ;;		line 50 in file "USART_DRV.C"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  a               2    1[COMMON] unsigned int 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      unsigned char 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0, pclath, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/3
  1868 ;;		On exit  : 1F/9
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1872 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;Total ram usage:        2 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    1
  1878 ;; This function calls:
  1879 ;;		_DelayUs
  1880 ;; This function is called by:
  1881 ;;		_user_isr
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           
  1886                           ;psect for function _iap_usart_rec
  1887  0259                     _iap_usart_rec:	
  1888                           
  1889                           ;USART_DRV.C: 52: unsigned int a;
  1890                           ;USART_DRV.C: 53: for(a=0;a<47200;a++)
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _iap_usart_rec: [wreg+status,2+status,0+pclath+cstack]
  1894  0259  01F3               	clrf	iap_usart_rec@a
  1895  025A  01F4               	clrf	iap_usart_rec@a+1
  1896  025B                     i1l8242:	
  1897                           
  1898                           ;USART_DRV.C: 54: {
  1899                           ;USART_DRV.C: 55: DelayUs();
  1900  025B  22E3  3181         	fcall	_DelayUs
  1901                           
  1902                           ;USART_DRV.C: 56: if(((0x1 << 0 ) & URLSR))
  1903  025D  0029               	movlb	9	; select bank9
  1904  025E  1C12               	btfss	18,0	;volatile
  1905  025F  2A69               	goto	i1l8260
  1906                           
  1907                           ;USART_DRV.C: 57: {
  1908                           ;USART_DRV.C: 58: if((URLSR & (0x1<<2 )) || (URLSR & (0x1<<3 )))
  1909  0260  1912               	btfsc	18,2	;volatile
  1910  0261  2A64               	goto	i1l8250
  1911  0262  1D92               	btfss	18,3	;volatile
  1912  0263  2A67               	goto	i1l8256
  1913  0264                     i1l8250:	
  1914                           
  1915                           ;USART_DRV.C: 59: {
  1916                           ;USART_DRV.C: 60: URLSR = ~((0x1<<2 )|(0x1<<3 ));
  1917  0264  30F3               	movlw	243
  1918  0265  0092               	movwf	18	;volatile
  1919                           
  1920                           ;USART_DRV.C: 61: return 0xff;
  1921  0266  34FF               	retlw	255
  1922  0267                     i1l8256:	
  1923                           
  1924                           ;USART_DRV.C: 63: else
  1925                           ;USART_DRV.C: 64: {
  1926                           ;USART_DRV.C: 65: return URDATAL;
  1927  0267  080C               	movf	12,w	;volatile
  1928  0268  0008               	return
  1929  0269                     i1l8260:	
  1930  0269  0AF3               	incf	iap_usart_rec@a,f
  1931  026A  1903               	skipnz
  1932  026B  0AF4               	incf	iap_usart_rec@a+1,f
  1933  026C  30B8               	movlw	184
  1934  026D  0274               	subwf	iap_usart_rec@a+1,w
  1935  026E  3060               	movlw	96
  1936  026F  1903               	skipnz
  1937  0270  0273               	subwf	iap_usart_rec@a,w
  1938  0271  1803               	btfsc	3,0
  1939                           
  1940                           ;USART_DRV.C: 66: }
  1941                           ;USART_DRV.C: 67: }
  1942                           ;USART_DRV.C: 68: }
  1943                           ;USART_DRV.C: 69: return 0xff;
  1944  0272  34FF               	retlw	255
  1945  0273  2A5B               	goto	i1l8242
  1946  0274                     __end_of_iap_usart_rec:	
  1947  0274                     __ptext18:	
  1948 ;; *************** function _Unlock_Flash *****************
  1949 ;; Defined at:
  1950 ;;		line 4 in file "MEM_DRV.C"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		None
  1959 ;; Tracked objects:
  1960 ;;		On entry : 1F/3
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_iap_mem_erase
  1974 ;;		_iap_mem_prog
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _Unlock_Flash
  1980  0274                     _Unlock_Flash:	
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _Unlock_Flash: []
  1984  0274  3003               	movlw	3	;# 
  1985  0275  0088               	movwf	8	;# 
  1986  0276  3055               	movlw	85	;# 
  1987  0277  0096               	movwf	22	;# 
  1988  0278  30AA               	movlw	170	;# 
  1989  0279  0096               	movwf	22	;# 
  1990  027A  1495               	bsf	21,1	;# 
  1991  027B  0000               	nop	;# 
  1992  027C  0000               	nop	;# 
  1993  027D  0008               	return
  1994  027E                     __end_of_Unlock_Flash:	
  1995  007E                     btemp	set	126	;btemp
  1996  007E                     int$flags	set	126
  1997  007E                     wtemp0	set	126
  1998  027E                     __ptext15:	
  1999 ;; *************** function i1_iap_mem_rd *****************
  2000 ;; Defined at:
  2001 ;;		line 34 in file "MEM_DRV.C"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		None
  2010 ;; Tracked objects:
  2011 ;;		On entry : 1F/3
  2012 ;;		On exit  : 1F/3
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_data_check_erase_or_not
  2025 ;;		i1_All_Page_Read_CRC
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function i1_iap_mem_rd
  2031  027E                     i1_iap_mem_rd:	
  2032                           
  2033                           ;MEM_DRV.C: 36: EECON1 |=(0x1<<0 );
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in i1_iap_mem_rd: []
  2037  027E  1415               	bsf	21,0	;volatile
  2038  027F  0000               	nop	;# 
  2039  0280                     i1l4872:	
  2040                           ;MEM_DRV.C: 38: while(EECON1 & (0x1<<0 ));
  2041                           
  2042  0280  0023               	movlb	3	; select bank3
  2043  0281  1C15               	btfss	21,0	;volatile
  2044  0282  0008               	return
  2045  0283  2A80               	goto	i1l4872
  2046  0284                     __end_ofi1_iap_mem_rd:	
  2047  0284                     PL2:	
  2048  0284  0020               	movlb	0	; select bank0
  2049  0285  082B               	movf	user_isr@iap_addr,w
  2050  0286  0023               	movlb	3	; select bank3
  2051  0287  0091               	movwf	17	;volatile
  2052  0288  0020               	movlb	0	; select bank0
  2053  0289  082D               	movf	user_isr@i,w
  2054  028A  00A5               	movwf	??_user_isr
  2055  028B  306E               	movlw	110
  2056  028C  01A6               	clrf	??_user_isr+1
  2057  028D  00A7               	movwf	??_user_isr+2
  2058  028E  3023               	movlw	35
  2059  028F  00A8               	movwf	??_user_isr+3
  2060  0290  0825               	movf	??_user_isr,w
  2061  0291  0727               	addwf	??_user_isr+2,w
  2062  0292  0086               	movwf	6
  2063  0293  0826               	movf	??_user_isr+1,w
  2064  0294  3D28               	addwfc	??_user_isr+3,w
  2065  0295  0087               	movwf	7
  2066  0296  0801               	movf	1,w
  2067  0297  0023               	movlb	3	; select bank3
  2068  0298  0094               	movwf	20	;volatile
  2069  0299  0020               	movlb	0	; select bank0
  2070  029A  082D               	movf	user_isr@i,w
  2071  029B  00A5               	movwf	??_user_isr
  2072  029C  306F               	movlw	111
  2073  029D  01A6               	clrf	??_user_isr+1
  2074  029E  00A7               	movwf	??_user_isr+2
  2075  029F  3023               	movlw	35
  2076  02A0  00A8               	movwf	??_user_isr+3
  2077  02A1  0825               	movf	??_user_isr,w
  2078  02A2  0727               	addwf	??_user_isr+2,w
  2079  02A3  0086               	movwf	6
  2080  02A4  0826               	movf	??_user_isr+1,w
  2081  02A5  3D28               	addwfc	??_user_isr+3,w
  2082  02A6  0087               	movwf	7
  2083  02A7  0801               	movf	1,w
  2084  02A8  0023               	movlb	3	; select bank3
  2085  02A9  0093               	movwf	19	;volatile
  2086  02AA  0008               	return
  2087  02AB                     __end_ofPL2:	
  2088  02AB                     PL4:	
  2089  02AB  306B               	movlw	107
  2090  02AC  0086               	movwf	6
  2091  02AD  3023               	movlw	35
  2092  02AE  0087               	movwf	7
  2093  02AF  3141               	addfsr 1,1
  2094  02B0  0801               	movf	1,w
  2095  02B1  00AB               	movwf	user_isr@iap_addr
  2096  02B2  306B               	movlw	107
  2097  02B3  01AC               	clrf	user_isr@iap_addr+1
  2098  02B4  0086               	movwf	6
  2099  02B5  3023               	movlw	35
  2100  02B6  0087               	movwf	7
  2101  02B7  3142               	addfsr 1,2
  2102  02B8  082B               	movf	user_isr@iap_addr,w
  2103  02B9  00A5               	movwf	??_user_isr
  2104  02BA  0801               	movf	1,w
  2105  02BB  00AB               	movwf	user_isr@iap_addr
  2106  02BC  0825               	movf	??_user_isr,w
  2107  02BD  00AC               	movwf	user_isr@iap_addr+1
  2108  02BE  0008               	return
  2109  02BF                     __end_ofPL4:	
  2110  02BF                     PL6:	
  2111  02BF  01F6               	clrf	??_data_check_erase_or_not+1
  2112  02C0  35F5               	lslf	??_data_check_erase_or_not,f
  2113  02C1  0DF6               	rlf	??_data_check_erase_or_not+1,f
  2114  02C2  00F7               	movwf	??_data_check_erase_or_not+2
  2115  02C3  3023               	movlw	35
  2116  02C4  00F8               	movwf	??_data_check_erase_or_not+3
  2117  02C5  0875               	movf	??_data_check_erase_or_not,w
  2118  02C6  0777               	addwf	??_data_check_erase_or_not+2,w
  2119  02C7  0086               	movwf	6
  2120  02C8  0876               	movf	??_data_check_erase_or_not+1,w
  2121  02C9  3D78               	addwfc	??_data_check_erase_or_not+3,w
  2122  02CA  0087               	movwf	7
  2123  02CB  0801               	movf	1,w
  2124  02CC  0008               	return
  2125  02CD                     __end_ofPL6:	
  2126  02CD                     PL8:	
  2127  02CD  0020               	movlb	0	; select bank0
  2128  02CE  0AAB               	incf	user_isr@iap_addr,f
  2129  02CF  1903               	skipnz
  2130  02D0  0AAC               	incf	user_isr@iap_addr+1,f
  2131  02D1  3080               	movlw	128
  2132  02D2  0AAD               	incf	user_isr@i,f
  2133  02D3  0AAD               	incf	user_isr@i,f
  2134  02D4  022D               	subwf	user_isr@i,w
  2135  02D5  0008               	return
  2136  02D6                     __end_ofPL8:	
  2137  02D6                     PL10:	
  2138  02D6  082C               	movf	user_isr@iap_addr+1,w
  2139  02D7  00F3               	movwf	data_check_erase_or_not@addr+1
  2140  02D8  082B               	movf	user_isr@iap_addr,w
  2141  02D9  00F2               	movwf	data_check_erase_or_not@addr
  2142  02DA  01F4               	clrf	data_check_erase_or_not@mode
  2143  02DB  0008               	return
  2144  02DC                     __end_ofPL10:	
  2145  02DC                     __ptext11:	
  2146 ;; *************** function _iap_mem_erase *****************
  2147 ;; Defined at:
  2148 ;;		line 19 in file "MEM_DRV.C"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		status,2, status,0, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 1F/3
  2159 ;;		On exit  : 1F/3
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;Total ram usage:        0 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		_Unlock_Flash
  2171 ;; This function is called by:
  2172 ;;		_user_isr
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _iap_mem_erase
  2178  02DC                     _iap_mem_erase:	
  2179                           
  2180                           ;MEM_DRV.C: 21: EECON1 |=(0x1<<4 );
  2181                           
  2182                           ;incstack = 0
  2183                           ; Regs used in _iap_mem_erase: [status,2+status,0+pclath+cstack]
  2184  02DC  1615               	bsf	21,4	;volatile
  2185                           
  2186                           ;MEM_DRV.C: 22: Unlock_Flash();
  2187  02DD  2274  3181         	fcall	_Unlock_Flash
  2188  02DF                     i1l4860:	
  2189                           ;MEM_DRV.C: 23: while(EECON1 & (0x1<<1 ));
  2190                           
  2191  02DF  0023               	movlb	3	; select bank3
  2192  02E0  1C95               	btfss	21,1	;volatile
  2193  02E1  0008               	return
  2194  02E2  2ADF               	goto	i1l4860
  2195  02E3                     __end_of_iap_mem_erase:	
  2196  02E3                     __ptext10:	
  2197 ;; *************** function _DelayUs *****************
  2198 ;; Defined at:
  2199 ;;		line 36 in file "USART_DRV.C"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  a               1    0[COMMON] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/3
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;Total ram usage:        1 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_iap_usart_rec
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _DelayUs
  2228  02E3                     _DelayUs:	
  2229                           
  2230                           ;USART_DRV.C: 38: unsigned char a;
  2231                           ;USART_DRV.C: 39: for(a=0;a<10;a++)
  2232                           
  2233                           ;incstack = 0
  2234                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
  2235  02E3  01F2               	clrf	DelayUs@a
  2236  02E4                     i1l7238:	
  2237                           
  2238                           ;USART_DRV.C: 40: {
  2239                           ;USART_DRV.C: 41: __nop();
  2240  02E4  0000               	nop
  2241  02E5  300A               	movlw	10
  2242  02E6  0AF2               	incf	DelayUs@a,f
  2243  02E7  0272               	subwf	DelayUs@a,w
  2244  02E8  1803               	btfsc	3,0
  2245  02E9  0008               	return
  2246  02EA  2AE4               	goto	i1l7238
  2247  02EB                     __end_of_DelayUs:	
  2248                           
  2249                           	psect	swtext1
  2250  0300                     __pswtext1:	
  2251  0300                     i1S8512:	
  2252  0300  3181  294F         	ljmp	i1l2437
  2253  0302  3181  294F         	ljmp	i1l2437
  2254  0304  3181  294F         	ljmp	i1l2437
  2255  0306  3181  294F         	ljmp	i1l2437
  2256  0308  3181  294F         	ljmp	i1l2437
  2257  030A  3181  294F         	ljmp	i1l2437
  2258  030C  3181  294F         	ljmp	i1l2437
  2259  030E  3181  294F         	ljmp	i1l2437
  2260  0310  3181  292A         	ljmp	i1l8298
  2261  0312  3181  2930         	ljmp	i1l8302
  2262  0314  3181  2932         	ljmp	i1l8306
  2263  0316  3181  2934         	ljmp	i1l8310
  2264  0318  3181  2936         	ljmp	i1l8314
  2265  031A  3181  2938         	ljmp	i1l8318
  2266  031C  3181  293A         	ljmp	i1l8322
  2267  031E  3181  293C         	ljmp	i1l8326


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           12     10      10
    BANK0            75     19      19
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           75      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _user_isr->_data_check_erase_or_not
    _iap_usart_rec->_DelayUs
    _Eeprom_Write_Crc->i1_All_Page_Read_CRC
    i1_All_Page_Read_CRC->i1_CRC16_CCITT

Critical Paths under _main in BANK0

    _main->_Power_On_App_Check
    _Power_On_App_Check->_All_Page_Read_CRC
    _All_Page_Read_CRC->_CRC16_CCITT

Critical Paths under _ISR in BANK0

    _ISR->_user_isr

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     230
                 _Power_On_App_Check
                     _iap_usart_init
 ---------------------------------------------------------------------------------
 (1) _iap_usart_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_On_App_Check                                   2     2      0     230
                                             17 BANK0      2     2      0
                  _All_Page_Read_CRC
                         _EEPROMread
 ---------------------------------------------------------------------------------
 (2) _EEPROMread                                           2     2      0      45
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _All_Page_Read_CRC                                    2     2      0     160
                                             15 BANK0      2     2      0
                        _CRC16_CCITT
                         _iap_mem_rd
 ---------------------------------------------------------------------------------
 (3) _iap_mem_rd                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC16_CCITT                                          6     6      0      68
                                              9 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0    1547
                           _user_isr
 ---------------------------------------------------------------------------------
 (5) _user_isr                                             9     9      0    1547
                                              0 BANK0      9     9      0
                   _Eeprom_Write_Crc
            _data_check_erase_or_not
                      _iap_mem_erase
                       _iap_mem_prog
                      _iap_usart_rec
                      i1_CRC16_CCITT
 ---------------------------------------------------------------------------------
 (6) _iap_usart_rec                                        2     2      0      92
                                              1 COMMON     2     2      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (7) _DelayUs                                              1     1      0      46
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_erase                                        0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (6) _data_check_erase_or_not                             10     7      3     550
                                              0 COMMON    10     7      3
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write_Crc                                     0     0      0     158
                       _iap_mem_prog
                i1_All_Page_Read_CRC
 ---------------------------------------------------------------------------------
 (7) i1_All_Page_Read_CRC                                  2     2      0     158
                                              6 COMMON     2     2      0
                      i1_CRC16_CCITT
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (7) i1_iap_mem_rd                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_CRC16_CCITT                                        6     6      0      68
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_prog                                         0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (7) _Unlock_Flash                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Power_On_App_Check
     _All_Page_Read_CRC
       _CRC16_CCITT
       _iap_mem_rd
     _EEPROMread
   _iap_usart_init

 _ISR (ROOT)
   _user_isr
     _Eeprom_Write_Crc
       _iap_mem_prog
         _Unlock_Flash
       i1_All_Page_Read_CRC
         i1_CRC16_CCITT
         i1_iap_mem_rd
     _data_check_erase_or_not
       i1_iap_mem_rd
     _iap_mem_erase
       _Unlock_Flash
     _iap_mem_prog
       _Unlock_Flash
     _iap_usart_rec
       _DelayUs
     i1_CRC16_CCITT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            C      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               C      A       A       2       83.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            4B      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               4B     13      13       5       25.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              4B      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Nov 16 11:50:07 2021

                               pc 0002                                PL2 0284                                PL4 02AB  
                              PL6 02BF                                PL8 02CD          __end_of_Eeprom_Write_Crc 00DB  
                              _RD 0CA8            __size_ofi1_CRC16_CCITT 001F         __end_of_All_Page_Read_CRC 00A1  
                             PL10 02D6                               PL12 0119                               _FEF 2493  
                             _GIE 005F                _Power_On_App_Check 0049                               _ISR 0004  
                             u705 0061                    ??_iap_mem_prog 0072               ?_Power_On_App_Check 0072  
                            ?_ISR 0072                              l2408 0065                              l2393 00A5  
                            l2396 00BA                              l2497 0036                              l8100 00B8  
                 ??_iap_mem_erase 0072                              l4872 00C2                              _AFP2 011D  
                            l8148 0086                              _CFGS 0CAE   __end_of_data_check_erase_or_not 0252  
                            _PEIE 005E                    _ad3nop_absaddr 0003              __size_of_CRC16_CCITT 001F  
                            _flag 0020                              _main 002F                              fsr0h 0005  
                            fsr1h 0007                              indf0 0000                              fsr0l 0004  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            start 001F                   __end_of_DelayUs 02EB               __size_of_EEPROMread 0019  
            ??_Power_On_App_Check 0036                             ??_ISR 007C             __size_ofi1_iap_mem_rd 0006  
                           ?_main 0072                             _EEPGD 0CAF                             _DRDEN 0CC0  
                           _BSREG 0008                             _CRC_H 0024                             _CRC_L 0023  
    __size_ofi1_All_Page_Read_CRC 001F                             _PCKEN 009A                             _URDLL 0494  
                           _RXNEF 2490                             _URLCR 048F                             _URMCR 0491  
                           u85_25 0198                             _URLSR 0492                             _W_TMP 0070  
               i1CRC16_CCITT@data 0076                             _count 0021                   ??_iap_usart_rec 0073  
                   i1_CRC16_CCITT 00FA                             status 0003                             wtemp0 007E  
                    i1_iap_mem_rd 027E                   __initialization 0021                      __end_of_main 0038  
      __size_of_All_Page_Read_CRC 0021                            ??_main 0038                            _EEADRH 0192  
                          i1S8512 0300                            _EEADRL 0191                            _EEDATH 0194  
                          _EEDATL 0193                            _EECON1 0195                    ?i1_CRC16_CCITT 0072  
                          _CRC_16 0023                            i1l2431 021E                            i1l2461 0210  
                          i1l2437 014F                            i1l2464 0159                            i1l2393 00FE  
                          i1l2396 0113                            i1l2484 01F6                            i1l8106 0252  
                          i1l8130 00E0                            i1l8202 0221                            i1l8220 0241  
                          i1l4860 02DF                            i1l8300 012E                            i1l7238 02E4  
                          i1l8310 0134                            i1l8302 0130                            i1l4872 0280  
                          i1l4866 0255                            i1l8250 0264                            i1l8242 025B  
                          i1l8322 013A                            i1l8314 0136                            i1l8306 0132  
                          i1l8084 0111                            i1l8260 0269                            i1l8332 0142  
                          i1l8342 01FB                            i1l8326 013C                            i1l8318 0138  
                          i1l8256 0267                            i1l8440 01F8                            i1l8432 01E8  
                          i1l8408 01D1                            i1l8418 01DD                            i1l8380 01A7  
                          i1l8364 0183                            i1l8348 015C                            i1l8382 01AF  
                          i1l8374 019C                            i1l8394 01C5                            i1l8386 01BB  
                          i1l8298 012A                         ??_DelayUs 0072                            _OSCCON 0099  
                          _URRXNE 2470              __end_of_iap_mem_prog 0259                            _ad3nop 0003  
                  iap_usart_rec@a 0073                  ??_iap_usart_init 002E                user_isr@CRC16_dat1 0029  
                    ??_EEPROMread 002E                  __end_of_user_isr 0220           __end_of__initialization 002C  
                  __pcstackCOMMON 0072                __end_of_EEPROMread 0080                 ?_Eeprom_Write_Crc 0072  
                      __end_ofPL2 02AB                        __end_ofPL4 02BF                        __end_ofPL6 02CD  
                      __end_ofPL8 02D6                ??_Eeprom_Write_Crc 007A                   ??i1_CRC16_CCITT 0072  
             i1_All_Page_Read_CRC 00DB                        __pmaintext 002F          ?_data_check_erase_or_not 0072  
                      __pintentry 0004              ?i1_All_Page_Read_CRC 0072                        _iap_mem_rd 00C0  
                         _BSR_TMP 0071                           _URDATAL 048C                     ??_CRC16_CCITT 002E  
           __size_of_iap_mem_prog 0007                           _DelayUs 02E3             __end_of_iap_mem_erase 02E3  
     __size_of_Power_On_App_Check 001E                  EEPROMread@EEAddr 002E                         ?_user_isr 0072  
                         __ptext1 0038                           __ptext2 0049                           __ptext3 0067  
                         __ptext4 0080                           __ptext5 00C0                           __ptext6 00A1  
                         __ptext8 011F                           __ptext9 0259             ??i1_All_Page_Read_CRC 0078  
        data_check_erase_or_not@i 007B          data_check_erase_or_not@j 0079          data_check_erase_or_not@k 007A  
                    __size_of_ISR 001B                      _iap_err_flag 0101                      _iap_mem_prog 0252  
                    CRC16_CCITT@i 0033                           clrloop0 0321              end_of_initialization 002C  
                user_isr@iap_addr 002B             __end_of_iap_usart_rec 0274               __end_of_CRC16_CCITT 00C0  
                      ??_user_isr 0025                       ?_iap_mem_rd 0072                     ?_Unlock_Flash 0072  
                 CRC16_CCITT@data 0032                    i1CRC16_CCITT@i 0077                    __end_of_ad3nop 0004  
                     __end_ofPL10 02DC                       __end_ofPL12 011F               start_initialization 0021  
                  __p_ad3nop_text 0003                       __end_of_ISR 001F                    ??_Unlock_Flash 0072  
                     _CRC16_CCITT 00A1         __size_of_Eeprom_Write_Crc 0015               __size_of_iap_mem_rd 0006  
                     __pbssBIGRAM 236B      Power_On_App_Check@CRC_Eeprom 0036  __size_of_data_check_erase_or_not 0032  
                       ___latbits 0002                     __pcstackBANK0 0025           __size_of_iap_usart_init 0011  
           __end_ofi1_CRC16_CCITT 0119                          ?_DelayUs 0072                     ?i1_iap_mem_rd 0072  
                       __pswtext1 0300                 __size_of_user_isr 0101                       _iap_databuf 236B  
                       _read_flag 0100                       _iap_ok_flag 0102                       _iap_recdata 0022  
                  ??i1_iap_mem_rd 0072                          DelayUs@a 0072                         clear_ram0 0320  
      __end_of_Power_On_App_Check 0067       __end_ofi1_All_Page_Read_CRC 00FA              __end_of_Unlock_Flash 027E  
                    ??_iap_mem_rd 002E            __size_of_iap_mem_erase 0007                  _Eeprom_Write_Crc 00C6  
                __size_of_DelayUs 0008                __end_of_iap_mem_rd 00C6            __size_of_iap_usart_rec 001B  
         _data_check_erase_or_not 0220                        _EEPROMread 0067                    _iap_usart_init 0038  
                        __ptext10 02E3                          __ptext11 02DC                          __ptext12 0220  
                        __ptext13 00C6                          __ptext14 00DB                          __ptext15 027E  
                        __ptext16 00FA                          __ptext17 0252                          __ptext18 0274  
                    ?_CRC16_CCITT 0072                     __size_of_main 0009                     _iap_mem_erase 02DC  
          EEPROMread@ReEEPROMread 002F                          int$flags 007E         All_Page_Read_CRC@iap_addr 0034  
                        _user_isr 011F              __end_ofi1_iap_mem_rd 0284            __end_of_iap_usart_init 0049  
     data_check_erase_or_not@addr 0072       data_check_erase_or_not@mode 0074                          intlevel1 0000  
                   _iap_usart_rec 0259                    ?_iap_mem_erase 0072                         user_isr@i 002D  
           __size_of_Unlock_Flash 000A         ??_data_check_erase_or_not 0075                 _All_Page_Read_CRC 0080  
                 ?_iap_usart_init 0072                     ?_iap_mem_prog 0072                       ?_EEPROMread 0072  
              ?_All_Page_Read_CRC 0072                      _Unlock_Flash 0274       i1All_Page_Read_CRC@iap_addr 0078  
                  ?_iap_usart_rec 0072               ??_All_Page_Read_CRC 0034  
