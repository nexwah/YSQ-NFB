

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Nov 16 11:42:00 2021

GNU C Code Generator                                                 
     1                           	processor	FT64F0AX
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	intentry,global,class=CODE,delta=2
     8                           	psect	text5,local,class=CODE,merge=1,delta=2
     9                           	psect	pa_nodes0,global,class=CODE,delta=2
    10                           	dabs	1,0x24,1,_CRC_H
    11                           	dabs	1,0x23,1,_CRC_L
    12                           	dabs	1,0x102,0,_iap_ok_flag
    13                           	dabs	1,0x20,1
    14                           	dabs	1,0x101,0,_iap_err_flag
    15                           	dabs	1,0x20,1
    16                           	dabs	1,0x100,0,_read_flag
    17                           	dabs	1,0x20,1
    18                           	dabs	1,0x71,1,_BSR_TMP
    19                           	dabs	1,0x70,1,_W_TMP
    20                           	dabs	1,0x23,2,_CRC_16
    21                           	dabs	1,0x22,1,_iap_recdata
    22                           	dabs	1,0x21,1,_count
    23                           	dabs	1,0x20,1,_flag
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 
    28                           ; 
    29                           ; SFR Addresses
    30  0000                     
    31                           	psect	text0
    32  0000                     __ptext0:		;_read_flag
    33  000E                     _PORTC	set	14
    34  000D                     _PORTB	set	13
    35  000C                     _PORTA	set	12
    36  006D                     _RB5	set	109
    37  0099                     _OSCCON	set	153
    38  008E                     _TRISC	set	142
    39  008D                     _TRISB	set	141
    40  008C                     _TRISA	set	140
    41  011C                     _PSRC2	set	284
    42  011B                     _PSRC1	set	283
    43  011A                     _PSRC0	set	282
    44  019C                     _PSINK2	set	412
    45  019B                     _PSINK1	set	411
    46  019A                     _PSINK0	set	410
    47  0197                     _ANSELA	set	407
    48  018E                     _WPUC	set	398
    49  018D                     _WPUB	set	397
    50  018C                     _WPUA	set	396
    51  020E                     _WPDC	set	526
    52  020D                     _WPDB	set	525
    53  020C                     _WPDA	set	524
    54                           
    55                           	psect	cinit
    56  0421                     start_initialization:	
    57                           ; #config settings
    58                           
    59  0421                     __initialization:	
    60  0421                     end_of_initialization:	
    61                           ;End of C runtime variable initialization code
    62                           
    63  0421                     __end_of__initialization:	
    64  0421  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    65  0422  0020               	movlb	0
    66  0423  2C24               	ljmp	_main	;jump to C main() function
    67  0424                     __pmaintext:	
    68                           ; 1 bytes @ 0x5
    69 ;;
    70 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    71 ;;
    72 ;; *************** function _main *****************
    73 ;; Defined at:
    74 ;;		line 161 in file "TEST_FT64F0AX_IO.C"
    75 ;; Parameters:    Size  Location     Type
    76 ;;		None
    77 ;; Auto vars:     Size  Location     Type
    78 ;;		None
    79 ;; Return value:  Size  Location     Type
    80 ;;                  1    wreg      void 
    81 ;; Registers used:
    82 ;;		wreg, status,2, status,0, pclath, cstack
    83 ;; Tracked objects:
    84 ;;		On entry : B1F/0
    85 ;;		On exit  : 0/0
    86 ;;		Unchanged: 0/0
    87 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
    88 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    89 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    90 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    91 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    92 ;;Total ram usage:        0 bytes
    93 ;; Hardware stack levels required when called:    4
    94 ;; This function calls:
    95 ;;		_DelayMs
    96 ;;		_POWER_INITIAL
    97 ;; This function is called by:
    98 ;;		Startup code after reset
    99 ;; This function uses a non-reentrant model
   100 ;;
   101                           
   102                           
   103                           ;psect for function _main
   104  0424                     _main:	
   105                           
   106                           ;TEST_FT64F0AX_IO.C: 163: POWER_INITIAL();
   107                           
   108                           ;incstack = 0
   109                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   110  0424  2457  3184         	fcall	_POWER_INITIAL
   111  0426                     l2599:	
   112                           
   113                           ;TEST_FT64F0AX_IO.C: 165: {
   114                           ;TEST_FT64F0AX_IO.C: 166: RB5=1;
   115  0426  0020               	movlb	0	; select bank0
   116  0427  168D               	bsf	13,5	;volatile
   117                           
   118                           ;TEST_FT64F0AX_IO.C: 167: DelayMs(10);
   119  0428  300A               	movlw	10
   120  0429  243D  3184         	fcall	_DelayMs
   121                           
   122                           ;TEST_FT64F0AX_IO.C: 168: DelayMs(10);
   123  042B  300A               	movlw	10
   124  042C  243D  3184         	fcall	_DelayMs
   125                           
   126                           ;TEST_FT64F0AX_IO.C: 169: DelayMs(10);
   127  042E  300A               	movlw	10
   128  042F  243D  3184         	fcall	_DelayMs
   129                           
   130                           ;TEST_FT64F0AX_IO.C: 170: DelayMs(10);
   131  0431  300A               	movlw	10
   132  0432  243D  3184         	fcall	_DelayMs
   133                           
   134                           ;TEST_FT64F0AX_IO.C: 173: RB5=0;
   135  0434  0020               	movlb	0	; select bank0
   136  0435  128D               	bcf	13,5	;volatile
   137                           
   138                           ;TEST_FT64F0AX_IO.C: 174: DelayMs(10);
   139  0436  300A               	movlw	10
   140  0437  243D  3184         	fcall	_DelayMs
   141                           
   142                           ;TEST_FT64F0AX_IO.C: 175: DelayMs(10);
   143  0439  300A               	movlw	10
   144  043A  243D  3184         	fcall	_DelayMs
   145  043C  2C26               	goto	l2599
   146  043D                     __end_of_main:	
   147  043D                     __ptext2:	
   148 ;; *************** function _DelayMs *****************
   149 ;; Defined at:
   150 ;;		line 127 in file "TEST_FT64F0AX_IO.C"
   151 ;; Parameters:    Size  Location     Type
   152 ;;  Time            1    wreg     unsigned char 
   153 ;; Auto vars:     Size  Location     Type
   154 ;;  Time            1    2[COMMON] unsigned char 
   155 ;;  b               1    4[COMMON] unsigned char 
   156 ;;  a               1    3[COMMON] unsigned char 
   157 ;; Return value:  Size  Location     Type
   158 ;;                  1    wreg      void 
   159 ;; Registers used:
   160 ;;		wreg, status,2, status,0, pclath, cstack
   161 ;; Tracked objects:
   162 ;;		On entry : 0/0
   163 ;;		On exit  : 0/0
   164 ;;		Unchanged: 0/0
   165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   167 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   170 ;;Total ram usage:        3 bytes
   171 ;; Hardware stack levels used:    1
   172 ;; Hardware stack levels required when called:    3
   173 ;; This function calls:
   174 ;;		_DelayUs
   175 ;; This function is called by:
   176 ;;		_main
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           
   181                           ;psect for function _DelayMs
   182  043D                     _DelayMs:	
   183                           
   184                           ;incstack = 0
   185                           ; Regs used in _DelayMs: [wreg+status,2+status,0+pclath+cstack]
   186                           ;DelayMs@Time stored from wreg
   187  043D  00F4               	movwf	DelayMs@Time
   188                           
   189                           ;TEST_FT64F0AX_IO.C: 129: unsigned char a,b;
   190                           ;TEST_FT64F0AX_IO.C: 130: for(a=0;a<Time;a++)
   191  043E  01F5               	clrf	DelayMs@a
   192  043F                     l2591:	
   193  043F  0874               	movf	DelayMs@Time,w
   194  0440  0275               	subwf	DelayMs@a,w
   195  0441  1803               	btfsc	3,0
   196  0442  0008               	return
   197                           
   198                           ;TEST_FT64F0AX_IO.C: 131: {
   199                           ;TEST_FT64F0AX_IO.C: 132: for(b=0;b<5;b++)
   200  0443  01F6               	clrf	DelayMs@b
   201  0444                     l2583:	
   202                           
   203                           ;TEST_FT64F0AX_IO.C: 133: {
   204                           ;TEST_FT64F0AX_IO.C: 134: DelayUs(197);
   205  0444  30C5               	movlw	197
   206  0445  244E  3184         	fcall	_DelayUs
   207  0447  3005               	movlw	5
   208  0448  0AF6               	incf	DelayMs@b,f
   209  0449  0276               	subwf	DelayMs@b,w
   210  044A  1C03               	skipc
   211  044B  2C44               	goto	l2583
   212  044C  0AF5               	incf	DelayMs@a,f
   213  044D  2C3F               	goto	l2591
   214  044E                     __end_of_DelayMs:	
   215  044E                     __ptext3:	
   216 ;; *************** function _DelayUs *****************
   217 ;; Defined at:
   218 ;;		line 113 in file "TEST_FT64F0AX_IO.C"
   219 ;; Parameters:    Size  Location     Type
   220 ;;  Time            1    wreg     unsigned char 
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  Time            1    0[COMMON] unsigned char 
   223 ;;  a               1    1[COMMON] unsigned char 
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   237 ;;Total ram usage:        2 bytes
   238 ;; Hardware stack levels used:    1
   239 ;; Hardware stack levels required when called:    2
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		_DelayMs
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           
   248                           ;psect for function _DelayUs
   249  044E                     _DelayUs:	
   250                           
   251                           ;incstack = 0
   252                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
   253                           ;DelayUs@Time stored from wreg
   254  044E  00F2               	movwf	DelayUs@Time
   255                           
   256                           ;TEST_FT64F0AX_IO.C: 115: unsigned char a;
   257                           ;TEST_FT64F0AX_IO.C: 116: for(a=0;a<Time;a++)
   258  044F  01F3               	clrf	DelayUs@a
   259  0450                     l2553:	
   260  0450  0872               	movf	DelayUs@Time,w
   261  0451  0273               	subwf	DelayUs@a,w
   262  0452  1803               	btfsc	3,0
   263  0453  0008               	return
   264                           
   265                           ;TEST_FT64F0AX_IO.C: 117: {
   266                           ;TEST_FT64F0AX_IO.C: 118: __nop();
   267  0454  0000               	nop
   268  0455  0AF3               	incf	DelayUs@a,f
   269  0456  2C50               	goto	l2553
   270  0457                     __end_of_DelayUs:	
   271  0457                     __ptext1:	
   272 ;; *************** function _POWER_INITIAL *****************
   273 ;; Defined at:
   274 ;;		line 75 in file "TEST_FT64F0AX_IO.C"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2
   283 ;; Tracked objects:
   284 ;;		On entry : B1F/0
   285 ;;		On exit  : B1F/3
   286 ;;		Unchanged: B00/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels used:    1
   294 ;; Hardware stack levels required when called:    2
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           
   303                           ;psect for function _POWER_INITIAL
   304  0457                     _POWER_INITIAL:	
   305                           
   306                           ;TEST_FT64F0AX_IO.C: 77: OSCCON=0B01110001;
   307                           
   308                           ;incstack = 0
   309                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   310  0457  3071               	movlw	113
   311  0458  0021               	movlb	1	; select bank1
   312  0459  0099               	movwf	25	;volatile
   313                           
   314                           ;TEST_FT64F0AX_IO.C: 81: PORTA=0B00000000;
   315  045A  0020               	movlb	0	; select bank0
   316  045B  018C               	clrf	12	;volatile
   317                           
   318                           ;TEST_FT64F0AX_IO.C: 82: PORTB=0B00000000;
   319  045C  018D               	clrf	13	;volatile
   320                           
   321                           ;TEST_FT64F0AX_IO.C: 83: PORTC=0B00000000;
   322  045D  018E               	clrf	14	;volatile
   323                           
   324                           ;TEST_FT64F0AX_IO.C: 85: WPUA=0B00000000;
   325  045E  0023               	movlb	3	; select bank3
   326  045F  018C               	clrf	12	;volatile
   327                           
   328                           ;TEST_FT64F0AX_IO.C: 86: WPUB=0B00000000;
   329  0460  018D               	clrf	13	;volatile
   330                           
   331                           ;TEST_FT64F0AX_IO.C: 87: WPUC=0B00000010;
   332  0461  3002               	movlw	2
   333  0462  008E               	movwf	14	;volatile
   334                           
   335                           ;TEST_FT64F0AX_IO.C: 89: WPDA=0B00000000;
   336  0463  0024               	movlb	4	; select bank4
   337  0464  018C               	clrf	12	;volatile
   338                           
   339                           ;TEST_FT64F0AX_IO.C: 90: WPDB=0B00000000;
   340  0465  018D               	clrf	13	;volatile
   341                           
   342                           ;TEST_FT64F0AX_IO.C: 91: WPDC=0B00000000;
   343  0466  018E               	clrf	14	;volatile
   344                           
   345                           ;TEST_FT64F0AX_IO.C: 93: TRISA=0B11111111;
   346  0467  30FF               	movlw	255
   347  0468  0021               	movlb	1	; select bank1
   348  0469  008C               	movwf	12	;volatile
   349                           
   350                           ;TEST_FT64F0AX_IO.C: 94: TRISB=0B00000000;
   351  046A  018D               	clrf	13	;volatile
   352                           
   353                           ;TEST_FT64F0AX_IO.C: 95: TRISC=0B00000011;
   354  046B  3003               	movlw	3
   355  046C  008E               	movwf	14	;volatile
   356                           
   357                           ;TEST_FT64F0AX_IO.C: 97: PSRC0=0B11111111;
   358  046D  30FF               	movlw	255
   359  046E  0022               	movlb	2	; select bank2
   360  046F  009A               	movwf	26	;volatile
   361                           
   362                           ;TEST_FT64F0AX_IO.C: 98: PSRC1=0B11111111;
   363  0470  009B               	movwf	27	;volatile
   364                           
   365                           ;TEST_FT64F0AX_IO.C: 99: PSRC2=0B00001111;
   366  0471  300F               	movlw	15
   367  0472  009C               	movwf	28	;volatile
   368                           
   369                           ;TEST_FT64F0AX_IO.C: 101: PSINK0=0B11111111;
   370  0473  30FF               	movlw	255
   371  0474  0023               	movlb	3	; select bank3
   372  0475  009A               	movwf	26	;volatile
   373                           
   374                           ;TEST_FT64F0AX_IO.C: 102: PSINK1=0B11111111;
   375  0476  009B               	movwf	27	;volatile
   376                           
   377                           ;TEST_FT64F0AX_IO.C: 103: PSINK2=0B00000011;
   378  0477  3003               	movlw	3
   379  0478  009C               	movwf	28	;volatile
   380                           
   381                           ;TEST_FT64F0AX_IO.C: 105: ANSELA=0B00000000;
   382  0479  0197               	clrf	23	;volatile
   383  047A  0008               	return
   384  047B                     __end_of_POWER_INITIAL:	
   385                           
   386                           	psect	cstackCOMMON
   387  0072                     __pcstackCOMMON:	
   388  0072                     ?_user_isr:	
   389  0072                     ??_user_isr:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0072                     ?_ISR:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0072                     ??_ISR:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0072                     ?_POWER_INITIAL:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0072                     ??_POWER_INITIAL:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0072                     ?_DelayUs:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0072                     ??_DelayUs:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0072                     ?_DelayMs:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0072                     ?_main:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0072                     DelayUs@Time:	
   417                           ; 1 bytes @ 0x0
   418                           
   419                           
   420                           ; 1 bytes @ 0x0
   421  0072                     	ds	1
   422  0073                     DelayUs@a:	
   423                           
   424                           ; 1 bytes @ 0x1
   425  0073                     	ds	1
   426  0074                     ??_DelayMs:	
   427  0074                     DelayMs@Time:	
   428                           ; 1 bytes @ 0x2
   429                           
   430                           
   431                           ; 1 bytes @ 0x2
   432  0074                     	ds	1
   433  0075                     DelayMs@a:	
   434                           
   435                           ; 1 bytes @ 0x3
   436  0075                     	ds	1
   437  0076                     DelayMs@b:	
   438                           
   439                           ; 1 bytes @ 0x4
   440  0076                     	ds	1
   441  0077                     ??_main:	
   442                           
   443                           	psect	intentry
   444  0404                     __pintentry:	
   445 ;; *************** function _ISR *****************
   446 ;; Defined at:
   447 ;;		line 39 in file "TEST_FT64F0AX_IO.C"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		status,2, status,0, pclath, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   465 ;;Total ram usage:        0 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; Hardware stack levels required when called:    1
   468 ;; This function calls:
   469 ;;		_user_isr
   470 ;; This function is called by:
   471 ;;		Interrupt level 1
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475  0404                     _ISR:	
   476                           
   477                           ;incstack = 0
   478  0404  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   479                           
   480                           ; Regs used in _ISR: [status,2+status,0+pclath+cstack]
   481  0405  3184               	pagesel	$
   482  0406  0000               	nop	; ;# 
   483  0407  0000               	nop	; ;# 
   484  0408  0000               	nop	; ;# 
   485  0409  0000               	nop	; ;# 
   486  040A  0000               	nop	; ;# 
   487  040B  0000               	nop	; ;# 
   488  040C  0000               	nop	; ;# 
   489  040D  0000               	nop	; ;# 
   490  040E  0000               	nop	; ;# 
   491  040F  0000               	nop	; ;# 
   492  0410  0000               	nop	; ;# 
   493  0411  0000               	nop	; ;# 
   494  0412  0000               	nop	; ;# 
   495  0413  0000               	nop	; ;# 
   496  0414  0000               	nop	; ;# 
   497  0415  0000               	nop	; ;# 
   498  0416  0000               	nop	; ;# 
   499  0417  0000               	nop	; ;# 
   500  0418  0000               	nop	; ;# 
   501  0419  0000               	nop	; ;# 
   502  041A  0000               	nop	; ;# 
   503                           
   504                           ;TEST_FT64F0AX_IO.C: 64: user_isr();
   505  041B  3184  247B         	fcall	_user_isr
   506  041D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   507  041E  0009               	retfie
   508  041F                     __end_of_ISR:	
   509                           
   510                           	psect	text5
   511  047B                     __ptext5:	
   512 ;; *************** function _user_isr *****************
   513 ;; Defined at:
   514 ;;		line 66 in file "TEST_FT64F0AX_IO.C"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		None
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_ISR
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _user_isr
   543  047B                     _user_isr:	
   544                           
   545                           ;incstack = 0
   546                           ; Regs used in _user_isr: []
   547  047B  0008               	return
   548  047C                     __end_of_user_isr:	
   549  007E                     btemp	set	126	;btemp
   550  007E                     int$flags	set	126
   551  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           12      5       5
    BANK0            75      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayMs
    _DelayMs->_DelayUs

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                            _DelayMs
                      _POWER_INITIAL
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayMs                                              3     3      0      90
                                              2 COMMON     3     3      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (2) _DelayUs                                              2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
                           _user_isr
 ---------------------------------------------------------------------------------
 (4) _user_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
     _DelayUs
   _POWER_INITIAL

 _ISR (ROOT)
   _user_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            C      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               C      5       5       2       41.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            4B      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               4B      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Nov 16 11:42:00 2021

                    _RB5 006D                      _ISR 0404                     ?_ISR 0072  
                   l2553 0450                     l2583 0444                     l2591 043F  
                   l2599 0426                     _WPDA 020C                     _WPDB 020D  
                   _WPDC 020E                     _WPUA 018C                     _WPUB 018D  
                   _WPUC 018E                     _flag 0020                     _main 0424  
                   btemp 007E                     start 041F          __end_of_DelayMs 044E  
        __end_of_DelayUs 0457                    ??_ISR 0072                    ?_main 0072  
                  _CRC_H 0024                    _CRC_L 0023                    _PSRC0 011A  
                  _PSRC1 011B                    _PSRC2 011C                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _W_TMP 0070  
                  _count 0021                    wtemp0 007E          __initialization 0421  
           __end_of_main 043D                   ??_main 0077                   _ANSELA 0197  
                 _CRC_16 0023                ??_DelayMs 0074                ??_DelayUs 0072  
                 _OSCCON 0099                   _PSINK0 019A                   _PSINK1 019B  
                 _PSINK2 019C         __end_of_user_isr 047C    __end_of_POWER_INITIAL 047B  
__end_of__initialization 0421           __pcstackCOMMON 0072               __pmaintext 0424  
             __pintentry 0404                  _BSR_TMP 0071                  _DelayMs 043D  
                _DelayUs 044E                ?_user_isr 0072                  __ptext0 0000  
                __ptext1 0457                  __ptext2 043D                  __ptext3 044E  
                __ptext5 047B             __size_of_ISR 001B             _iap_err_flag 0101  
   end_of_initialization 0421               ??_user_isr 0072      start_initialization 0421  
            __end_of_ISR 041F   __size_of_POWER_INITIAL 0024                ___latbits 0003  
               ?_DelayMs 0072                 ?_DelayUs 0072        __size_of_user_isr 0001  
              _read_flag 0100              _iap_ok_flag 0102              _iap_recdata 0022  
          _POWER_INITIAL 0457                 DelayMs@a 0075                 DelayMs@b 0076  
               DelayUs@a 0073              DelayMs@Time 0074           ?_POWER_INITIAL 0072  
            DelayUs@Time 0072         __size_of_DelayMs 0011         __size_of_DelayUs 0009  
          __size_of_main 0019                 int$flags 007E                 _user_isr 047B  
        ??_POWER_INITIAL 0072                 intlevel1 0000  
