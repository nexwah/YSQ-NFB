

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Nov 16 11:50:42 2021

GNU C Code Generator                                                 
     1                           	processor	FT64F0AX
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	text8,local,class=CODE,merge=1,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x620,48
    14                           	dabs	1,0x5A0,80
    15                           	dabs	1,0x56B,5
    16                           	dabs	1,0x24,1,_CRC_H
    17                           	dabs	1,0x23,1,_CRC_L
    18                           	dabs	1,0x102,0,_iap_ok_flag
    19                           	dabs	1,0x20,1
    20                           	dabs	1,0x101,0,_iap_err_flag
    21                           	dabs	1,0x20,1
    22                           	dabs	1,0x100,0,_read_flag
    23                           	dabs	1,0x20,1
    24                           	dabs	1,0x71,1,_BSR_TMP
    25                           	dabs	1,0x70,1,_W_TMP
    26                           	dabs	1,0x23,2,_CRC_16
    27                           	dabs	1,0x22,1,_iap_recdata
    28                           	dabs	1,0x21,1,_count
    29                           	dabs	1,0x20,1,_flag
    30                           	dabs	1,0x236B,0,_iap_databuf
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.45
    34                           ; Generated 16/11/2017 
    35                           ; 
    36                           ; SFR Addresses
    37  0000                     	;_iap_databuf
    38                           
    39                           	psect	text0
    40  0000                     __ptext0:		;_read_flag
    41  0008                     _BSREG	set	8
    42  005F                     _GIE	set	95
    43  005E                     _PEIE	set	94
    44  009A                     _PCKEN	set	154
    45  0099                     _OSCCON	set	153
    46  019F                     _AFP1	set	415
    47  0195                     _EECON1	set	405
    48  0194                     _EEDATH	set	404
    49  0193                     _EEDATL	set	403
    50  0192                     _EEADRH	set	402
    51  0191                     _EEADRL	set	401
    52  0CAF                     _EEPGD	set	3247
    53  0CAE                     _CFGS	set	3246
    54  0CA8                     _RD	set	3240
    55  0494                     _UR1DLL	set	1172
    56  0492                     _UR1LSR	set	1170
    57  0491                     _UR1MCR	set	1169
    58  048F                     _UR1LCR	set	1167
    59  048C                     _UR1DATAL	set	1164
    60  2493                     _UR1FEF	set	9363
    61  2490                     _UR1RXNEF	set	9360
    62  2470                     _UR1RXNE	set	9328
    63                           
    64                           	psect	cinit
    65  0021                     start_initialization:	
    66                           ; #config settings
    67                           
    68  0021                     __initialization:		;BIGRAM
    69                           
    70                           ; Clear objects allocated to BIGRAM
    71  0021  306B               	movlw	107
    72  0022  0084               	movwf	4
    73  0023  3023               	movlw	35
    74  0024  0085               	movwf	5
    75  0025  3085               	movlw	133
    76  0026  00FE               	movwf	126
    77  0027  3000               	movlw	0
    78  0028  01FF               	clrf	127
    79  0029  3183  2320  3180   	fcall	clear_ram0
    80  002C                     end_of_initialization:	
    81                           ;End of C runtime variable initialization code
    82                           
    83  002C                     __end_of__initialization:	
    84  002C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    85  002D  0020               	movlb	0
    86  002E  282F               	ljmp	_main	;jump to C main() function
    87  002F                     __pmaintext:	
    88                           ; 1 bytes @ 0x13
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 364 in file "IAP_FW.C"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;		None
    99 ;; Return value:  Size  Location     Type
   100 ;;                  1    wreg      void 
   101 ;; Registers used:
   102 ;;		wreg, status,2, status,0, pclath, cstack
   103 ;; Tracked objects:
   104 ;;		On entry : B1F/0
   105 ;;		On exit  : 0/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   112 ;;Total ram usage:        0 bytes
   113 ;; Hardware stack levels required when called:    8
   114 ;; This function calls:
   115 ;;		_Power_On_App_Check
   116 ;;		_iap_usart_init
   117 ;; This function is called by:
   118 ;;		Startup code after reset
   119 ;; This function uses a non-reentrant model
   120 ;;
   121                           
   122                           
   123                           ;psect for function _main
   124  002F                     _main:	
   125                           
   126                           ;IAP_FW.C: 366: iap_usart_init();
   127                           
   128                           ;incstack = 0
   129                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   130  002F  2038  3180         	fcall	_iap_usart_init
   131                           
   132                           ;IAP_FW.C: 367: Power_On_App_Check();
   133  0031  2049               	fcall	_Power_On_App_Check
   134                           
   135                           ;IAP_FW.C: 369: GIE=1;
   136  0032  178B               	bsf	11,7	;volatile
   137                           
   138                           ;IAP_FW.C: 370: PEIE=1;
   139  0033  170B               	bsf	11,6	;volatile
   140                           
   141                           ;IAP_FW.C: 372: if(read_flag !=1)
   142  0034  1C20               	btfss	32,0
   143  0035  2C00               	goto	1024	;# 
   144  0036                     l2251:	
   145                           ;IAP_FW.C: 375: }
   146                           ;IAP_FW.C: 376: while(1)
   147                           
   148  0036  0064               	clrwdt	;# 
   149  0037  2836               	goto	l2251
   150  0038                     __end_of_main:	
   151  0038                     __ptext1:	
   152 ;; *************** function _iap_usart_init *****************
   153 ;; Defined at:
   154 ;;		line 4 in file "USART_DRV.C"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;		None
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg
   163 ;; Tracked objects:
   164 ;;		On entry : B1F/0
   165 ;;		On exit  : B1F/9
   166 ;;		Unchanged: B00/0
   167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   172 ;;Total ram usage:        0 bytes
   173 ;; Hardware stack levels used:    1
   174 ;; Hardware stack levels required when called:    5
   175 ;; This function calls:
   176 ;;		Nothing
   177 ;; This function is called by:
   178 ;;		_main
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           
   183                           ;psect for function _iap_usart_init
   184  0038                     _iap_usart_init:	
   185                           
   186                           ;USART_DRV.C: 7: PCKEN = (0X1<<5 );
   187                           
   188                           ;incstack = 0
   189                           ; Regs used in _iap_usart_init: [wreg]
   190  0038  3020               	movlw	32
   191  0039  0021               	movlb	1	; select bank1
   192  003A  009A               	movwf	26	;volatile
   193                           
   194                           ;USART_DRV.C: 8: OSCCON = 0B01110001;
   195  003B  3071               	movlw	113
   196  003C  0099               	movwf	25	;volatile
   197                           
   198                           ;USART_DRV.C: 11: AFP1 = 0B01000000;
   199  003D  3040               	movlw	64
   200  003E  0023               	movlb	3	; select bank3
   201  003F  009F               	movwf	31	;volatile
   202                           
   203                           ;USART_DRV.C: 16: UR1DLL=26;
   204  0040  301A               	movlw	26
   205  0041  0029               	movlb	9	; select bank9
   206  0042  0094               	movwf	20	;volatile
   207                           
   208                           ;USART_DRV.C: 20: UR1LCR=(0x1 );
   209  0043  3001               	movlw	1
   210  0044  008F               	movwf	15	;volatile
   211                           
   212                           ;USART_DRV.C: 22: UR1MCR=(0X1<<4 )|(0x1<<3 );
   213  0045  3018               	movlw	24
   214  0046  0091               	movwf	17	;volatile
   215                           
   216                           ;USART_DRV.C: 24: UR1RXNE |= (0X1<<0 );
   217  0047  140E               	bsf	14,0	;volatile
   218  0048  0008               	return
   219  0049                     __end_of_iap_usart_init:	
   220  0049                     __ptext2:	
   221 ;; *************** function _Power_On_App_Check *****************
   222 ;; Defined at:
   223 ;;		line 86 in file "IAP_FW.C"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;  CRC_Eeprom      2   17[BANK0 ] unsigned int 
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : B1F/9
   234 ;;		On exit  : 1F/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   240 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   241 ;;Total ram usage:        2 bytes
   242 ;; Hardware stack levels used:    1
   243 ;; Hardware stack levels required when called:    7
   244 ;; This function calls:
   245 ;;		_All_Page_Read_CRC
   246 ;;		_EEPROMread
   247 ;; This function is called by:
   248 ;;		_main
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252                           
   253                           ;psect for function _Power_On_App_Check
   254  0049                     _Power_On_App_Check:	
   255                           
   256                           ;IAP_FW.C: 88: unsigned int CRC_Eeprom;
   257                           ;IAP_FW.C: 90: count=0;
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _Power_On_App_Check: [wreg+status,2+status,0+pclath+cstack]
   261  0049  0020               	movlb	0	; select bank0
   262  004A  3000               	movlw	0
   263  004B  01A1               	clrf	33
   264                           
   265                           ;IAP_FW.C: 91: flag=0;
   266  004C  01A0               	clrf	32
   267                           
   268                           ;IAP_FW.C: 93: CRC_Eeprom=EEPROMread(0);
   269  004D  2067  3180         	fcall	_EEPROMread
   270  004F  00B6               	movwf	Power_On_App_Check@CRC_Eeprom
   271  0050  01B7               	clrf	Power_On_App_Check@CRC_Eeprom+1
   272                           
   273                           ;IAP_FW.C: 94: CRC_Eeprom= CRC_Eeprom << 8;
   274  0051  00B7               	movwf	Power_On_App_Check@CRC_Eeprom+1
   275  0052  3001               	movlw	1
   276  0053  01B6               	clrf	Power_On_App_Check@CRC_Eeprom
   277                           
   278                           ;IAP_FW.C: 95: CRC_Eeprom= CRC_Eeprom + EEPROMread(1);
   279  0054  2067  3180         	fcall	_EEPROMread
   280  0056  07B6               	addwf	Power_On_App_Check@CRC_Eeprom,f
   281  0057  1803               	skipnc
   282  0058  0AB7               	incf	Power_On_App_Check@CRC_Eeprom+1,f
   283                           
   284                           ;IAP_FW.C: 97: All_Page_Read_CRC();
   285  0059  207A  3180         	fcall	_All_Page_Read_CRC
   286                           
   287                           ;IAP_FW.C: 98: if(CRC_Eeprom == CRC_16)
   288  005B  0824               	movf	36,w
   289  005C  0637               	xorwf	Power_On_App_Check@CRC_Eeprom+1,w
   290  005D  1D03               	skipz
   291  005E  2861               	goto	u705
   292  005F  0823               	movf	35,w
   293  0060  0636               	xorwf	Power_On_App_Check@CRC_Eeprom,w
   294  0061                     u705:	
   295  0061  1D03               	skipz
   296  0062  2865               	goto	l2162
   297                           
   298                           ;IAP_FW.C: 99: {
   299                           ;IAP_FW.C: 100: read_flag=0;
   300  0063  1020               	bcf	32,0
   301                           
   302                           ;IAP_FW.C: 101: }
   303  0064  0008               	return
   304  0065                     l2162:	
   305                           
   306                           ;IAP_FW.C: 102: else
   307                           ;IAP_FW.C: 103: {
   308                           ;IAP_FW.C: 104: read_flag=1;
   309  0065  1420               	bsf	32,0
   310  0066  0008               	return
   311  0067                     __end_of_Power_On_App_Check:	
   312  0067                     __ptext3:	
   313 ;; *************** function _EEPROMread *****************
   314 ;; Defined at:
   315 ;;		line 48 in file "MEM_DRV.C"
   316 ;; Parameters:    Size  Location     Type
   317 ;;  EEAddr          1    wreg     unsigned char 
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  EEAddr          1    9[BANK0 ] unsigned char 
   320 ;;  ReEEPROMread    1   10[BANK0 ] unsigned char 
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      unsigned char 
   323 ;; Registers used:
   324 ;;		wreg
   325 ;; Tracked objects:
   326 ;;		On entry : 1F/0
   327 ;;		On exit  : 1F/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   331 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   334 ;;Total ram usage:        2 bytes
   335 ;; Hardware stack levels used:    1
   336 ;; Hardware stack levels required when called:    5
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_Power_On_App_Check
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           
   345                           ;psect for function _EEPROMread
   346  0067                     _EEPROMread:	
   347                           
   348                           ;incstack = 0
   349                           ; Regs used in _EEPROMread: [wreg]
   350                           ;EEPROMread@EEAddr stored from wreg
   351  0067  00AE               	movwf	EEPROMread@EEAddr
   352                           
   353                           ;MEM_DRV.C: 50: unsigned char ReEEPROMread;
   354                           ;MEM_DRV.C: 52: EEADRL = EEAddr;
   355  0068  0023               	movlb	3	; select bank3
   356  0069  0091               	movwf	17	;volatile
   357                           
   358                           ;MEM_DRV.C: 54: EEPGD=0;
   359  006A  1395               	bcf	21,7	;volsfr
   360                           
   361                           ;MEM_DRV.C: 55: CFGS=0;
   362  006B  1315               	bcf	21,6	;volsfr
   363                           
   364                           ;MEM_DRV.C: 56: RD = 1;
   365  006C  1415               	bsf	21,0	;volsfr
   366                           
   367                           ;MEM_DRV.C: 57: __nop();
   368  006D  0000               	nop
   369                           
   370                           ;MEM_DRV.C: 58: __nop();
   371  006E  0000               	nop
   372                           
   373                           ;MEM_DRV.C: 59: __nop();
   374  006F  0000               	nop
   375                           
   376                           ;MEM_DRV.C: 60: __nop();
   377  0070  0000               	nop
   378                           
   379                           ;MEM_DRV.C: 61: ReEEPROMread = EEDATL;
   380  0071  0023               	movlb	3	; select bank3
   381  0072  0813               	movf	19,w	;volatile
   382  0073  0020               	movlb	0	; select bank0
   383  0074  00AF               	movwf	EEPROMread@ReEEPROMread
   384                           
   385                           ;MEM_DRV.C: 62: RD=0;
   386  0075  0023               	movlb	3	; select bank3
   387  0076  1015               	bcf	21,0	;volsfr
   388                           
   389                           ;MEM_DRV.C: 63: return ReEEPROMread;
   390  0077  0020               	movlb	0	; select bank0
   391  0078  082F               	movf	EEPROMread@ReEEPROMread,w
   392  0079  0008               	return
   393  007A                     __end_of_EEPROMread:	
   394  007A                     __ptext4:	
   395 ;; *************** function _All_Page_Read_CRC *****************
   396 ;; Defined at:
   397 ;;		line 57 in file "IAP_FW.C"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  iap_addr        2   15[BANK0 ] unsigned int 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 1F/0
   408 ;;		On exit  : 1F/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   412 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   415 ;;Total ram usage:        2 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; Hardware stack levels required when called:    6
   418 ;; This function calls:
   419 ;;		_CRC16_CCITT
   420 ;;		_iap_mem_rd
   421 ;; This function is called by:
   422 ;;		_Power_On_App_Check
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _All_Page_Read_CRC
   428  007A                     _All_Page_Read_CRC:	
   429                           
   430                           ;IAP_FW.C: 59: unsigned int iap_addr;
   431                           ;IAP_FW.C: 60: CRC_16 = 0;
   432                           
   433                           ;incstack = 0
   434                           ; Regs used in _All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
   435                           
   436                           ;IAP_FW.C: 61: EECON1 = (0x1<<7 )|(0X1<<2 );
   437  007A  2115  3180         	fcall	PL12	;call to abstracted procedure
   438  007C  0095               	movwf	21	;volsfr
   439                           
   440                           ;IAP_FW.C: 62: for(iap_addr=0X400;iap_addr<0x2800;iap_addr++)
   441  007D  0020               	movlb	0	; select bank0
   442  007E  3004               	movlw	4
   443  007F  01B4               	clrf	All_Page_Read_CRC@iap_addr
   444  0080  00B5               	movwf	All_Page_Read_CRC@iap_addr+1
   445  0081                     l7408:	
   446                           
   447                           ;IAP_FW.C: 63: {
   448                           ;IAP_FW.C: 64: EEADRH = iap_addr>>8;
   449  0081  0835               	movf	All_Page_Read_CRC@iap_addr+1,w
   450  0082  0023               	movlb	3	; select bank3
   451  0083  0092               	movwf	18	;volatile
   452                           
   453                           ;IAP_FW.C: 65: EEADRL = iap_addr>>0;
   454  0084  0020               	movlb	0	; select bank0
   455  0085  0834               	movf	All_Page_Read_CRC@iap_addr,w
   456  0086  0023               	movlb	3	; select bank3
   457  0087  0091               	movwf	17	;volatile
   458                           
   459                           ;IAP_FW.C: 66: iap_mem_rd();
   460  0088  20BB  3180         	fcall	_iap_mem_rd
   461                           
   462                           ;IAP_FW.C: 67: CRC16_CCITT(EEDATL);
   463  008A  0813               	movf	19,w	;volatile
   464  008B  209C  3180         	fcall	_CRC16_CCITT
   465                           
   466                           ;IAP_FW.C: 68: CRC16_CCITT(EEDATH);
   467  008D  0023               	movlb	3	; select bank3
   468  008E  0814               	movf	20,w	;volatile
   469  008F  209C  3180         	fcall	_CRC16_CCITT
   470  0091  0AB4               	incf	All_Page_Read_CRC@iap_addr,f
   471  0092  1903               	skipnz
   472  0093  0AB5               	incf	All_Page_Read_CRC@iap_addr+1,f
   473  0094  3028               	movlw	40
   474  0095  0235               	subwf	All_Page_Read_CRC@iap_addr+1,w
   475  0096  3000               	movlw	0
   476  0097  1903               	skipnz
   477  0098  0234               	subwf	All_Page_Read_CRC@iap_addr,w
   478  0099  1803               	btfsc	3,0
   479  009A  0008               	return
   480  009B  2881               	goto	l7408
   481  009C                     __end_of_All_Page_Read_CRC:	
   482  009C                     __ptext6:	
   483 ;; *************** function _CRC16_CCITT *****************
   484 ;; Defined at:
   485 ;;		line 41 in file "IAP_FW.C"
   486 ;; Parameters:    Size  Location     Type
   487 ;;  data            1    wreg     unsigned char 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  data            1   13[BANK0 ] unsigned char 
   490 ;;  i               1   14[BANK0 ] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 1F/3
   497 ;;		On exit  : 1F/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   502 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   503 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   504 ;;Total ram usage:        6 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    5
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_All_Page_Read_CRC
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _CRC16_CCITT
   516  009C                     _CRC16_CCITT:	
   517                           
   518                           ;incstack = 0
   519                           ; Regs used in _CRC16_CCITT: [wreg+status,2+status,0]
   520                           ;CRC16_CCITT@data stored from wreg
   521  009C  0020               	movlb	0	; select bank0
   522  009D  00B2               	movwf	CRC16_CCITT@data
   523                           
   524                           ;IAP_FW.C: 44: unsigned char i;
   525                           ;IAP_FW.C: 46: CRC_16 ^= data;
   526  009E  06A3               	xorwf	35,f
   527                           
   528                           ;IAP_FW.C: 48: for(i = 0;i < 8;i++)
   529  009F  01B3               	clrf	CRC16_CCITT@i
   530  00A0                     l2147:	
   531                           
   532                           ;IAP_FW.C: 49: {
   533                           ;IAP_FW.C: 50: if(CRC_16 & 0x01)
   534  00A0  1C23               	btfss	35,0
   535  00A1  28B3               	goto	l7360
   536                           
   537                           ;IAP_FW.C: 51: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
   538  00A2  0824               	movf	36,w
   539  00A3  00AF               	movwf	??_CRC16_CCITT+1
   540  00A4  0823               	movf	35,w
   541  00A5  00AE               	movwf	??_CRC16_CCITT
   542  00A6  3008               	movlw	8
   543  00A7  36AF               	lsrf	??_CRC16_CCITT+1,f
   544  00A8  0CAE               	rrf	??_CRC16_CCITT,f
   545  00A9  062E               	xorwf	??_CRC16_CCITT,w
   546  00AA  00B0               	movwf	??_CRC16_CCITT+2
   547  00AB  3084               	movlw	132
   548  00AC  062F               	xorwf	??_CRC16_CCITT+1,w
   549  00AD  00B1               	movwf	??_CRC16_CCITT+3
   550  00AE  0830               	movf	??_CRC16_CCITT+2,w
   551  00AF  00A3               	movwf	35
   552  00B0  0831               	movf	??_CRC16_CCITT+3,w
   553  00B1  00A4               	movwf	36
   554  00B2  28B5               	goto	l2150
   555  00B3                     l7360:	
   556                           
   557                           ;IAP_FW.C: 52: else
   558                           ;IAP_FW.C: 53: CRC_16 = CRC_16 >> 1;
   559  00B3  36A4               	lsrf	36,f
   560  00B4  0CA3               	rrf	35,f
   561  00B5                     l2150:	
   562  00B5  3008               	movlw	8
   563  00B6  0AB3               	incf	CRC16_CCITT@i,f
   564  00B7  0233               	subwf	CRC16_CCITT@i,w
   565  00B8  1803               	btfsc	3,0
   566  00B9  0008               	return
   567  00BA  28A0               	goto	l2147
   568  00BB                     __end_of_CRC16_CCITT:	
   569  00BB                     __ptext5:	
   570 ;; *************** function _iap_mem_rd *****************
   571 ;; Defined at:
   572 ;;		line 34 in file "MEM_DRV.C"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		None
   581 ;; Tracked objects:
   582 ;;		On entry : 1F/3
   583 ;;		On exit  : 1F/3
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    5
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_All_Page_Read_CRC
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function _iap_mem_rd
   602  00BB                     _iap_mem_rd:	
   603                           
   604                           ;MEM_DRV.C: 36: EECON1 |=(0x1<<0 );
   605                           
   606                           ;incstack = 0
   607                           ; Regs used in _iap_mem_rd: []
   608  00BB  1415               	bsf	21,0	;volsfr
   609  00BC  0000               	nop	;# 
   610  00BD                     l4380:	
   611                           ;MEM_DRV.C: 38: while(EECON1 & (0x1<<0 ));
   612                           
   613  00BD  0023               	movlb	3	; select bank3
   614  00BE  1815               	btfsc	21,0	;volsfr
   615  00BF  28BD               	goto	l4380
   616  00C0  0008               	return
   617  00C1                     __end_of_iap_mem_rd:	
   618  00C1                     __ptext13:	
   619 ;; *************** function _Eeprom_Write_Crc *****************
   620 ;; Defined at:
   621 ;;		line 71 in file "IAP_FW.C"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 1F/3
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    2
   642 ;; This function calls:
   643 ;;		_iap_mem_prog
   644 ;;		i1_All_Page_Read_CRC
   645 ;; This function is called by:
   646 ;;		_user_isr
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _Eeprom_Write_Crc
   652  00C1                     _Eeprom_Write_Crc:	
   653                           
   654                           ;IAP_FW.C: 73: All_Page_Read_CRC();
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in _Eeprom_Write_Crc: [wreg+status,2+status,0+pclath+cstack]
   658  00C1  20D6               	fcall	i1_All_Page_Read_CRC
   659                           
   660                           ;IAP_FW.C: 75: EECON1 &=~(0x1<<7 );
   661  00C2  0023               	movlb	3	; select bank3
   662  00C3  1395               	bcf	21,7	;volsfr
   663                           
   664                           ;IAP_FW.C: 76: EECON1 =(0X1<<2 );
   665  00C4  3004               	movlw	4
   666  00C5  0095               	movwf	21	;volsfr
   667                           
   668                           ;IAP_FW.C: 78: EEADRL=0;
   669  00C6  0191               	clrf	17	;volatile
   670                           
   671                           ;IAP_FW.C: 79: EEDATL=CRC_H;
   672  00C7  0020               	movlb	0	; select bank0
   673  00C8  0824               	movf	36,w
   674  00C9  0023               	movlb	3	; select bank3
   675  00CA  0093               	movwf	19	;volatile
   676                           
   677                           ;IAP_FW.C: 80: iap_mem_prog();
   678  00CB  3182  224D  3180   	fcall	_iap_mem_prog
   679                           
   680                           ;IAP_FW.C: 81: EEADRL=1;
   681  00CE  3001               	movlw	1
   682  00CF  0091               	movwf	17	;volatile
   683                           
   684                           ;IAP_FW.C: 82: EEDATL=CRC_L;
   685  00D0  0020               	movlb	0	; select bank0
   686  00D1  0823               	movf	35,w
   687  00D2  0023               	movlb	3	; select bank3
   688  00D3  0093               	movwf	19	;volatile
   689                           
   690                           ;IAP_FW.C: 83: iap_mem_prog();
   691  00D4  3182  2A4D         	ljmp	i1l7366
   692  00D6                     __end_of_Eeprom_Write_Crc:	
   693  00D6                     __ptext14:	
   694 ;; *************** function i1_All_Page_Read_CRC *****************
   695 ;; Defined at:
   696 ;;		line 57 in file "IAP_FW.C"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  All_Page_Rea    2    6[COMMON] unsigned int 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 1F/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    1
   717 ;; This function calls:
   718 ;;		i1_CRC16_CCITT
   719 ;;		i1_iap_mem_rd
   720 ;; This function is called by:
   721 ;;		_Eeprom_Write_Crc
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function i1_All_Page_Read_CRC
   727  00D6                     i1_All_Page_Read_CRC:	
   728                           
   729                           ;IAP_FW.C: 59: unsigned int iap_addr;
   730                           ;IAP_FW.C: 60: CRC_16 = 0;
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in i1_All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
   734  00D6  0020               	movlb	0	; select bank0
   735                           
   736                           ;IAP_FW.C: 61: EECON1 = (0x1<<7 )|(0X1<<2 );
   737  00D7  2115               	fcall	PL12	;call to abstracted procedure
   738  00D8  0095               	movwf	21	;volsfr
   739                           
   740                           ;IAP_FW.C: 62: for(iap_addr=0X400;iap_addr<0x2800;iap_addr++)
   741  00D9  3004               	movlw	4
   742  00DA  01F8               	clrf	i1All_Page_Read_CRC@iap_addr
   743  00DB  00F9               	movwf	i1All_Page_Read_CRC@iap_addr+1
   744  00DC                     i1l7390:	
   745                           
   746                           ;IAP_FW.C: 63: {
   747                           ;IAP_FW.C: 64: EEADRH = iap_addr>>8;
   748  00DC  0879               	movf	i1All_Page_Read_CRC@iap_addr+1,w
   749  00DD  0023               	movlb	3	; select bank3
   750  00DE  0092               	movwf	18	;volatile
   751                           
   752                           ;IAP_FW.C: 65: EEADRL = iap_addr>>0;
   753  00DF  0878               	movf	i1All_Page_Read_CRC@iap_addr,w
   754  00E0  0091               	movwf	17	;volatile
   755                           
   756                           ;IAP_FW.C: 66: iap_mem_rd();
   757  00E1  3182  2279  3180   	fcall	i1_iap_mem_rd
   758                           
   759                           ;IAP_FW.C: 67: CRC16_CCITT(EEDATL);
   760  00E4  0813               	movf	19,w	;volatile
   761  00E5  20F6  3180         	fcall	i1_CRC16_CCITT
   762                           
   763                           ;IAP_FW.C: 68: CRC16_CCITT(EEDATH);
   764  00E7  0023               	movlb	3	; select bank3
   765  00E8  0814               	movf	20,w	;volatile
   766  00E9  20F6  3180         	fcall	i1_CRC16_CCITT
   767  00EB  0AF8               	incf	i1All_Page_Read_CRC@iap_addr,f
   768  00EC  1903               	skipnz
   769  00ED  0AF9               	incf	i1All_Page_Read_CRC@iap_addr+1,f
   770  00EE  3028               	movlw	40
   771  00EF  0279               	subwf	i1All_Page_Read_CRC@iap_addr+1,w
   772  00F0  3000               	movlw	0
   773  00F1  1903               	skipnz
   774  00F2  0278               	subwf	i1All_Page_Read_CRC@iap_addr,w
   775  00F3  1803               	btfsc	3,0
   776  00F4  0008               	return
   777  00F5  28DC               	goto	i1l7390
   778  00F6                     __end_ofi1_All_Page_Read_CRC:	
   779  00F6                     __ptext16:	
   780 ;; *************** function i1_CRC16_CCITT *****************
   781 ;; Defined at:
   782 ;;		line 41 in file "IAP_FW.C"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  data            1    wreg     unsigned char 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  data            1    4[COMMON] unsigned char 
   787 ;;  CRC16_CCITT     1    5[COMMON] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0
   792 ;; Tracked objects:
   793 ;;		On entry : 1C/0
   794 ;;		On exit  : 1F/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   801 ;;Total ram usage:        6 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_user_isr
   807 ;;		i1_All_Page_Read_CRC
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function i1_CRC16_CCITT
   813  00F6                     i1_CRC16_CCITT:	
   814                           
   815                           ;incstack = 0
   816                           ; Regs used in i1_CRC16_CCITT: [wreg+status,2+status,0]
   817                           ;i1CRC16_CCITT@data stored from wreg
   818  00F6  00F6               	movwf	i1CRC16_CCITT@data
   819                           
   820                           ;IAP_FW.C: 44: unsigned char i;
   821                           ;IAP_FW.C: 46: CRC_16 ^= data;
   822  00F7  0020               	movlb	0	; select bank0
   823  00F8  06A3               	xorwf	35,f
   824                           
   825                           ;IAP_FW.C: 48: for(i = 0;i < 8;i++)
   826  00F9  01F7               	clrf	i1CRC16_CCITT@i
   827  00FA                     i1l2147:	
   828                           
   829                           ;IAP_FW.C: 49: {
   830                           ;IAP_FW.C: 50: if(CRC_16 & 0x01)
   831  00FA  1C23               	btfss	35,0
   832  00FB  290D               	goto	i1l7344
   833                           
   834                           ;IAP_FW.C: 51: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
   835  00FC  0824               	movf	36,w
   836  00FD  00F3               	movwf	??i1_CRC16_CCITT+1
   837  00FE  0823               	movf	35,w
   838  00FF  00F2               	movwf	??i1_CRC16_CCITT
   839  0100  3008               	movlw	8
   840  0101  36F3               	lsrf	??i1_CRC16_CCITT+1,f
   841  0102  0CF2               	rrf	??i1_CRC16_CCITT,f
   842  0103  0672               	xorwf	??i1_CRC16_CCITT,w
   843  0104  00F4               	movwf	??i1_CRC16_CCITT+2
   844  0105  3084               	movlw	132
   845  0106  0673               	xorwf	??i1_CRC16_CCITT+1,w
   846  0107  00F5               	movwf	??i1_CRC16_CCITT+3
   847  0108  0874               	movf	??i1_CRC16_CCITT+2,w
   848  0109  00A3               	movwf	35
   849  010A  0875               	movf	??i1_CRC16_CCITT+3,w
   850  010B  00A4               	movwf	36
   851  010C  290F               	goto	i1l2150
   852  010D                     i1l7344:	
   853                           
   854                           ;IAP_FW.C: 52: else
   855                           ;IAP_FW.C: 53: CRC_16 = CRC_16 >> 1;
   856  010D  36A4               	lsrf	36,f
   857  010E  0CA3               	rrf	35,f
   858  010F                     i1l2150:	
   859  010F  3008               	movlw	8
   860  0110  0AF7               	incf	i1CRC16_CCITT@i,f
   861  0111  0277               	subwf	i1CRC16_CCITT@i,w
   862  0112  1803               	btfsc	3,0
   863  0113  0008               	return
   864  0114  28FA               	goto	i1l2147
   865  0115                     __end_ofi1_CRC16_CCITT:	
   866  0115                     PL12:	
   867  0115  3084               	movlw	132
   868  0116  01A3               	clrf	35
   869  0117  01A4               	clrf	36
   870  0118  0023               	movlb	3	; select bank3
   871  0119  0008               	return
   872  011A                     __end_ofPL12:	
   873                           
   874                           	psect	clrtext
   875  0320                     clear_ram0:	
   876                           ;	Called with FSR0 containing the base address, and
   877                           ;	btemp/btemp+1 has the size to clear
   878                           
   879  0320  0064               	clrwdt	;clear the watchdog before getting into this loop
   880  0321                     clrloop0:	
   881  0321  3001               	movlw	1
   882  0322  0180               	clrf	0	;clear RAM location pointed to by FSR
   883  0323  3101               	addfsr 0,1
   884  0324  02FE               	subwf	126,f
   885  0325  3000               	movlw	0
   886  0326  3BFF               	subwfb	127,f
   887  0327  087F               	movf	127,w
   888  0328  047E               	iorwf	126,w
   889  0329  1903               	btfsc	3,2
   890  032A  3400               	retlw	0	;all done for this memory range, return
   891  032B  2B21               	goto	clrloop0	;have we reached the end yet?
   892                           
   893                           	psect	cstackCOMMON
   894  0072                     __pcstackCOMMON:	
   895  0072                     ?_iap_mem_rd:	
   896  0072                     ?_iap_mem_prog:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0072                     ??_iap_mem_prog:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0072                     ?_EEPROMread:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0072                     ?_user_isr:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0072                     ?_iap_usart_rec:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0072                     ?_iap_mem_erase:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0072                     ??_iap_mem_erase:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0072                     ?_iap_usart_init:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0072                     ?_CRC16_CCITT:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0072                     ?_All_Page_Read_CRC:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0072                     ?_Eeprom_Write_Crc:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0072                     ?_Power_On_App_Check:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0072                     ?_data_check_erase_or_not:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0072                     ?_ISR:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0072                     ?_main:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0072                     ?_Unlock_Flash:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0072                     ??_Unlock_Flash:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0072                     ?_DelayUs:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0072                     ??_DelayUs:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0072                     ?i1_CRC16_CCITT:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0072                     ??i1_CRC16_CCITT:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0072                     ?i1_All_Page_Read_CRC:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0072                     ?i1_iap_mem_rd:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0072                     ??i1_iap_mem_rd:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0072                     DelayUs@a:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0072                     data_check_erase_or_not@addr:	
   972                           ; 1 bytes @ 0x0
   973                           
   974                           
   975                           ; 2 bytes @ 0x0
   976  0072                     	ds	1
   977  0073                     ??_iap_usart_rec:	
   978  0073                     iap_usart_rec@a:	
   979                           ; 1 bytes @ 0x1
   980                           
   981                           
   982                           ; 2 bytes @ 0x1
   983  0073                     	ds	1
   984  0074                     data_check_erase_or_not@mode:	
   985                           
   986                           ; 1 bytes @ 0x2
   987  0074                     	ds	1
   988  0075                     ??_data_check_erase_or_not:	
   989                           
   990                           ; 1 bytes @ 0x3
   991  0075                     	ds	1
   992  0076                     i1CRC16_CCITT@data:	
   993                           
   994                           ; 1 bytes @ 0x4
   995  0076                     	ds	1
   996  0077                     i1CRC16_CCITT@i:	
   997                           
   998                           ; 1 bytes @ 0x5
   999  0077                     	ds	1
  1000  0078                     ??i1_All_Page_Read_CRC:	
  1001  0078                     i1All_Page_Read_CRC@iap_addr:	
  1002                           ; 1 bytes @ 0x6
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0x6
  1006  0078                     	ds	1
  1007  0079                     data_check_erase_or_not@j:	
  1008                           
  1009                           ; 1 bytes @ 0x7
  1010  0079                     	ds	1
  1011  007A                     ??_Eeprom_Write_Crc:	
  1012  007A                     data_check_erase_or_not@k:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0x8
  1017  007A                     	ds	1
  1018  007B                     data_check_erase_or_not@i:	
  1019                           
  1020                           ; 1 bytes @ 0x9
  1021  007B                     	ds	1
  1022  007C                     ??_ISR:	
  1023                           
  1024                           	psect	cstackBANK0
  1025  0025                     __pcstackBANK0:	
  1026                           ; 1 bytes @ 0xA
  1027                           
  1028  0025                     ??_user_isr:	
  1029                           
  1030                           ; 1 bytes @ 0x0
  1031  0025                     	ds	4
  1032  0029                     user_isr@CRC16_dat1:	
  1033                           
  1034                           ; 2 bytes @ 0x4
  1035  0029                     	ds	2
  1036  002B                     user_isr@iap_addr:	
  1037                           
  1038                           ; 2 bytes @ 0x6
  1039  002B                     	ds	2
  1040  002D                     user_isr@i:	
  1041                           
  1042                           ; 1 bytes @ 0x8
  1043  002D                     	ds	1
  1044  002E                     ??_iap_mem_rd:	
  1045  002E                     ??_EEPROMread:	
  1046                           ; 1 bytes @ 0x9
  1047                           
  1048  002E                     ??_iap_usart_init:	
  1049                           ; 1 bytes @ 0x9
  1050                           
  1051  002E                     ??_CRC16_CCITT:	
  1052                           ; 1 bytes @ 0x9
  1053                           
  1054  002E                     EEPROMread@EEAddr:	
  1055                           ; 1 bytes @ 0x9
  1056                           
  1057                           
  1058                           ; 1 bytes @ 0x9
  1059  002E                     	ds	1
  1060  002F                     EEPROMread@ReEEPROMread:	
  1061                           
  1062                           ; 1 bytes @ 0xA
  1063  002F                     	ds	3
  1064  0032                     CRC16_CCITT@data:	
  1065                           
  1066                           ; 1 bytes @ 0xD
  1067  0032                     	ds	1
  1068  0033                     CRC16_CCITT@i:	
  1069                           
  1070                           ; 1 bytes @ 0xE
  1071  0033                     	ds	1
  1072  0034                     ??_All_Page_Read_CRC:	
  1073  0034                     All_Page_Read_CRC@iap_addr:	
  1074                           ; 1 bytes @ 0xF
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0xF
  1078  0034                     	ds	2
  1079  0036                     ??_Power_On_App_Check:	
  1080  0036                     Power_On_App_Check@CRC_Eeprom:	
  1081                           ; 1 bytes @ 0x11
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x11
  1085  0036                     	ds	2
  1086  0038                     ??_main:	
  1087                           
  1088                           	psect	intentry
  1089  0004                     __pintentry:	
  1090 ;; *************** function _ISR *****************
  1091 ;; Defined at:
  1092 ;;		line 142 in file "IAP_FW.C"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    4
  1113 ;; This function calls:
  1114 ;;		_user_isr
  1115 ;; This function is called by:
  1116 ;;		Interrupt level 1
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120  0004                     _ISR:	
  1121                           
  1122                           ;incstack = 0
  1123  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1124                           
  1125                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1126  0005  3180               	pagesel	$
  1127  0006  0000               	nop	; ;# 
  1128  0007  0000               	nop	; ;# 
  1129  0008  0000               	nop	; ;# 
  1130  0009  0000               	nop	; ;# 
  1131  000A  0000               	nop	; ;# 
  1132  000B  0000               	nop	; ;# 
  1133  000C  0000               	nop	; ;# 
  1134  000D  0000               	nop	; ;# 
  1135  000E  0000               	nop	; ;# 
  1136  000F  0000               	nop	; ;# 
  1137  0010  0000               	nop	; ;# 
  1138  0011  0000               	nop	; ;# 
  1139  0012  0000               	nop	; ;# 
  1140  0013  0000               	nop	; ;# 
  1141  0014  0000               	nop	; ;# 
  1142  0015  0000               	nop	; ;# 
  1143  0016  0000               	nop	; ;# 
  1144  0017  0000               	nop	; ;# 
  1145  0018  0000               	nop	; ;# 
  1146  0019  0000               	nop	; ;# 
  1147  001A  0000               	nop	; ;# 
  1148                           
  1149                           ;IAP_FW.C: 167: user_isr();
  1150  001B  3181  211A         	fcall	_user_isr
  1151  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1152  001E  0009               	retfie
  1153  001F                     __end_of_ISR:	
  1154                           
  1155                           	psect	text8
  1156  011A                     __ptext8:	
  1157 ;; *************** function _user_isr *****************
  1158 ;; Defined at:
  1159 ;;		line 169 in file "IAP_FW.C"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  iap_addr        2    6[BANK0 ] unsigned int 
  1164 ;;  CRC16_dat1      2    4[BANK0 ] unsigned int 
  1165 ;;  i               1    8[BANK0 ] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1178 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1179 ;;Total ram usage:        9 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    3
  1182 ;; This function calls:
  1183 ;;		_Eeprom_Write_Crc
  1184 ;;		_data_check_erase_or_not
  1185 ;;		_iap_mem_erase
  1186 ;;		_iap_mem_prog
  1187 ;;		_iap_usart_rec
  1188 ;;		i1_CRC16_CCITT
  1189 ;; This function is called by:
  1190 ;;		_ISR
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _user_isr
  1196  011A                     _user_isr:	
  1197                           
  1198                           ;IAP_FW.C: 172: if(UR1RXNE && UR1RXNEF)
  1199                           
  1200                           ;incstack = 0
  1201                           ; Regs used in _user_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1202  011A  0029               	movlb	9	; select bank9
  1203  011B  180E               	btfsc	14,0	;volatile
  1204  011C  1C12               	btfss	18,0	;volatile
  1205  011D  2A19               	goto	i1l2185
  1206                           
  1207                           ;IAP_FW.C: 173: {
  1208                           ;IAP_FW.C: 174: if(UR1FEF==1)
  1209  011E  1992               	btfsc	18,3	;volatile
  1210                           
  1211                           ;IAP_FW.C: 175: {UR1FEF=0;}
  1212  011F  1192               	bcf	18,3	;volatile
  1213                           
  1214                           ;IAP_FW.C: 176: iap_recdata= UR1DATAL;
  1215  0120  080C               	movf	12,w	;volatile
  1216  0121  0020               	movlb	0	; select bank0
  1217  0122  00A2               	movwf	34
  1218                           
  1219                           ;IAP_FW.C: 177: count++;
  1220  0123  0AA1               	incf	33,f
  1221                           
  1222                           ;IAP_FW.C: 178: switch(count)
  1223  0124  293D               	goto	i1l7590
  1224  0125                     i1l7556:	
  1225                           
  1226                           ;IAP_FW.C: 182: if(iap_recdata != 0x46)
  1227  0125  3046               	movlw	70
  1228  0126                     L1:	
  1229  0126  0622               	xorwf	34,w
  1230  0127  1903               	btfsc	3,2
  1231  0128  294A               	goto	i1l2191
  1232  0129                     i1l7558:	
  1233                           
  1234                           ;IAP_FW.C: 183: {iap_err_flag=1;}
  1235  0129  14A0               	bsf	32,1
  1236  012A  294A               	goto	i1l2191
  1237  012B                     i1l7560:	
  1238                           
  1239                           ;IAP_FW.C: 188: if(iap_recdata != 0x4D)
  1240  012B  304D               	movlw	77
  1241  012C  2926               	goto	L1
  1242  012D                     i1l7564:	
  1243                           
  1244                           ;IAP_FW.C: 194: if(iap_recdata!= 0x44)
  1245  012D  3044               	movlw	68
  1246  012E  2926               	goto	L1
  1247  012F                     i1l7568:	
  1248                           
  1249                           ;IAP_FW.C: 200: if(iap_recdata != 0x49)
  1250  012F  3049               	movlw	73
  1251  0130  2926               	goto	L1
  1252  0131                     i1l7572:	
  1253                           
  1254                           ;IAP_FW.C: 206: if(iap_recdata != 0x41)
  1255  0131  3041               	movlw	65
  1256  0132  2926               	goto	L1
  1257  0133                     i1l7576:	
  1258                           
  1259                           ;IAP_FW.C: 212: if(iap_recdata != 0x50)
  1260  0133  3050               	movlw	80
  1261  0134  2926               	goto	L1
  1262  0135                     i1l7580:	
  1263                           
  1264                           ;IAP_FW.C: 218: if(iap_recdata!= 0x55)
  1265  0135  3055               	movlw	85
  1266  0136  2926               	goto	L1
  1267  0137                     i1l7584:	
  1268                           
  1269                           ;IAP_FW.C: 225: if(iap_recdata!= 0xaa)
  1270  0137  30AA               	movlw	170
  1271  0138  0622               	xorwf	34,w
  1272  0139  1D03               	btfss	3,2
  1273  013A  2929               	goto	i1l7558
  1274                           
  1275                           ;IAP_FW.C: 227: else
  1276                           ;IAP_FW.C: 228: {iap_ok_flag=1;}
  1277  013B  1520               	bsf	32,2
  1278  013C  294A               	goto	i1l2191
  1279  013D                     i1l7590:	
  1280  013D  0821               	movf	33,w
  1281                           
  1282                           ; Switch size 1, requested type "space"
  1283                           ; Number of cases is 16, Range of values is 1 to 16
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; direct_byte           41     9 (fixed)
  1287                           ; simple_byte           49    25 (average)
  1288                           ; jumptable            263     9 (fixed)
  1289                           ;	Chosen strategy is direct_byte
  1290  013E  3EFF               	addlw	-1
  1291  013F  1C03               	skipc
  1292  0140  2929               	goto	i1l7558
  1293  0141  0084               	movwf	4
  1294  0142  3010               	movlw	16
  1295  0143  0204               	subwf	4,w
  1296  0144  1803               	skipnc
  1297  0145  2929               	goto	i1l7558
  1298  0146  3183               	movlp	high i1S7770
  1299  0147  3504               	lslf	4,w
  1300  0148  3E00               	addlw	low i1S7770
  1301  0149  0082               	movwf	2
  1302  014A                     i1l2191:	
  1303                           
  1304                           ;IAP_FW.C: 235: if(iap_ok_flag==1)
  1305  014A  1D20               	btfss	32,2
  1306  014B  2A0B               	goto	i1l2215
  1307                           
  1308                           ;IAP_FW.C: 236: {
  1309                           ;IAP_FW.C: 237: count=0;
  1310  014C  01A1               	clrf	33
  1311                           
  1312                           ;IAP_FW.C: 238: iap_ok_flag =0;
  1313  014D  1120               	bcf	32,2
  1314                           
  1315                           ;IAP_FW.C: 239: unsigned char i ;
  1316                           ;IAP_FW.C: 240: unsigned int iap_addr;
  1317                           ;IAP_FW.C: 241: unsigned int CRC16_dat1;
  1318                           ;IAP_FW.C: 242: UR1RXNE &= ~(0X1<<0 );
  1319  014E  0029               	movlb	9	; select bank9
  1320  014F  100E               	bcf	14,0	;volatile
  1321                           
  1322                           ;IAP_FW.C: 243: EECON1 = (0x1<<7 )|(0X1<<2 );
  1323  0150  3084               	movlw	132
  1324  0151  0023               	movlb	3	; select bank3
  1325  0152  0095               	movwf	21	;volsfr
  1326                           
  1327                           ;IAP_FW.C: 248: switch(iap_databuf[0])
  1328  0153  29F6               	goto	i1l7600
  1329  0154                     i1l2218:	
  1330                           ;IAP_FW.C: 249: {
  1331                           ;IAP_FW.C: 250: case 0X05:
  1332                           
  1333                           
  1334                           ;IAP_FW.C: 251: for(i=1;i<133;i++)
  1335  0154  0020               	movlb	0	; select bank0
  1336  0155  01AD               	clrf	user_isr@i
  1337  0156  0AAD               	incf	user_isr@i,f
  1338  0157                     i1l7606:	
  1339                           
  1340                           ;IAP_FW.C: 252: {
  1341                           ;IAP_FW.C: 253: iap_databuf[i]=iap_usart_rec();
  1342  0157  2254  3181         	fcall	_iap_usart_rec
  1343  0159  0020               	movlb	0	; select bank0
  1344  015A  00A5               	movwf	??_user_isr
  1345  015B  082D               	movf	user_isr@i,w
  1346  015C  3E6B               	addlw	107
  1347  015D  00A6               	movwf	??_user_isr+1
  1348  015E  3023               	movlw	35
  1349  015F  01A7               	clrf	??_user_isr+2
  1350  0160  3DA7               	addwfc	??_user_isr+2,f
  1351  0161  0826               	movf	??_user_isr+1,w
  1352  0162  0086               	movwf	6
  1353  0163  0827               	movf	??_user_isr+2,w
  1354  0164  0087               	movwf	7
  1355  0165  0825               	movf	??_user_isr,w
  1356  0166  0081               	movwf	1
  1357  0167  3085               	movlw	133
  1358  0168  0AAD               	incf	user_isr@i,f
  1359  0169  022D               	subwf	user_isr@i,w
  1360  016A  1C03               	skipc
  1361  016B  2957               	goto	i1l7606
  1362                           
  1363                           ;IAP_FW.C: 254: }
  1364                           ;IAP_FW.C: 255: CRC16_dat1 = iap_databuf[131];
  1365  016C  30EE               	movlw	238
  1366  016D  0086               	movwf	6
  1367  016E  3023               	movlw	35
  1368  016F  0087               	movwf	7
  1369  0170  0801               	movf	1,w
  1370  0171  00A9               	movwf	user_isr@CRC16_dat1
  1371  0172  30EF               	movlw	239
  1372  0173  01AA               	clrf	user_isr@CRC16_dat1+1
  1373                           
  1374                           ;IAP_FW.C: 256: CRC16_dat1 = ((CRC16_dat1<<8)+iap_databuf[132]);
  1375  0174  0086               	movwf	6
  1376  0175  0829               	movf	user_isr@CRC16_dat1,w
  1377  0176  00A5               	movwf	??_user_isr
  1378  0177  0801               	movf	1,w
  1379  0178  00A9               	movwf	user_isr@CRC16_dat1
  1380  0179  0825               	movf	??_user_isr,w
  1381  017A  00AA               	movwf	user_isr@CRC16_dat1+1
  1382                           
  1383                           ;IAP_FW.C: 257: CRC_16 = 0;
  1384  017B  01A3               	clrf	35
  1385  017C  01A4               	clrf	36
  1386                           
  1387                           ;IAP_FW.C: 258: for(i=0;i<131;i++)
  1388  017D  01AD               	clrf	user_isr@i
  1389  017E                     i1l7622:	
  1390                           
  1391                           ;IAP_FW.C: 259: {
  1392                           ;IAP_FW.C: 260: CRC16_CCITT(iap_databuf[i]);
  1393  017E  082D               	movf	user_isr@i,w
  1394  017F  3E6B               	addlw	107
  1395  0180  0086               	movwf	6
  1396  0181  3023               	movlw	35
  1397  0182  0187               	clrf	7
  1398  0183  3D87               	addwfc	7,f
  1399  0184  0801               	movf	1,w
  1400  0185  3180  20F6  3181   	fcall	i1_CRC16_CCITT
  1401  0188  3083               	movlw	131
  1402  0189  0AAD               	incf	user_isr@i,f
  1403  018A  022D               	subwf	user_isr@i,w
  1404  018B  1C03               	skipc
  1405  018C  297E               	goto	i1l7622
  1406                           
  1407                           ;IAP_FW.C: 261: }
  1408                           ;IAP_FW.C: 262: if(CRC16_dat1 !=CRC_16)
  1409  018D  0824               	movf	36,w
  1410  018E  062A               	xorwf	user_isr@CRC16_dat1+1,w
  1411  018F  1D03               	skipz
  1412  0190  2993               	goto	u85_25
  1413  0191  0823               	movf	35,w
  1414  0192  0629               	xorwf	user_isr@CRC16_dat1,w
  1415  0193                     u85_25:	
  1416  0193  1903               	skipnz
  1417  0194  2997               	goto	i1l7632
  1418  0195  0001               	reset	;# 
  1419                           
  1420                           ;IAP_FW.C: 265: break;
  1421  0196  29F6               	goto	i1l7600
  1422  0197                     i1l7632:	
  1423                           
  1424                           ;IAP_FW.C: 266: }
  1425                           ;IAP_FW.C: 267: iap_addr = iap_databuf[1];
  1426                           
  1427                           ;IAP_FW.C: 268: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1428  0197  22A6  3181         	fcall	PL4	;call to abstracted procedure
  1429                           
  1430                           ;IAP_FW.C: 269: if(iap_addr < 0X400)
  1431  0199  3004               	movlw	4
  1432  019A  022C               	subwf	user_isr@iap_addr+1,w
  1433  019B  3000               	movlw	0
  1434  019C  1903               	skipnz
  1435  019D  022B               	subwf	user_isr@iap_addr,w
  1436  019E  1803               	skipnc
  1437  019F  29A2               	goto	i1l7638
  1438  01A0  0001               	reset	;# 
  1439                           
  1440                           ;IAP_FW.C: 272: break;
  1441  01A1  29F6               	goto	i1l7600
  1442  01A2                     i1l7638:	
  1443                           
  1444                           ;IAP_FW.C: 273: }
  1445                           ;IAP_FW.C: 274: if(data_check_erase_or_not(iap_addr,1))
  1446  01A2  22D1  3181         	fcall	PL10	;call to abstracted procedure
  1447  01A4  0AF4               	incf	data_check_erase_or_not@mode,f
  1448  01A5  221B  3181         	fcall	_data_check_erase_or_not
  1449  01A7  3A00               	xorlw	0
  1450  01A8  1903               	skipnz
  1451  01A9  29B6               	goto	i1l7644
  1452  01AA                     i1l7640:	
  1453                           
  1454                           ;IAP_FW.C: 275: {
  1455                           ;IAP_FW.C: 276: if(iap_addr == (0x2800-0x40))
  1456  01AA  30C0               	movlw	192
  1457  01AB  0020               	movlb	0	; select bank0
  1458  01AC  062B               	xorwf	user_isr@iap_addr,w
  1459  01AD  3027               	movlw	39
  1460  01AE  1903               	skipnz
  1461  01AF  062C               	xorwf	user_isr@iap_addr+1,w
  1462  01B0  1D03               	btfss	3,2
  1463  01B1  29F6               	goto	i1l7600
  1464                           
  1465                           ;IAP_FW.C: 277: {
  1466                           ;IAP_FW.C: 278: Eeprom_Write_Crc();
  1467  01B2  3180  20C1  3181   	fcall	_Eeprom_Write_Crc
  1468  01B5  29F6               	goto	i1l7600
  1469  01B6                     i1l7644:	
  1470                           
  1471                           ;IAP_FW.C: 282: else
  1472                           ;IAP_FW.C: 283: {
  1473                           ;IAP_FW.C: 284: if(data_check_erase_or_not(iap_addr,0))
  1474  01B6  0020               	movlb	0	; select bank0
  1475  01B7  22D1  3181         	fcall	PL10	;call to abstracted procedure
  1476  01B9  221B  3181         	fcall	_data_check_erase_or_not
  1477  01BB  3A00               	xorlw	0
  1478  01BC  1903               	skipnz
  1479  01BD  29CC               	goto	i1l7666
  1480                           
  1481                           ;IAP_FW.C: 285: {
  1482                           ;IAP_FW.C: 286: for(i=0;i<128;i=i+2)
  1483  01BE  0020               	movlb	0	; select bank0
  1484  01BF  01AD               	clrf	user_isr@i
  1485  01C0                     i1l7652:	
  1486                           
  1487                           ;IAP_FW.C: 287: {
  1488                           ;IAP_FW.C: 288: EEADRH = iap_addr>>8;
  1489  01C0  082C               	movf	user_isr@iap_addr+1,w
  1490  01C1  0023               	movlb	3	; select bank3
  1491  01C2  0092               	movwf	18	;volatile
  1492                           
  1493                           ;IAP_FW.C: 289: EEADRL = iap_addr>>0;
  1494                           
  1495                           ;IAP_FW.C: 290: EEDATH = iap_databuf[i+3];
  1496                           
  1497                           ;IAP_FW.C: 291: EEDATL = iap_databuf[i+4];
  1498  01C3  227F  3181         	fcall	PL2	;call to abstracted procedure
  1499                           
  1500                           ;IAP_FW.C: 292: iap_mem_prog();
  1501  01C5  224D  3181         	fcall	_iap_mem_prog
  1502                           
  1503                           ;IAP_FW.C: 293: iap_addr++;
  1504  01C7  22C8  3181         	fcall	PL8	;call to abstracted procedure
  1505  01C9  1803               	btfsc	3,0
  1506  01CA  29E3               	goto	i1l7690
  1507  01CB  29C0               	goto	i1l7652
  1508  01CC                     i1l7666:	
  1509                           
  1510                           ;IAP_FW.C: 296: else
  1511                           ;IAP_FW.C: 297: {
  1512                           ;IAP_FW.C: 298: EEADRH = iap_addr>>8;
  1513  01CC  0020               	movlb	0	; select bank0
  1514  01CD  082C               	movf	user_isr@iap_addr+1,w
  1515  01CE  0023               	movlb	3	; select bank3
  1516  01CF  0092               	movwf	18	;volatile
  1517                           
  1518                           ;IAP_FW.C: 299: EEADRL = iap_addr>>0;
  1519  01D0  0020               	movlb	0	; select bank0
  1520  01D1  082B               	movf	user_isr@iap_addr,w
  1521  01D2  0023               	movlb	3	; select bank3
  1522  01D3  0091               	movwf	17	;volatile
  1523                           
  1524                           ;IAP_FW.C: 300: iap_mem_erase();
  1525  01D4  22D7  3181         	fcall	_iap_mem_erase
  1526                           
  1527                           ;IAP_FW.C: 301: for(i=0;i<128;i=i+2)
  1528  01D6  0020               	movlb	0	; select bank0
  1529  01D7  01AD               	clrf	user_isr@i
  1530  01D8                     i1l7676:	
  1531                           
  1532                           ;IAP_FW.C: 302: {
  1533                           ;IAP_FW.C: 303: EEADRH = iap_addr>>8;
  1534  01D8  082C               	movf	user_isr@iap_addr+1,w
  1535  01D9  0023               	movlb	3	; select bank3
  1536  01DA  0092               	movwf	18	;volatile
  1537                           
  1538                           ;IAP_FW.C: 304: EEADRL = iap_addr>>0;
  1539                           
  1540                           ;IAP_FW.C: 305: EEDATH = iap_databuf[i+3];
  1541                           
  1542                           ;IAP_FW.C: 306: EEDATL = iap_databuf[i+4];
  1543  01DB  227F  3181         	fcall	PL2	;call to abstracted procedure
  1544                           
  1545                           ;IAP_FW.C: 307: iap_mem_prog();
  1546  01DD  224D  3181         	fcall	_iap_mem_prog
  1547                           
  1548                           ;IAP_FW.C: 308: iap_addr++;
  1549  01DF  22C8  3181         	fcall	PL8	;call to abstracted procedure
  1550  01E1  1C03               	skipc
  1551  01E2  29D8               	goto	i1l7676
  1552  01E3                     i1l7690:	
  1553                           
  1554                           ;IAP_FW.C: 309: }
  1555                           ;IAP_FW.C: 310: }
  1556                           ;IAP_FW.C: 311: iap_addr = iap_databuf[1];
  1557                           
  1558                           ;IAP_FW.C: 312: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1559  01E3  22A6  3181         	fcall	PL4	;call to abstracted procedure
  1560                           
  1561                           ;IAP_FW.C: 313: if(data_check_erase_or_not(iap_addr,1))
  1562  01E5  00F3               	movwf	data_check_erase_or_not@addr+1
  1563  01E6  082B               	movf	user_isr@iap_addr,w
  1564  01E7  00F2               	movwf	data_check_erase_or_not@addr
  1565  01E8  01F4               	clrf	data_check_erase_or_not@mode
  1566  01E9  0AF4               	incf	data_check_erase_or_not@mode,f
  1567  01EA  221B  3181         	fcall	_data_check_erase_or_not
  1568  01EC  3A00               	xorlw	0
  1569  01ED  1D03               	btfss	3,2
  1570  01EE  29AA               	goto	i1l7640
  1571                           
  1572                           ;IAP_FW.C: 314: {
  1573                           ;IAP_FW.C: 315: if(iap_addr == (0x2800-0x40))
  1574  01EF  0001               	reset	;# 
  1575                           
  1576                           ;IAP_FW.C: 324: break;
  1577  01F0  29F6               	goto	i1l7600
  1578  01F1                     i1l2238:	
  1579                           ;IAP_FW.C: 328: case 0X06:
  1580                           
  1581  01F1  0001               	reset	;# 
  1582                           
  1583                           ;IAP_FW.C: 331: break;
  1584  01F2  29F6               	goto	i1l7600
  1585  01F3                     i1l7698:	
  1586                           
  1587                           ;IAP_FW.C: 334: count=0;
  1588  01F3  0020               	movlb	0	; select bank0
  1589  01F4  01A1               	clrf	33
  1590  01F5  0001               	reset	;# 
  1591  01F6                     i1l7600:	
  1592                           ;IAP_FW.C: 336: break;
  1593                           
  1594                           
  1595                           ;IAP_FW.C: 245: {
  1596                           ;IAP_FW.C: 246: iap_databuf[0]=iap_usart_rec();
  1597  01F6  306B               	movlw	107
  1598  01F7  0086               	movwf	6
  1599  01F8  3023               	movlw	35
  1600  01F9  0087               	movwf	7
  1601  01FA  2254  3181         	fcall	_iap_usart_rec
  1602  01FC  3FC0               	movwi [0]fsr1
  1603  01FD  0064               	clrwdt	;# 
  1604  01FE  306B               	movlw	107
  1605  01FF  0086               	movwf	6
  1606  0200  3023               	movlw	35
  1607  0201  0087               	movwf	7
  1608  0202  0801               	movf	1,w
  1609                           
  1610                           ; Switch size 1, requested type "space"
  1611                           ; Number of cases is 2, Range of values is 5 to 6
  1612                           ; switch strategies available:
  1613                           ; Name         Instructions Cycles
  1614                           ; simple_byte            7     4 (average)
  1615                           ; direct_byte           13     9 (fixed)
  1616                           ; jumptable            263     9 (fixed)
  1617                           ;	Chosen strategy is simple_byte
  1618  0203  3A05               	xorlw	5	; case 5
  1619  0204  1903               	skipnz
  1620  0205  2954               	goto	i1l2218
  1621  0206  3A03               	xorlw	3	; case 6
  1622  0207  1903               	skipnz
  1623  0208  29F1               	goto	i1l2238
  1624  0209  29F3               	goto	i1l7698
  1625  020A  29F6               	goto	i1l7600
  1626  020B                     i1l2215:	
  1627                           
  1628                           ;IAP_FW.C: 338: }
  1629                           ;IAP_FW.C: 339: }
  1630                           ;IAP_FW.C: 340: if(iap_err_flag==1)
  1631  020B  1CA0               	btfss	32,1
  1632  020C  0008               	return
  1633                           
  1634                           ;IAP_FW.C: 341: {
  1635                           ;IAP_FW.C: 342: count=0;
  1636  020D  01A1               	clrf	33
  1637                           
  1638                           ;IAP_FW.C: 343: iap_err_flag=0;
  1639  020E  10A0               	bcf	32,1
  1640                           
  1641                           ;IAP_FW.C: 344: UR1RXNEF=1;
  1642  020F  0029               	movlb	9	; select bank9
  1643  0210  1412               	bsf	18,0	;volatile
  1644                           
  1645                           ;IAP_FW.C: 345: UR1DATAL=iap_recdata;
  1646  0211  0020               	movlb	0	; select bank0
  1647  0212  0822               	movf	34,w
  1648  0213  0029               	movlb	9	; select bank9
  1649  0214  008C               	movwf	12	;volatile
  1650                           
  1651                           ;IAP_FW.C: 346: if(read_flag !=1)
  1652  0215  0020               	movlb	0	; select bank0
  1653  0216  1820               	btfsc	32,0
  1654  0217  0008               	return
  1655  0218  2C04               	goto	1028	;# 
  1656  0219                     i1l2185:	
  1657  0219  2C04               	goto	1028	;# 
  1658  021A  0008               	return
  1659  021B                     __end_of_user_isr:	
  1660  021B                     __ptext12:	
  1661 ;; *************** function _data_check_erase_or_not *****************
  1662 ;; Defined at:
  1663 ;;		line 109 in file "IAP_FW.C"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  addr            2    0[COMMON] unsigned int 
  1666 ;;  mode            1    2[COMMON] unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  i               1    9[COMMON] unsigned char 
  1669 ;;  k               1    8[COMMON] unsigned char 
  1670 ;;  j               1    7[COMMON] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      unsigned char 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 1F/0
  1677 ;;		On exit  : 1F/3
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1680 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1681 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;Total ram usage:       10 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    1
  1687 ;; This function calls:
  1688 ;;		i1_iap_mem_rd
  1689 ;; This function is called by:
  1690 ;;		_user_isr
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _data_check_erase_or_not
  1696  021B                     _data_check_erase_or_not:	
  1697                           
  1698                           ;IAP_FW.C: 111: unsigned char i ,j,k;
  1699                           ;IAP_FW.C: 112: for(i=0;i<64;i++)
  1700                           
  1701                           ;incstack = 0
  1702                           ; Regs used in _data_check_erase_or_not: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  1703  021B  01FB               	clrf	data_check_erase_or_not@i
  1704  021C                     i1l7460:	
  1705                           
  1706                           ;IAP_FW.C: 113: {
  1707                           ;IAP_FW.C: 114: EEADRH = addr>>8;
  1708  021C  0873               	movf	data_check_erase_or_not@addr+1,w
  1709  021D  0023               	movlb	3	; select bank3
  1710  021E  0092               	movwf	18	;volatile
  1711                           
  1712                           ;IAP_FW.C: 115: EEADRL = addr>>0;
  1713  021F  0872               	movf	data_check_erase_or_not@addr,w
  1714  0220  0091               	movwf	17	;volatile
  1715                           
  1716                           ;IAP_FW.C: 116: j = iap_databuf[i*2+3];
  1717  0221  087B               	movf	data_check_erase_or_not@i,w
  1718  0222  00F5               	movwf	??_data_check_erase_or_not
  1719  0223  306E               	movlw	110
  1720  0224  22BA  3181         	fcall	PL6	;call to abstracted procedure
  1721  0226  00F9               	movwf	data_check_erase_or_not@j
  1722                           
  1723                           ;IAP_FW.C: 117: k = iap_databuf[i*2+4];
  1724  0227  087B               	movf	data_check_erase_or_not@i,w
  1725  0228  00F5               	movwf	??_data_check_erase_or_not
  1726  0229  306F               	movlw	111
  1727  022A  22BA  3181         	fcall	PL6	;call to abstracted procedure
  1728  022C  00FA               	movwf	data_check_erase_or_not@k
  1729                           
  1730                           ;IAP_FW.C: 118: iap_mem_rd();
  1731  022D  2279  3181         	fcall	i1_iap_mem_rd
  1732                           
  1733                           ;IAP_FW.C: 119: if(mode == 0)
  1734  022F  0874               	movf	data_check_erase_or_not@mode,w
  1735  0230  1D03               	btfss	3,2
  1736  0231  2A3C               	goto	i1l7478
  1737                           
  1738                           ;IAP_FW.C: 120: {
  1739                           ;IAP_FW.C: 121: if(((EEDATH & j) != j) || ((EEDATL & k) != k))
  1740  0232  0879               	movf	data_check_erase_or_not@j,w
  1741  0233  0514               	andwf	20,w	;volatile
  1742  0234  00F5               	movwf	??_data_check_erase_or_not
  1743  0235  0679               	xorwf	data_check_erase_or_not@j,w
  1744  0236  1D03               	skipz
  1745  0237  3400               	retlw	0
  1746  0238  087A               	movf	data_check_erase_or_not@k,w
  1747  0239  0513               	andwf	19,w	;volatile
  1748  023A  00F5               	movwf	??_data_check_erase_or_not
  1749  023B  2A41               	goto	L2
  1750  023C                     i1l7478:	
  1751                           
  1752                           ;IAP_FW.C: 126: else
  1753                           ;IAP_FW.C: 127: {
  1754                           ;IAP_FW.C: 128: if((EEDATH != j) || (EEDATL != k))
  1755  023C  0814               	movf	20,w	;volatile
  1756  023D  0679               	xorwf	data_check_erase_or_not@j,w
  1757  023E  1D03               	skipz
  1758  023F  3400               	retlw	0
  1759  0240  0813               	movf	19,w	;volatile
  1760  0241                     L2:	
  1761  0241  067A               	xorwf	data_check_erase_or_not@k,w
  1762  0242  1D03               	btfss	3,2
  1763                           
  1764                           ;IAP_FW.C: 122: {
  1765                           ;IAP_FW.C: 123: return 0;
  1766  0243  3400               	retlw	0
  1767                           
  1768                           ;IAP_FW.C: 131: }
  1769                           ;IAP_FW.C: 132: }
  1770                           ;IAP_FW.C: 133: addr++;
  1771  0244  0AF2               	incf	data_check_erase_or_not@addr,f
  1772  0245  1903               	skipnz
  1773  0246  0AF3               	incf	data_check_erase_or_not@addr+1,f
  1774  0247  3040               	movlw	64
  1775  0248  0AFB               	incf	data_check_erase_or_not@i,f
  1776  0249  027B               	subwf	data_check_erase_or_not@i,w
  1777  024A  1803               	btfsc	3,0
  1778                           
  1779                           ;IAP_FW.C: 134: }
  1780                           ;IAP_FW.C: 135: return 1;
  1781  024B  3401               	retlw	1
  1782  024C  2A1C               	goto	i1l7460
  1783  024D                     __end_of_data_check_erase_or_not:	
  1784  024D                     __ptext17:	
  1785 ;; *************** function _iap_mem_prog *****************
  1786 ;; Defined at:
  1787 ;;		line 27 in file "MEM_DRV.C"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		status,2, status,0, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 1F/3
  1798 ;;		On exit  : 1F/3
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    1
  1808 ;; This function calls:
  1809 ;;		_Unlock_Flash
  1810 ;; This function is called by:
  1811 ;;		_Eeprom_Write_Crc
  1812 ;;		_user_isr
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _iap_mem_prog
  1818  024D                     _iap_mem_prog:	
  1819  024D                     i1l7366:	
  1820                           ;incstack = 0
  1821                           ; Regs used in _iap_mem_prog: [status,2+status,0+pclath+cstack]
  1822                           
  1823                           
  1824                           ;MEM_DRV.C: 29: EECON1 &=~(0x1<<4 );
  1825  024D  1215               	bcf	21,4	;volsfr
  1826                           
  1827                           ;MEM_DRV.C: 30: Unlock_Flash();
  1828  024E  226F  3181         	fcall	_Unlock_Flash
  1829  0250                     i1l4374:	
  1830                           ;MEM_DRV.C: 31: while(EECON1 & (0x1<<1 ));
  1831                           
  1832  0250  0023               	movlb	3	; select bank3
  1833  0251  1895               	btfsc	21,1	;volsfr
  1834  0252  2A50               	goto	i1l4374
  1835  0253  0008               	return
  1836  0254                     __end_of_iap_mem_prog:	
  1837  0254                     __ptext9:	
  1838 ;; *************** function _iap_usart_rec *****************
  1839 ;; Defined at:
  1840 ;;		line 50 in file "USART_DRV.C"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  a               2    1[COMMON] unsigned int 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      unsigned char 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/3
  1851 ;;		On exit  : 1F/9
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1858 ;;Total ram usage:        2 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    1
  1861 ;; This function calls:
  1862 ;;		_DelayUs
  1863 ;; This function is called by:
  1864 ;;		_user_isr
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _iap_usart_rec
  1870  0254                     _iap_usart_rec:	
  1871                           
  1872                           ;USART_DRV.C: 52: unsigned int a;
  1873                           ;USART_DRV.C: 53: for(a=0;a<47200;a++)
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _iap_usart_rec: [wreg+status,2+status,0+pclath+cstack]
  1877  0254  01F3               	clrf	iap_usart_rec@a
  1878  0255  01F4               	clrf	iap_usart_rec@a+1
  1879  0256                     i1l7500:	
  1880                           
  1881                           ;USART_DRV.C: 54: {
  1882                           ;USART_DRV.C: 55: DelayUs();
  1883  0256  22DE  3181         	fcall	_DelayUs
  1884                           
  1885                           ;USART_DRV.C: 56: if(((0x1 << 0 ) & UR1LSR))
  1886  0258  0029               	movlb	9	; select bank9
  1887  0259  1C12               	btfss	18,0	;volatile
  1888  025A  2A64               	goto	i1l7518
  1889                           
  1890                           ;USART_DRV.C: 57: {
  1891                           ;USART_DRV.C: 58: if((UR1LSR & (0x1<<2 )) || (UR1LSR & (0x1<<3 )))
  1892  025B  1912               	btfsc	18,2	;volatile
  1893  025C  2A5F               	goto	i1l7508
  1894  025D  1D92               	btfss	18,3	;volatile
  1895  025E  2A62               	goto	i1l7514
  1896  025F                     i1l7508:	
  1897                           
  1898                           ;USART_DRV.C: 59: {
  1899                           ;USART_DRV.C: 60: UR1LSR = ~((0x1<<2 )|(0x1<<3 ));
  1900  025F  30F3               	movlw	243
  1901  0260  0092               	movwf	18	;volatile
  1902                           
  1903                           ;USART_DRV.C: 61: return 0xff;
  1904  0261  34FF               	retlw	255
  1905  0262                     i1l7514:	
  1906                           
  1907                           ;USART_DRV.C: 63: else
  1908                           ;USART_DRV.C: 64: {
  1909                           ;USART_DRV.C: 65: return UR1DATAL;
  1910  0262  080C               	movf	12,w	;volatile
  1911  0263  0008               	return
  1912  0264                     i1l7518:	
  1913  0264  0AF3               	incf	iap_usart_rec@a,f
  1914  0265  1903               	skipnz
  1915  0266  0AF4               	incf	iap_usart_rec@a+1,f
  1916  0267  30B8               	movlw	184
  1917  0268  0274               	subwf	iap_usart_rec@a+1,w
  1918  0269  3060               	movlw	96
  1919  026A  1903               	skipnz
  1920  026B  0273               	subwf	iap_usart_rec@a,w
  1921  026C  1803               	btfsc	3,0
  1922                           
  1923                           ;USART_DRV.C: 66: }
  1924                           ;USART_DRV.C: 67: }
  1925                           ;USART_DRV.C: 68: }
  1926                           ;USART_DRV.C: 69: return 0xff;
  1927  026D  34FF               	retlw	255
  1928  026E  2A56               	goto	i1l7500
  1929  026F                     __end_of_iap_usart_rec:	
  1930  026F                     __ptext18:	
  1931 ;; *************** function _Unlock_Flash *****************
  1932 ;; Defined at:
  1933 ;;		line 4 in file "MEM_DRV.C"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		None
  1942 ;; Tracked objects:
  1943 ;;		On entry : 1F/3
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_iap_mem_erase
  1957 ;;		_iap_mem_prog
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function _Unlock_Flash
  1963  026F                     _Unlock_Flash:	
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _Unlock_Flash: []
  1967  026F  3003               	movlw	3	;# 
  1968  0270  0088               	movwf	8	;# 
  1969  0271  3055               	movlw	85	;# 
  1970  0272  0096               	movwf	22	;# 
  1971  0273  30AA               	movlw	170	;# 
  1972  0274  0096               	movwf	22	;# 
  1973  0275  1495               	bsf	21,1	;# 
  1974  0276  0000               	nop	;# 
  1975  0277  0000               	nop	;# 
  1976  0278  0008               	return
  1977  0279                     __end_of_Unlock_Flash:	
  1978  007E                     btemp	set	126	;btemp
  1979  007E                     int$flags	set	126
  1980  007E                     wtemp0	set	126
  1981  0279                     __ptext15:	
  1982 ;; *************** function i1_iap_mem_rd *****************
  1983 ;; Defined at:
  1984 ;;		line 34 in file "MEM_DRV.C"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;		None
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		None
  1993 ;; Tracked objects:
  1994 ;;		On entry : 1F/3
  1995 ;;		On exit  : 1F/3
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;Total ram usage:        0 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_data_check_erase_or_not
  2008 ;;		i1_All_Page_Read_CRC
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function i1_iap_mem_rd
  2014  0279                     i1_iap_mem_rd:	
  2015                           
  2016                           ;MEM_DRV.C: 36: EECON1 |=(0x1<<0 );
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in i1_iap_mem_rd: []
  2020  0279  1415               	bsf	21,0	;volsfr
  2021  027A  0000               	nop	;# 
  2022  027B                     i1l4380:	
  2023                           ;MEM_DRV.C: 38: while(EECON1 & (0x1<<0 ));
  2024                           
  2025  027B  0023               	movlb	3	; select bank3
  2026  027C  1815               	btfsc	21,0	;volsfr
  2027  027D  2A7B               	goto	i1l4380
  2028  027E  0008               	return
  2029  027F                     __end_ofi1_iap_mem_rd:	
  2030  027F                     PL2:	
  2031  027F  0020               	movlb	0	; select bank0
  2032  0280  082B               	movf	user_isr@iap_addr,w
  2033  0281  0023               	movlb	3	; select bank3
  2034  0282  0091               	movwf	17	;volatile
  2035  0283  0020               	movlb	0	; select bank0
  2036  0284  082D               	movf	user_isr@i,w
  2037  0285  00A5               	movwf	??_user_isr
  2038  0286  306E               	movlw	110
  2039  0287  01A6               	clrf	??_user_isr+1
  2040  0288  00A7               	movwf	??_user_isr+2
  2041  0289  3023               	movlw	35
  2042  028A  00A8               	movwf	??_user_isr+3
  2043  028B  0825               	movf	??_user_isr,w
  2044  028C  0727               	addwf	??_user_isr+2,w
  2045  028D  0086               	movwf	6
  2046  028E  0826               	movf	??_user_isr+1,w
  2047  028F  3D28               	addwfc	??_user_isr+3,w
  2048  0290  0087               	movwf	7
  2049  0291  0801               	movf	1,w
  2050  0292  0023               	movlb	3	; select bank3
  2051  0293  0094               	movwf	20	;volatile
  2052  0294  0020               	movlb	0	; select bank0
  2053  0295  082D               	movf	user_isr@i,w
  2054  0296  00A5               	movwf	??_user_isr
  2055  0297  306F               	movlw	111
  2056  0298  01A6               	clrf	??_user_isr+1
  2057  0299  00A7               	movwf	??_user_isr+2
  2058  029A  3023               	movlw	35
  2059  029B  00A8               	movwf	??_user_isr+3
  2060  029C  0825               	movf	??_user_isr,w
  2061  029D  0727               	addwf	??_user_isr+2,w
  2062  029E  0086               	movwf	6
  2063  029F  0826               	movf	??_user_isr+1,w
  2064  02A0  3D28               	addwfc	??_user_isr+3,w
  2065  02A1  0087               	movwf	7
  2066  02A2  0801               	movf	1,w
  2067  02A3  0023               	movlb	3	; select bank3
  2068  02A4  0093               	movwf	19	;volatile
  2069  02A5  0008               	return
  2070  02A6                     __end_ofPL2:	
  2071  02A6                     PL4:	
  2072  02A6  306B               	movlw	107
  2073  02A7  0086               	movwf	6
  2074  02A8  3023               	movlw	35
  2075  02A9  0087               	movwf	7
  2076  02AA  3141               	addfsr 1,1
  2077  02AB  0801               	movf	1,w
  2078  02AC  00AB               	movwf	user_isr@iap_addr
  2079  02AD  306B               	movlw	107
  2080  02AE  01AC               	clrf	user_isr@iap_addr+1
  2081  02AF  0086               	movwf	6
  2082  02B0  3023               	movlw	35
  2083  02B1  0087               	movwf	7
  2084  02B2  3142               	addfsr 1,2
  2085  02B3  082B               	movf	user_isr@iap_addr,w
  2086  02B4  00A5               	movwf	??_user_isr
  2087  02B5  0801               	movf	1,w
  2088  02B6  00AB               	movwf	user_isr@iap_addr
  2089  02B7  0825               	movf	??_user_isr,w
  2090  02B8  00AC               	movwf	user_isr@iap_addr+1
  2091  02B9  0008               	return
  2092  02BA                     __end_ofPL4:	
  2093  02BA                     PL6:	
  2094  02BA  01F6               	clrf	??_data_check_erase_or_not+1
  2095  02BB  35F5               	lslf	??_data_check_erase_or_not,f
  2096  02BC  0DF6               	rlf	??_data_check_erase_or_not+1,f
  2097  02BD  00F7               	movwf	??_data_check_erase_or_not+2
  2098  02BE  3023               	movlw	35
  2099  02BF  00F8               	movwf	??_data_check_erase_or_not+3
  2100  02C0  0875               	movf	??_data_check_erase_or_not,w
  2101  02C1  0777               	addwf	??_data_check_erase_or_not+2,w
  2102  02C2  0086               	movwf	6
  2103  02C3  0876               	movf	??_data_check_erase_or_not+1,w
  2104  02C4  3D78               	addwfc	??_data_check_erase_or_not+3,w
  2105  02C5  0087               	movwf	7
  2106  02C6  0801               	movf	1,w
  2107  02C7  0008               	return
  2108  02C8                     __end_ofPL6:	
  2109  02C8                     PL8:	
  2110  02C8  0020               	movlb	0	; select bank0
  2111  02C9  0AAB               	incf	user_isr@iap_addr,f
  2112  02CA  1903               	skipnz
  2113  02CB  0AAC               	incf	user_isr@iap_addr+1,f
  2114  02CC  3080               	movlw	128
  2115  02CD  0AAD               	incf	user_isr@i,f
  2116  02CE  0AAD               	incf	user_isr@i,f
  2117  02CF  022D               	subwf	user_isr@i,w
  2118  02D0  0008               	return
  2119  02D1                     __end_ofPL8:	
  2120  02D1                     PL10:	
  2121  02D1  082C               	movf	user_isr@iap_addr+1,w
  2122  02D2  00F3               	movwf	data_check_erase_or_not@addr+1
  2123  02D3  082B               	movf	user_isr@iap_addr,w
  2124  02D4  00F2               	movwf	data_check_erase_or_not@addr
  2125  02D5  01F4               	clrf	data_check_erase_or_not@mode
  2126  02D6  0008               	return
  2127  02D7                     __end_ofPL10:	
  2128  02D7                     __ptext11:	
  2129 ;; *************** function _iap_mem_erase *****************
  2130 ;; Defined at:
  2131 ;;		line 19 in file "MEM_DRV.C"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		status,2, status,0, pclath, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 1F/3
  2142 ;;		On exit  : 1F/3
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    1
  2152 ;; This function calls:
  2153 ;;		_Unlock_Flash
  2154 ;; This function is called by:
  2155 ;;		_user_isr
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _iap_mem_erase
  2161  02D7                     _iap_mem_erase:	
  2162                           
  2163                           ;MEM_DRV.C: 21: EECON1 |=(0x1<<4 );
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _iap_mem_erase: [status,2+status,0+pclath+cstack]
  2167  02D7  1615               	bsf	21,4	;volsfr
  2168                           
  2169                           ;MEM_DRV.C: 22: Unlock_Flash();
  2170  02D8  226F  3181         	fcall	_Unlock_Flash
  2171  02DA                     i1l4368:	
  2172                           ;MEM_DRV.C: 23: while(EECON1 & (0x1<<1 ));
  2173                           
  2174  02DA  0023               	movlb	3	; select bank3
  2175  02DB  1895               	btfsc	21,1	;volsfr
  2176  02DC  2ADA               	goto	i1l4368
  2177  02DD  0008               	return
  2178  02DE                     __end_of_iap_mem_erase:	
  2179  02DE                     __ptext10:	
  2180 ;; *************** function _DelayUs *****************
  2181 ;; Defined at:
  2182 ;;		line 36 in file "USART_DRV.C"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  a               1    0[COMMON] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/3
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;Total ram usage:        1 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_iap_usart_rec
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function _DelayUs
  2211  02DE                     _DelayUs:	
  2212                           
  2213                           ;USART_DRV.C: 38: unsigned char a;
  2214                           ;USART_DRV.C: 39: for(a=0;a<10;a++)
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
  2218  02DE  01F2               	clrf	DelayUs@a
  2219  02DF                     i1l6500:	
  2220                           
  2221                           ;USART_DRV.C: 40: {
  2222                           ;USART_DRV.C: 41: __nop();
  2223  02DF  0000               	nop
  2224  02E0  300A               	movlw	10
  2225  02E1  0AF2               	incf	DelayUs@a,f
  2226  02E2  0272               	subwf	DelayUs@a,w
  2227  02E3  1803               	btfsc	3,0
  2228  02E4  0008               	return
  2229  02E5  2ADF               	goto	i1l6500
  2230  02E6                     __end_of_DelayUs:	
  2231                           
  2232                           	psect	swtext1
  2233  0300                     __pswtext1:	
  2234  0300                     i1S7770:	
  2235  0300  3181  294A         	ljmp	i1l2191
  2236  0302  3181  294A         	ljmp	i1l2191
  2237  0304  3181  294A         	ljmp	i1l2191
  2238  0306  3181  294A         	ljmp	i1l2191
  2239  0308  3181  294A         	ljmp	i1l2191
  2240  030A  3181  294A         	ljmp	i1l2191
  2241  030C  3181  294A         	ljmp	i1l2191
  2242  030E  3181  294A         	ljmp	i1l2191
  2243  0310  3181  2925         	ljmp	i1l7556
  2244  0312  3181  292B         	ljmp	i1l7560
  2245  0314  3181  292D         	ljmp	i1l7564
  2246  0316  3181  292F         	ljmp	i1l7568
  2247  0318  3181  2931         	ljmp	i1l7572
  2248  031A  3181  2933         	ljmp	i1l7576
  2249  031C  3181  2935         	ljmp	i1l7580
  2250  031E  3181  2937         	ljmp	i1l7584


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           12     10      10
    BANK0            75     19      19
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           75      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _user_isr->_data_check_erase_or_not
    _iap_usart_rec->_DelayUs
    _Eeprom_Write_Crc->i1_All_Page_Read_CRC
    i1_All_Page_Read_CRC->i1_CRC16_CCITT

Critical Paths under _main in BANK0

    _main->_Power_On_App_Check
    _Power_On_App_Check->_All_Page_Read_CRC
    _All_Page_Read_CRC->_CRC16_CCITT

Critical Paths under _ISR in BANK0

    _ISR->_user_isr

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     230
                 _Power_On_App_Check
                     _iap_usart_init
 ---------------------------------------------------------------------------------
 (1) _iap_usart_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_On_App_Check                                   2     2      0     230
                                             17 BANK0      2     2      0
                  _All_Page_Read_CRC
                         _EEPROMread
 ---------------------------------------------------------------------------------
 (2) _EEPROMread                                           2     2      0      45
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _All_Page_Read_CRC                                    2     2      0     160
                                             15 BANK0      2     2      0
                        _CRC16_CCITT
                         _iap_mem_rd
 ---------------------------------------------------------------------------------
 (3) _iap_mem_rd                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC16_CCITT                                          6     6      0      68
                                              9 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0    1547
                           _user_isr
 ---------------------------------------------------------------------------------
 (5) _user_isr                                             9     9      0    1547
                                              0 BANK0      9     9      0
                   _Eeprom_Write_Crc
            _data_check_erase_or_not
                      _iap_mem_erase
                       _iap_mem_prog
                      _iap_usart_rec
                      i1_CRC16_CCITT
 ---------------------------------------------------------------------------------
 (6) _iap_usart_rec                                        2     2      0      92
                                              1 COMMON     2     2      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (7) _DelayUs                                              1     1      0      46
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_erase                                        0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (6) _data_check_erase_or_not                             10     7      3     550
                                              0 COMMON    10     7      3
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write_Crc                                     0     0      0     158
                       _iap_mem_prog
                i1_All_Page_Read_CRC
 ---------------------------------------------------------------------------------
 (7) i1_All_Page_Read_CRC                                  2     2      0     158
                                              6 COMMON     2     2      0
                      i1_CRC16_CCITT
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (7) i1_iap_mem_rd                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_CRC16_CCITT                                        6     6      0      68
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_prog                                         0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (7) _Unlock_Flash                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Power_On_App_Check
     _All_Page_Read_CRC
       _CRC16_CCITT
       _iap_mem_rd
     _EEPROMread
   _iap_usart_init

 _ISR (ROOT)
   _user_isr
     _Eeprom_Write_Crc
       _iap_mem_prog
         _Unlock_Flash
       i1_All_Page_Read_CRC
         i1_CRC16_CCITT
         i1_iap_mem_rd
     _data_check_erase_or_not
       i1_iap_mem_rd
     _iap_mem_erase
       _Unlock_Flash
     _iap_mem_prog
       _Unlock_Flash
     _iap_usart_rec
       _DelayUs
     i1_CRC16_CCITT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            C      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               C      A       A       2       83.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            4B      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               4B     13      13       5       25.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              4B      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Nov 16 11:50:42 2021

                               pc 0002                                PL2 027F                                PL4 02A6  
                              PL6 02BA                                PL8 02C8          __end_of_Eeprom_Write_Crc 00D6  
                              _RD 0CA8            __size_ofi1_CRC16_CCITT 001F         __end_of_All_Page_Read_CRC 009C  
                             PL10 02D1                               PL12 0115                               _GIE 005F  
              _Power_On_App_Check 0049                               _ISR 0004                               u705 0061  
                  ??_iap_mem_prog 0072               ?_Power_On_App_Check 0072                              ?_ISR 0072  
                            l2150 00B5                              l2162 0065                              l2147 00A0  
                            l2251 0036                              l4380 00BD                   ??_iap_mem_erase 0072  
                            l7360 00B3                              l7408 0081                              _AFP1 019F  
                            _CFGS 0CAE   __end_of_data_check_erase_or_not 024D                              _PEIE 005E  
            __size_of_CRC16_CCITT 001F                              _flag 0020                              _main 002F  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              start 001F                   __end_of_DelayUs 02E6  
             __size_of_EEPROMread 0013              ??_Power_On_App_Check 0036                             ??_ISR 007C  
           __size_ofi1_iap_mem_rd 0006                             ?_main 0072                             _EEPGD 0CAF  
                           _BSREG 0008                             _CRC_H 0024                             _CRC_L 0023  
    __size_ofi1_All_Page_Read_CRC 0020                             _PCKEN 009A                             u85_25 0193  
                           _W_TMP 0070                 i1CRC16_CCITT@data 0076                             _count 0021  
                 ??_iap_usart_rec 0073                     i1_CRC16_CCITT 00F6                             status 0003  
                           wtemp0 007E                      i1_iap_mem_rd 0279                   __initialization 0021  
                    __end_of_main 0038        __size_of_All_Page_Read_CRC 0022                            ??_main 0038  
                          _EEADRH 0192                            _EEADRL 0191                            i1S7770 0300  
                          _EEDATH 0194                            _EEDATL 0193                            _EECON1 0195  
                  ?i1_CRC16_CCITT 0072                            _CRC_16 0023                            i1l2150 010F  
                          i1l2215 020B                            i1l2218 0154                            i1l2147 00FA  
                          i1l2238 01F1                            i1l2191 014A                            i1l2185 0219  
                          i1l4380 027B                            i1l4374 0250                            i1l4368 02DA  
                          i1l6500 02DF                            i1l7500 0256                            i1l7344 010D  
                          i1l7600 01F6                            i1l7514 0262                            i1l7460 021C  
                          i1l7508 025F                            i1l7366 024D                            i1l7390 00DC  
                          i1l7518 0264                            i1l7622 017E                            i1l7606 0157  
                          i1l7640 01AA                            i1l7632 0197                            i1l7560 012B  
                          i1l7652 01C0                            i1l7644 01B6                            i1l7580 0135  
                          i1l7572 0131                            i1l7564 012D                            i1l7556 0125  
                          i1l7478 023C                            i1l7638 01A2                            i1l7558 0129  
                          i1l7590 013D                            i1l7584 0137                            i1l7576 0133  
                          i1l7568 012F                            i1l7690 01E3                            i1l7666 01CC  
                          i1l7676 01D8                            i1l7698 01F3                         ??_DelayUs 0072  
                          _OSCCON 0099                            _UR1FEF 2493                            _UR1DLL 0494  
                          _UR1LCR 048F                            _UR1MCR 0491                            _UR1LSR 0492  
            __end_of_iap_mem_prog 0254                    iap_usart_rec@a 0073                  ??_iap_usart_init 002E  
              user_isr@CRC16_dat1 0029                      ??_EEPROMread 002E                  __end_of_user_isr 021B  
         __end_of__initialization 002C                    __pcstackCOMMON 0072                __end_of_EEPROMread 007A  
               ?_Eeprom_Write_Crc 0072                        __end_ofPL2 02A6                        __end_ofPL4 02BA  
                      __end_ofPL6 02C8                        __end_ofPL8 02D1                ??_Eeprom_Write_Crc 007A  
                 ??i1_CRC16_CCITT 0072               i1_All_Page_Read_CRC 00D6                        __pmaintext 002F  
        ?_data_check_erase_or_not 0072                        __pintentry 0004              ?i1_All_Page_Read_CRC 0072  
                      _iap_mem_rd 00BB                           _BSR_TMP 0071                           _UR1RXNE 2470  
                   ??_CRC16_CCITT 002E             __size_of_iap_mem_prog 0007                           _DelayUs 02DE  
           __end_of_iap_mem_erase 02DE       __size_of_Power_On_App_Check 001E                  EEPROMread@EEAddr 002E  
                       ?_user_isr 0072                           __ptext0 0000                           __ptext1 0038  
                         __ptext2 0049                           __ptext3 0067                           __ptext4 007A  
                         __ptext5 00BB                           __ptext6 009C                           __ptext8 011A  
                         __ptext9 0254             ??i1_All_Page_Read_CRC 0078          data_check_erase_or_not@i 007B  
        data_check_erase_or_not@j 0079          data_check_erase_or_not@k 007A                      __size_of_ISR 001B  
                    _iap_err_flag 0101                      _iap_mem_prog 024D                      CRC16_CCITT@i 0033  
                         clrloop0 0321              end_of_initialization 002C                  user_isr@iap_addr 002B  
           __end_of_iap_usart_rec 026F               __end_of_CRC16_CCITT 00BB                        ??_user_isr 0025  
                     ?_iap_mem_rd 0072                     ?_Unlock_Flash 0072                   CRC16_CCITT@data 0032  
                  i1CRC16_CCITT@i 0077                       __end_ofPL10 02D7                       __end_ofPL12 011A  
             start_initialization 0021                       __end_of_ISR 001F                    ??_Unlock_Flash 0072  
                     _CRC16_CCITT 009C         __size_of_Eeprom_Write_Crc 0015               __size_of_iap_mem_rd 0006  
                     __pbssBIGRAM 236B      Power_On_App_Check@CRC_Eeprom 0036  __size_of_data_check_erase_or_not 0032  
                       ___latbits 0003                     __pcstackBANK0 0025           __size_of_iap_usart_init 0011  
           __end_ofi1_CRC16_CCITT 0115                          ?_DelayUs 0072                     ?i1_iap_mem_rd 0072  
                       __pswtext1 0300                 __size_of_user_isr 0101                       _iap_databuf 236B  
                       _read_flag 0100                       _iap_ok_flag 0102                       _iap_recdata 0022  
                  ??i1_iap_mem_rd 0072                          DelayUs@a 0072                         clear_ram0 0320  
      __end_of_Power_On_App_Check 0067                          _UR1DATAL 048C       __end_ofi1_All_Page_Read_CRC 00F6  
                        _UR1RXNEF 2490              __end_of_Unlock_Flash 0279                      ??_iap_mem_rd 002E  
          __size_of_iap_mem_erase 0007                  _Eeprom_Write_Crc 00C1                  __size_of_DelayUs 0008  
              __end_of_iap_mem_rd 00C1            __size_of_iap_usart_rec 001B           _data_check_erase_or_not 021B  
                      _EEPROMread 0067                    _iap_usart_init 0038                          __ptext10 02DE  
                        __ptext11 02D7                          __ptext12 021B                          __ptext13 00C1  
                        __ptext14 00D6                          __ptext15 0279                          __ptext16 00F6  
                        __ptext17 024D                          __ptext18 026F                      ?_CRC16_CCITT 0072  
                   __size_of_main 0009                     _iap_mem_erase 02D7            EEPROMread@ReEEPROMread 002F  
                        int$flags 007E         All_Page_Read_CRC@iap_addr 0034                          _user_isr 011A  
            __end_ofi1_iap_mem_rd 027F            __end_of_iap_usart_init 0049       data_check_erase_or_not@addr 0072  
     data_check_erase_or_not@mode 0074                          intlevel1 0000                     _iap_usart_rec 0254  
                  ?_iap_mem_erase 0072                         user_isr@i 002D             __size_of_Unlock_Flash 000A  
       ??_data_check_erase_or_not 0075                 _All_Page_Read_CRC 007A                   ?_iap_usart_init 0072  
                   ?_iap_mem_prog 0072                       ?_EEPROMread 0072                ?_All_Page_Read_CRC 0072  
                    _Unlock_Flash 026F       i1All_Page_Read_CRC@iap_addr 0078                    ?_iap_usart_rec 0072  
             ??_All_Page_Read_CRC 0034  
