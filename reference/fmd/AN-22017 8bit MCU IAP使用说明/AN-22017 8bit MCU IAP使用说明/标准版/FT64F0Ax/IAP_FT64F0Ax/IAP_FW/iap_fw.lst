

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Nov 16 11:47:15 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F0AX
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	text8,local,class=CODE,merge=1,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x620,48
    14                           	dabs	1,0x5A0,80
    15                           	dabs	1,0x56B,5
    16                           	dabs	1,0x24,1,_CRC_H
    17                           	dabs	1,0x23,1,_CRC_L
    18                           	dabs	1,0x103,0,_uart_rxnef
    19                           	dabs	1,0x20,1
    20                           	dabs	1,0x102,0,_iap_ok_flag
    21                           	dabs	1,0x20,1
    22                           	dabs	1,0x101,0,_iap_err_flag
    23                           	dabs	1,0x20,1
    24                           	dabs	1,0x100,0,_read_flag
    25                           	dabs	1,0x20,1
    26                           	dabs	1,0x71,1,_BSR_TMP
    27                           	dabs	1,0x70,1,_W_TMP
    28                           	dabs	1,0x23,2,_CRC_16
    29                           	dabs	1,0x22,1,_iap_recdata
    30                           	dabs	1,0x21,1,_count
    31                           	dabs	1,0x20,1,_flag
    32                           	dabs	1,0x236B,0,_iap_databuf
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 
    37                           ; 
    38                           ; SFR Addresses
    39  0000                     	;_iap_databuf
    40                           
    41                           	psect	text0
    42  0000                     __ptext0:		;_read_flag
    43  0008                     _BSREG	set	8
    44  005F                     _GIE	set	95
    45  005E                     _PEIE	set	94
    46  009A                     _PCKEN	set	154
    47  0099                     _OSCCON	set	153
    48  008D                     _TRISB	set	141
    49  019F                     _AFP1	set	415
    50  019E                     _AFP0	set	414
    51  0195                     _EECON1	set	405
    52  0194                     _EEDATH	set	404
    53  0193                     _EEDATL	set	403
    54  0192                     _EEADRH	set	402
    55  0191                     _EEADRL	set	401
    56  0CAF                     _EEPGD	set	3247
    57  0CAE                     _CFGS	set	3246
    58  0CA8                     _RD	set	3240
    59  049C                     _UR1TC	set	1180
    60  0494                     _UR1DLL	set	1172
    61  0492                     _UR1LSR	set	1170
    62  0491                     _UR1MCR	set	1169
    63  048F                     _UR1LCR	set	1167
    64  048C                     _UR1DATAL	set	1164
    65  2493                     _UR1FEF	set	9363
    66  2490                     _UR1RXNEF	set	9360
    67  2470                     _UR1RXNE	set	9328
    68                           
    69                           	psect	cinit
    70  0021                     start_initialization:	
    71                           ; #config settings
    72                           
    73  0021                     __initialization:		;BIGRAM
    74                           
    75                           ; Clear objects allocated to BIGRAM
    76  0021  306B               	movlw	107
    77  0022  0084               	movwf	4
    78  0023  3023               	movlw	35
    79  0024  0085               	movwf	5
    80  0025  3085               	movlw	133
    81  0026  00FE               	movwf	126
    82  0027  3000               	movlw	0
    83  0028  01FF               	clrf	127
    84  0029  3182  22FB  3180   	fcall	clear_ram0
    85  002C                     end_of_initialization:	
    86                           ;End of C runtime variable initialization code
    87                           
    88  002C                     __end_of__initialization:	
    89  002C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    90  002D  0020               	movlb	0
    91  002E  282F               	ljmp	_main	;jump to C main() function
    92  002F                     __pmaintext:	
    93                           ; 1 bytes @ 0x11
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 343 in file "IAP_FW.C"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, status,0, pclath, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : B1F/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   117 ;;Total ram usage:        0 bytes
   118 ;; Hardware stack levels required when called:    8
   119 ;; This function calls:
   120 ;;		_Power_On_App_Check
   121 ;;		_iap_usart_init
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           
   128                           ;psect for function _main
   129  002F                     _main:	
   130                           
   131                           ;IAP_FW.C: 345: iap_usart_init();
   132                           
   133                           ;incstack = 0
   134                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   135  002F  2038  3180         	fcall	_iap_usart_init
   136                           
   137                           ;IAP_FW.C: 346: Power_On_App_Check();
   138  0031  204C               	fcall	_Power_On_App_Check
   139                           
   140                           ;IAP_FW.C: 348: GIE=1;
   141  0032  178B               	bsf	11,7	;volatile
   142                           
   143                           ;IAP_FW.C: 349: PEIE=1;
   144  0033  170B               	bsf	11,6	;volatile
   145                           
   146                           ;IAP_FW.C: 351: if(read_flag !=1)
   147  0034  1C20               	btfss	32,0
   148  0035  2C00               	goto	1024	;# 
   149  0036                     l2022:	
   150                           ;IAP_FW.C: 354: }
   151                           ;IAP_FW.C: 355: while(1)
   152                           
   153  0036  0064               	clrwdt	;# 
   154  0037  2836               	goto	l2022
   155  0038                     __end_of_main:	
   156  0038                     __ptext1:	
   157 ;; *************** function _iap_usart_init *****************
   158 ;; Defined at:
   159 ;;		line 4 in file "USART_DRV.C"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg
   168 ;; Tracked objects:
   169 ;;		On entry : B1F/0
   170 ;;		On exit  : B1F/9
   171 ;;		Unchanged: B00/0
   172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   177 ;;Total ram usage:        0 bytes
   178 ;; Hardware stack levels used:    1
   179 ;; Hardware stack levels required when called:    5
   180 ;; This function calls:
   181 ;;		Nothing
   182 ;; This function is called by:
   183 ;;		_main
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           
   188                           ;psect for function _iap_usart_init
   189  0038                     _iap_usart_init:	
   190                           
   191                           ;USART_DRV.C: 7: PCKEN = (0X1<<5 );
   192                           
   193                           ;incstack = 0
   194                           ; Regs used in _iap_usart_init: [wreg]
   195  0038  3020               	movlw	32
   196  0039  0021               	movlb	1	; select bank1
   197  003A  009A               	movwf	26	;volatile
   198                           
   199                           ;USART_DRV.C: 8: OSCCON = 0B01110001;
   200  003B  3071               	movlw	113
   201  003C  0099               	movwf	25	;volatile
   202                           
   203                           ;USART_DRV.C: 10: AFP0 = 0B01000000;
   204  003D  3040               	movlw	64
   205  003E  0023               	movlb	3	; select bank3
   206  003F  009E               	movwf	30	;volatile
   207                           
   208                           ;USART_DRV.C: 11: AFP1 = 0B01000000;
   209  0040  009F               	movwf	31	;volatile
   210                           
   211                           ;USART_DRV.C: 13: TRISB &= ~(0X1<<6 );
   212  0041  0021               	movlb	1	; select bank1
   213  0042  130D               	bcf	13,6	;volatile
   214                           
   215                           ;USART_DRV.C: 17: UR1DLL=9;
   216  0043  3009               	movlw	9
   217  0044  0029               	movlb	9	; select bank9
   218  0045  0094               	movwf	20	;volatile
   219                           
   220                           ;USART_DRV.C: 20: UR1LCR=(0x1 );
   221  0046  3001               	movlw	1
   222  0047  008F               	movwf	15	;volatile
   223                           
   224                           ;USART_DRV.C: 22: UR1MCR=(0X1<<4 )|(0x1<<3 );
   225  0048  3018               	movlw	24
   226  0049  0091               	movwf	17	;volatile
   227                           
   228                           ;USART_DRV.C: 24: UR1RXNE |= (0X1<<0 );
   229  004A  140E               	bsf	14,0	;volatile
   230  004B  0008               	return
   231  004C                     __end_of_iap_usart_init:	
   232  004C                     __ptext2:	
   233 ;; *************** function _Power_On_App_Check *****************
   234 ;; Defined at:
   235 ;;		line 88 in file "IAP_FW.C"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;  CRC_Eeprom      2   15[BANK0 ] unsigned int 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B1F/9
   246 ;;		On exit  : 1F/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   250 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   252 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   253 ;;Total ram usage:        2 bytes
   254 ;; Hardware stack levels used:    1
   255 ;; Hardware stack levels required when called:    7
   256 ;; This function calls:
   257 ;;		_All_Page_Read_CRC
   258 ;;		_EEPROMread
   259 ;; This function is called by:
   260 ;;		_main
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           
   265                           ;psect for function _Power_On_App_Check
   266  004C                     _Power_On_App_Check:	
   267                           
   268                           ;IAP_FW.C: 90: unsigned int CRC_Eeprom;
   269                           ;IAP_FW.C: 92: count=0;
   270                           
   271                           ;incstack = 0
   272                           ; Regs used in _Power_On_App_Check: [wreg+status,2+status,0+pclath+cstack]
   273  004C  0020               	movlb	0	; select bank0
   274  004D  3000               	movlw	0
   275  004E  01A1               	clrf	33
   276                           
   277                           ;IAP_FW.C: 93: flag=0;
   278  004F  01A0               	clrf	32
   279                           
   280                           ;IAP_FW.C: 95: CRC_Eeprom=EEPROMread(0);
   281  0050  2068  3180         	fcall	_EEPROMread
   282  0052  00B4               	movwf	Power_On_App_Check@CRC_Eeprom
   283  0053  01B5               	clrf	Power_On_App_Check@CRC_Eeprom+1
   284                           
   285                           ;IAP_FW.C: 96: CRC_Eeprom= CRC_Eeprom << 8;
   286  0054  00B5               	movwf	Power_On_App_Check@CRC_Eeprom+1
   287  0055  3001               	movlw	1
   288  0056  01B4               	clrf	Power_On_App_Check@CRC_Eeprom
   289                           
   290                           ;IAP_FW.C: 97: CRC_Eeprom= CRC_Eeprom + EEPROMread(1);
   291  0057  2068  3180         	fcall	_EEPROMread
   292  0059  07B4               	addwf	Power_On_App_Check@CRC_Eeprom,f
   293  005A  1803               	skipnc
   294  005B  0AB5               	incf	Power_On_App_Check@CRC_Eeprom+1,f
   295                           
   296                           ;IAP_FW.C: 99: All_Page_Read_CRC();
   297  005C  207B  3180         	fcall	_All_Page_Read_CRC
   298                           
   299                           ;IAP_FW.C: 100: read_flag=1;
   300  005E  1420               	bsf	32,0
   301                           
   302                           ;IAP_FW.C: 101: if(CRC_Eeprom == CRC_16)
   303  005F  0824               	movf	36,w
   304  0060  0635               	xorwf	Power_On_App_Check@CRC_Eeprom+1,w
   305  0061  1D03               	skipz
   306  0062  2865               	goto	u755
   307  0063  0823               	movf	35,w
   308  0064  0634               	xorwf	Power_On_App_Check@CRC_Eeprom,w
   309  0065                     u755:	
   310  0065  1903               	btfsc	3,2
   311                           
   312                           ;IAP_FW.C: 102: {
   313                           ;IAP_FW.C: 103: read_flag=0;
   314  0066  1020               	bcf	32,0
   315  0067  0008               	return
   316  0068                     __end_of_Power_On_App_Check:	
   317  0068                     __ptext3:	
   318 ;; *************** function _EEPROMread *****************
   319 ;; Defined at:
   320 ;;		line 48 in file "MEM_DRV.C"
   321 ;; Parameters:    Size  Location     Type
   322 ;;  EEAddr          1    wreg     unsigned char 
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  EEAddr          1    7[BANK0 ] unsigned char 
   325 ;;  ReEEPROMread    1    8[BANK0 ] unsigned char 
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      unsigned char 
   328 ;; Registers used:
   329 ;;		wreg
   330 ;; Tracked objects:
   331 ;;		On entry : 1F/0
   332 ;;		On exit  : 1F/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   336 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   338 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   339 ;;Total ram usage:        2 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; Hardware stack levels required when called:    5
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		_Power_On_App_Check
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           
   350                           ;psect for function _EEPROMread
   351  0068                     _EEPROMread:	
   352                           
   353                           ;incstack = 0
   354                           ; Regs used in _EEPROMread: [wreg]
   355                           ;EEPROMread@EEAddr stored from wreg
   356  0068  00AC               	movwf	EEPROMread@EEAddr
   357                           
   358                           ;MEM_DRV.C: 50: unsigned char ReEEPROMread;
   359                           ;MEM_DRV.C: 52: EEADRL = EEAddr;
   360  0069  0023               	movlb	3	; select bank3
   361  006A  0091               	movwf	17	;volatile
   362                           
   363                           ;MEM_DRV.C: 54: EEPGD=0;
   364  006B  1395               	bcf	21,7	;volsfr
   365                           
   366                           ;MEM_DRV.C: 55: CFGS=0;
   367  006C  1315               	bcf	21,6	;volsfr
   368                           
   369                           ;MEM_DRV.C: 56: RD = 1;
   370  006D  1415               	bsf	21,0	;volsfr
   371                           
   372                           ;MEM_DRV.C: 57: __nop();
   373  006E  0000               	nop
   374                           
   375                           ;MEM_DRV.C: 58: __nop();
   376  006F  0000               	nop
   377                           
   378                           ;MEM_DRV.C: 59: __nop();
   379  0070  0000               	nop
   380                           
   381                           ;MEM_DRV.C: 60: __nop();
   382  0071  0000               	nop
   383                           
   384                           ;MEM_DRV.C: 61: ReEEPROMread = EEDATL;
   385  0072  0023               	movlb	3	; select bank3
   386  0073  0813               	movf	19,w	;volatile
   387  0074  0020               	movlb	0	; select bank0
   388  0075  00AD               	movwf	EEPROMread@ReEEPROMread
   389                           
   390                           ;MEM_DRV.C: 62: RD=0;
   391  0076  0023               	movlb	3	; select bank3
   392  0077  1015               	bcf	21,0	;volsfr
   393                           
   394                           ;MEM_DRV.C: 63: return ReEEPROMread;
   395  0078  0020               	movlb	0	; select bank0
   396  0079  082D               	movf	EEPROMread@ReEEPROMread,w
   397  007A  0008               	return
   398  007B                     __end_of_EEPROMread:	
   399  007B                     __ptext4:	
   400 ;; *************** function _All_Page_Read_CRC *****************
   401 ;; Defined at:
   402 ;;		line 59 in file "IAP_FW.C"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  iap_addr        2   13[BANK0 ] unsigned int 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 1F/0
   413 ;;		On exit  : 1F/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   417 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels used:    1
   422 ;; Hardware stack levels required when called:    6
   423 ;; This function calls:
   424 ;;		_CRC16_CCITT
   425 ;;		_iap_mem_rd
   426 ;; This function is called by:
   427 ;;		_Power_On_App_Check
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _All_Page_Read_CRC
   433  007B                     _All_Page_Read_CRC:	
   434                           
   435                           ;IAP_FW.C: 61: unsigned int iap_addr;
   436                           ;IAP_FW.C: 62: CRC_16 = 0;
   437                           
   438                           ;incstack = 0
   439                           ; Regs used in _All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
   440                           
   441                           ;IAP_FW.C: 63: EECON1 = (0x1<<7 )|(0X1<<2 );
   442  007B  2115  3180         	fcall	PL12	;call to abstracted procedure
   443  007D  0095               	movwf	21	;volsfr
   444                           
   445                           ;IAP_FW.C: 64: for(iap_addr=0X400;iap_addr<0x2800;iap_addr++)
   446  007E  0020               	movlb	0	; select bank0
   447  007F  3004               	movlw	4
   448  0080  01B2               	clrf	All_Page_Read_CRC@iap_addr
   449  0081  00B3               	movwf	All_Page_Read_CRC@iap_addr+1
   450  0082                     l6743:	
   451                           
   452                           ;IAP_FW.C: 65: {
   453                           ;IAP_FW.C: 66: EEADRH = iap_addr>>8;
   454  0082  0833               	movf	All_Page_Read_CRC@iap_addr+1,w
   455  0083  0023               	movlb	3	; select bank3
   456  0084  0092               	movwf	18	;volatile
   457                           
   458                           ;IAP_FW.C: 67: EEADRL = iap_addr>>0;
   459  0085  0020               	movlb	0	; select bank0
   460  0086  0832               	movf	All_Page_Read_CRC@iap_addr,w
   461  0087  0023               	movlb	3	; select bank3
   462  0088  0091               	movwf	17	;volatile
   463                           
   464                           ;IAP_FW.C: 68: iap_mem_rd();
   465  0089  20BC  3180         	fcall	_iap_mem_rd
   466                           
   467                           ;IAP_FW.C: 69: CRC16_CCITT(EEDATL);
   468  008B  0813               	movf	19,w	;volatile
   469  008C  209D  3180         	fcall	_CRC16_CCITT
   470                           
   471                           ;IAP_FW.C: 70: CRC16_CCITT(EEDATH);
   472  008E  0023               	movlb	3	; select bank3
   473  008F  0814               	movf	20,w	;volatile
   474  0090  209D  3180         	fcall	_CRC16_CCITT
   475  0092  0AB2               	incf	All_Page_Read_CRC@iap_addr,f
   476  0093  1903               	skipnz
   477  0094  0AB3               	incf	All_Page_Read_CRC@iap_addr+1,f
   478  0095  3028               	movlw	40
   479  0096  0233               	subwf	All_Page_Read_CRC@iap_addr+1,w
   480  0097  3000               	movlw	0
   481  0098  1903               	skipnz
   482  0099  0232               	subwf	All_Page_Read_CRC@iap_addr,w
   483  009A  1803               	btfsc	3,0
   484  009B  0008               	return
   485  009C  2882               	goto	l6743
   486  009D                     __end_of_All_Page_Read_CRC:	
   487  009D                     __ptext6:	
   488 ;; *************** function _CRC16_CCITT *****************
   489 ;; Defined at:
   490 ;;		line 43 in file "IAP_FW.C"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  data            1    wreg     unsigned char 
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  data            1   11[BANK0 ] unsigned char 
   495 ;;  i               1   12[BANK0 ] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 1F/3
   502 ;;		On exit  : 1F/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   507 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   508 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   509 ;;Total ram usage:        6 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    5
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_All_Page_Read_CRC
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _CRC16_CCITT
   521  009D                     _CRC16_CCITT:	
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _CRC16_CCITT: [wreg+status,2+status,0]
   525                           ;CRC16_CCITT@data stored from wreg
   526  009D  0020               	movlb	0	; select bank0
   527  009E  00B0               	movwf	CRC16_CCITT@data
   528                           
   529                           ;IAP_FW.C: 46: unsigned char i;
   530                           ;IAP_FW.C: 48: CRC_16 ^= data;
   531  009F  06A3               	xorwf	35,f
   532                           
   533                           ;IAP_FW.C: 50: for(i = 0;i < 8;i++)
   534  00A0  01B1               	clrf	CRC16_CCITT@i
   535  00A1                     l1925:	
   536                           
   537                           ;IAP_FW.C: 51: {
   538                           ;IAP_FW.C: 52: if(CRC_16 & 0x01)
   539  00A1  1C23               	btfss	35,0
   540  00A2  28B4               	goto	l6695
   541                           
   542                           ;IAP_FW.C: 53: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
   543  00A3  0824               	movf	36,w
   544  00A4  00AD               	movwf	??_CRC16_CCITT+1
   545  00A5  0823               	movf	35,w
   546  00A6  00AC               	movwf	??_CRC16_CCITT
   547  00A7  3008               	movlw	8
   548  00A8  36AD               	lsrf	??_CRC16_CCITT+1,f
   549  00A9  0CAC               	rrf	??_CRC16_CCITT,f
   550  00AA  062C               	xorwf	??_CRC16_CCITT,w
   551  00AB  00AE               	movwf	??_CRC16_CCITT+2
   552  00AC  3084               	movlw	132
   553  00AD  062D               	xorwf	??_CRC16_CCITT+1,w
   554  00AE  00AF               	movwf	??_CRC16_CCITT+3
   555  00AF  082E               	movf	??_CRC16_CCITT+2,w
   556  00B0  00A3               	movwf	35
   557  00B1  082F               	movf	??_CRC16_CCITT+3,w
   558  00B2  00A4               	movwf	36
   559  00B3  28B6               	goto	l1928
   560  00B4                     l6695:	
   561                           
   562                           ;IAP_FW.C: 54: else
   563                           ;IAP_FW.C: 55: CRC_16 = CRC_16 >> 1;
   564  00B4  36A4               	lsrf	36,f
   565  00B5  0CA3               	rrf	35,f
   566  00B6                     l1928:	
   567  00B6  3008               	movlw	8
   568  00B7  0AB1               	incf	CRC16_CCITT@i,f
   569  00B8  0231               	subwf	CRC16_CCITT@i,w
   570  00B9  1803               	btfsc	3,0
   571  00BA  0008               	return
   572  00BB  28A1               	goto	l1925
   573  00BC                     __end_of_CRC16_CCITT:	
   574  00BC                     __ptext5:	
   575 ;; *************** function _iap_mem_rd *****************
   576 ;; Defined at:
   577 ;;		line 34 in file "MEM_DRV.C"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		None
   586 ;; Tracked objects:
   587 ;;		On entry : 1F/3
   588 ;;		On exit  : 1F/3
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    5
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_All_Page_Read_CRC
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           
   606                           ;psect for function _iap_mem_rd
   607  00BC                     _iap_mem_rd:	
   608                           
   609                           ;MEM_DRV.C: 36: EECON1 |=(0x1<<0 );
   610                           
   611                           ;incstack = 0
   612                           ; Regs used in _iap_mem_rd: []
   613  00BC  1415               	bsf	21,0	;volsfr
   614  00BD  0000               	nop	;# 
   615  00BE                     l3923:	
   616                           ;MEM_DRV.C: 38: while(EECON1 & (0x1<<0 ));
   617                           
   618  00BE  0023               	movlb	3	; select bank3
   619  00BF  1815               	btfsc	21,0	;volsfr
   620  00C0  28BE               	goto	l3923
   621  00C1  0008               	return
   622  00C2                     __end_of_iap_mem_rd:	
   623  00C2                     __ptext15:	
   624 ;; *************** function _Eeprom_Write_Crc *****************
   625 ;; Defined at:
   626 ;;		line 73 in file "IAP_FW.C"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 1F/0
   637 ;;		On exit  : 1F/3
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    2
   647 ;; This function calls:
   648 ;;		_iap_mem_prog
   649 ;;		i1_All_Page_Read_CRC
   650 ;; This function is called by:
   651 ;;		_user_isr
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _Eeprom_Write_Crc
   657  00C2                     _Eeprom_Write_Crc:	
   658                           
   659                           ;IAP_FW.C: 75: All_Page_Read_CRC();
   660                           
   661                           ;incstack = 0
   662                           ; Regs used in _Eeprom_Write_Crc: [wreg+status,2+status,0+pclath+cstack]
   663  00C2  20D7               	fcall	i1_All_Page_Read_CRC
   664                           
   665                           ;IAP_FW.C: 77: EECON1 &=~(0x1<<7 );
   666  00C3  0023               	movlb	3	; select bank3
   667  00C4  1395               	bcf	21,7	;volsfr
   668                           
   669                           ;IAP_FW.C: 78: EECON1 =(0X1<<2 );
   670  00C5  3004               	movlw	4
   671  00C6  0095               	movwf	21	;volsfr
   672                           
   673                           ;IAP_FW.C: 80: EEADRL=0;
   674  00C7  0191               	clrf	17	;volatile
   675                           
   676                           ;IAP_FW.C: 81: EEDATL=CRC_H;
   677  00C8  0020               	movlb	0	; select bank0
   678  00C9  0824               	movf	36,w
   679  00CA  0023               	movlb	3	; select bank3
   680  00CB  0093               	movwf	19	;volatile
   681                           
   682                           ;IAP_FW.C: 82: iap_mem_prog();
   683  00CC  3182  2253  3180   	fcall	_iap_mem_prog
   684                           
   685                           ;IAP_FW.C: 83: EEADRL=1;
   686  00CF  3001               	movlw	1
   687  00D0  0091               	movwf	17	;volatile
   688                           
   689                           ;IAP_FW.C: 84: EEDATL=CRC_L;
   690  00D1  0020               	movlb	0	; select bank0
   691  00D2  0823               	movf	35,w
   692  00D3  0023               	movlb	3	; select bank3
   693  00D4  0093               	movwf	19	;volatile
   694                           
   695                           ;IAP_FW.C: 85: iap_mem_prog();
   696  00D5  3182  2A53         	ljmp	i1l6701
   697  00D7                     __end_of_Eeprom_Write_Crc:	
   698  00D7                     __ptext16:	
   699 ;; *************** function i1_All_Page_Read_CRC *****************
   700 ;; Defined at:
   701 ;;		line 59 in file "IAP_FW.C"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  All_Page_Rea    2    6[COMMON] unsigned int 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 1F/0
   712 ;;		On exit  : 1F/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   719 ;;Total ram usage:        2 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    1
   722 ;; This function calls:
   723 ;;		i1_CRC16_CCITT
   724 ;;		i1_iap_mem_rd
   725 ;; This function is called by:
   726 ;;		_Eeprom_Write_Crc
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function i1_All_Page_Read_CRC
   732  00D7                     i1_All_Page_Read_CRC:	
   733                           
   734                           ;IAP_FW.C: 61: unsigned int iap_addr;
   735                           ;IAP_FW.C: 62: CRC_16 = 0;
   736                           
   737                           ;incstack = 0
   738                           ; Regs used in i1_All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
   739                           
   740                           ;IAP_FW.C: 63: EECON1 = (0x1<<7 )|(0X1<<2 );
   741  00D7  2115               	fcall	PL12	;call to abstracted procedure
   742  00D8  0095               	movwf	21	;volsfr
   743                           
   744                           ;IAP_FW.C: 64: for(iap_addr=0X400;iap_addr<0x2800;iap_addr++)
   745  00D9  3004               	movlw	4
   746  00DA  01F8               	clrf	i1All_Page_Read_CRC@iap_addr
   747  00DB  00F9               	movwf	i1All_Page_Read_CRC@iap_addr+1
   748  00DC                     i1l6725:	
   749                           
   750                           ;IAP_FW.C: 65: {
   751                           ;IAP_FW.C: 66: EEADRH = iap_addr>>8;
   752  00DC  0879               	movf	i1All_Page_Read_CRC@iap_addr+1,w
   753  00DD  0023               	movlb	3	; select bank3
   754  00DE  0092               	movwf	18	;volatile
   755                           
   756                           ;IAP_FW.C: 67: EEADRL = iap_addr>>0;
   757  00DF  0878               	movf	i1All_Page_Read_CRC@iap_addr,w
   758  00E0  0091               	movwf	17	;volatile
   759                           
   760                           ;IAP_FW.C: 68: iap_mem_rd();
   761  00E1  3182  2282  3180   	fcall	i1_iap_mem_rd
   762                           
   763                           ;IAP_FW.C: 69: CRC16_CCITT(EEDATL);
   764  00E4  0813               	movf	19,w	;volatile
   765  00E5  20F6  3180         	fcall	i1_CRC16_CCITT
   766                           
   767                           ;IAP_FW.C: 70: CRC16_CCITT(EEDATH);
   768  00E7  0023               	movlb	3	; select bank3
   769  00E8  0814               	movf	20,w	;volatile
   770  00E9  20F6  3180         	fcall	i1_CRC16_CCITT
   771  00EB  0AF8               	incf	i1All_Page_Read_CRC@iap_addr,f
   772  00EC  1903               	skipnz
   773  00ED  0AF9               	incf	i1All_Page_Read_CRC@iap_addr+1,f
   774  00EE  3028               	movlw	40
   775  00EF  0279               	subwf	i1All_Page_Read_CRC@iap_addr+1,w
   776  00F0  3000               	movlw	0
   777  00F1  1903               	skipnz
   778  00F2  0278               	subwf	i1All_Page_Read_CRC@iap_addr,w
   779  00F3  1803               	btfsc	3,0
   780  00F4  0008               	return
   781  00F5  28DC               	goto	i1l6725
   782  00F6                     __end_ofi1_All_Page_Read_CRC:	
   783  00F6                     __ptext18:	
   784 ;; *************** function i1_CRC16_CCITT *****************
   785 ;; Defined at:
   786 ;;		line 43 in file "IAP_FW.C"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  data            1    wreg     unsigned char 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  data            1    4[COMMON] unsigned char 
   791 ;;  CRC16_CCITT     1    5[COMMON] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0
   796 ;; Tracked objects:
   797 ;;		On entry : 1C/0
   798 ;;		On exit  : 1F/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   805 ;;Total ram usage:        6 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_user_isr
   811 ;;		i1_All_Page_Read_CRC
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function i1_CRC16_CCITT
   817  00F6                     i1_CRC16_CCITT:	
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in i1_CRC16_CCITT: [wreg+status,2+status,0]
   821                           ;i1CRC16_CCITT@data stored from wreg
   822  00F6  00F6               	movwf	i1CRC16_CCITT@data
   823                           
   824                           ;IAP_FW.C: 46: unsigned char i;
   825                           ;IAP_FW.C: 48: CRC_16 ^= data;
   826  00F7  0020               	movlb	0	; select bank0
   827  00F8  06A3               	xorwf	35,f
   828                           
   829                           ;IAP_FW.C: 50: for(i = 0;i < 8;i++)
   830  00F9  01F7               	clrf	i1CRC16_CCITT@i
   831  00FA                     i1l1925:	
   832                           
   833                           ;IAP_FW.C: 51: {
   834                           ;IAP_FW.C: 52: if(CRC_16 & 0x01)
   835  00FA  1C23               	btfss	35,0
   836  00FB  290D               	goto	i1l6679
   837                           
   838                           ;IAP_FW.C: 53: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
   839  00FC  0824               	movf	36,w
   840  00FD  00F3               	movwf	??i1_CRC16_CCITT+1
   841  00FE  0823               	movf	35,w
   842  00FF  00F2               	movwf	??i1_CRC16_CCITT
   843  0100  3008               	movlw	8
   844  0101  36F3               	lsrf	??i1_CRC16_CCITT+1,f
   845  0102  0CF2               	rrf	??i1_CRC16_CCITT,f
   846  0103  0672               	xorwf	??i1_CRC16_CCITT,w
   847  0104  00F4               	movwf	??i1_CRC16_CCITT+2
   848  0105  3084               	movlw	132
   849  0106  0673               	xorwf	??i1_CRC16_CCITT+1,w
   850  0107  00F5               	movwf	??i1_CRC16_CCITT+3
   851  0108  0874               	movf	??i1_CRC16_CCITT+2,w
   852  0109  00A3               	movwf	35
   853  010A  0875               	movf	??i1_CRC16_CCITT+3,w
   854  010B  00A4               	movwf	36
   855  010C  290F               	goto	i1l1928
   856  010D                     i1l6679:	
   857                           
   858                           ;IAP_FW.C: 54: else
   859                           ;IAP_FW.C: 55: CRC_16 = CRC_16 >> 1;
   860  010D  36A4               	lsrf	36,f
   861  010E  0CA3               	rrf	35,f
   862  010F                     i1l1928:	
   863  010F  3008               	movlw	8
   864  0110  0AF7               	incf	i1CRC16_CCITT@i,f
   865  0111  0277               	subwf	i1CRC16_CCITT@i,w
   866  0112  1803               	btfsc	3,0
   867  0113  0008               	return
   868  0114  28FA               	goto	i1l1925
   869  0115                     __end_ofi1_CRC16_CCITT:	
   870  0115                     PL12:	
   871  0115  3084               	movlw	132
   872  0116  01A3               	clrf	35
   873  0117  01A4               	clrf	36
   874  0118  0023               	movlb	3	; select bank3
   875  0119  0008               	return
   876  011A                     __end_ofPL12:	
   877                           
   878                           	psect	clrtext
   879  02FB                     clear_ram0:	
   880                           ;	Called with FSR0 containing the base address, and
   881                           ;	btemp/btemp+1 has the size to clear
   882                           
   883  02FB  0064               	clrwdt	;clear the watchdog before getting into this loop
   884  02FC                     clrloop0:	
   885  02FC  3001               	movlw	1
   886  02FD  0180               	clrf	0	;clear RAM location pointed to by FSR
   887  02FE  3101               	addfsr 0,1
   888  02FF  02FE               	subwf	126,f
   889  0300  3000               	movlw	0
   890  0301  3BFF               	subwfb	127,f
   891  0302  087F               	movf	127,w
   892  0303  047E               	iorwf	126,w
   893  0304  1903               	btfsc	3,2
   894  0305  3400               	retlw	0	;all done for this memory range, return
   895  0306  2AFC               	goto	clrloop0	;have we reached the end yet?
   896                           
   897                           	psect	cstackCOMMON
   898  0072                     __pcstackCOMMON:	
   899  0072                     ?_iap_mem_rd:	
   900  0072                     ?_iap_mem_prog:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0072                     ??_iap_mem_prog:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0072                     ?_EEPROMread:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0072                     ?_user_isr:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0072                     ?_iap_usart_send:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0072                     ??_iap_usart_send:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0072                     ?_iap_usart_rec:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0072                     ?_iap_mem_erase:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0072                     ??_iap_mem_erase:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0072                     ?_iap_wait_tx_idle:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0072                     ??_iap_wait_tx_idle:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0072                     ?_iap_usart_init:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0072                     ?_CRC16_CCITT:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0072                     ?_All_Page_Read_CRC:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0072                     ?_Eeprom_Write_Crc:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0072                     ?_Power_On_App_Check:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0072                     ?_data_check_erase_or_not:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0072                     ?_ISR:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0072                     ?_main:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0072                     ?_Unlock_Flash:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0072                     ??_Unlock_Flash:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0072                     ?_DelayUs:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0072                     ??_DelayUs:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0072                     ?i1_CRC16_CCITT:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0072                     ??i1_CRC16_CCITT:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0072                     ?i1_All_Page_Read_CRC:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0072                     ?i1_iap_mem_rd:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0072                     ??i1_iap_mem_rd:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0072                     DelayUs@a:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0072                     iap_usart_send@data:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0072                     data_check_erase_or_not@addr:	
   991                           ; 1 bytes @ 0x0
   992                           
   993                           
   994                           ; 2 bytes @ 0x0
   995  0072                     	ds	1
   996  0073                     ??_iap_usart_rec:	
   997  0073                     iap_usart_rec@a:	
   998                           ; 1 bytes @ 0x1
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x1
  1002  0073                     	ds	1
  1003  0074                     data_check_erase_or_not@mode:	
  1004                           
  1005                           ; 1 bytes @ 0x2
  1006  0074                     	ds	1
  1007  0075                     ??_data_check_erase_or_not:	
  1008                           
  1009                           ; 1 bytes @ 0x3
  1010  0075                     	ds	1
  1011  0076                     i1CRC16_CCITT@data:	
  1012                           
  1013                           ; 1 bytes @ 0x4
  1014  0076                     	ds	1
  1015  0077                     i1CRC16_CCITT@i:	
  1016                           
  1017                           ; 1 bytes @ 0x5
  1018  0077                     	ds	1
  1019  0078                     ??i1_All_Page_Read_CRC:	
  1020  0078                     i1All_Page_Read_CRC@iap_addr:	
  1021                           ; 1 bytes @ 0x6
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x6
  1025  0078                     	ds	1
  1026  0079                     data_check_erase_or_not@j:	
  1027                           
  1028                           ; 1 bytes @ 0x7
  1029  0079                     	ds	1
  1030  007A                     ??_Eeprom_Write_Crc:	
  1031  007A                     data_check_erase_or_not@k:	
  1032                           ; 1 bytes @ 0x8
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x8
  1036  007A                     	ds	1
  1037  007B                     data_check_erase_or_not@i:	
  1038                           
  1039                           ; 1 bytes @ 0x9
  1040  007B                     	ds	1
  1041  007C                     ??_ISR:	
  1042                           
  1043                           	psect	cstackBANK0
  1044  0025                     __pcstackBANK0:	
  1045                           ; 1 bytes @ 0xA
  1046                           
  1047  0025                     ??_user_isr:	
  1048                           
  1049                           ; 1 bytes @ 0x0
  1050  0025                     	ds	4
  1051  0029                     user_isr@iap_addr:	
  1052                           
  1053                           ; 2 bytes @ 0x4
  1054  0029                     	ds	2
  1055  002B                     user_isr@i:	
  1056                           
  1057                           ; 1 bytes @ 0x6
  1058  002B                     	ds	1
  1059  002C                     ??_iap_mem_rd:	
  1060  002C                     ??_EEPROMread:	
  1061                           ; 1 bytes @ 0x7
  1062                           
  1063  002C                     ??_iap_usart_init:	
  1064                           ; 1 bytes @ 0x7
  1065                           
  1066  002C                     ??_CRC16_CCITT:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069  002C                     EEPROMread@EEAddr:	
  1070                           ; 1 bytes @ 0x7
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x7
  1074  002C                     	ds	1
  1075  002D                     EEPROMread@ReEEPROMread:	
  1076                           
  1077                           ; 1 bytes @ 0x8
  1078  002D                     	ds	3
  1079  0030                     CRC16_CCITT@data:	
  1080                           
  1081                           ; 1 bytes @ 0xB
  1082  0030                     	ds	1
  1083  0031                     CRC16_CCITT@i:	
  1084                           
  1085                           ; 1 bytes @ 0xC
  1086  0031                     	ds	1
  1087  0032                     ??_All_Page_Read_CRC:	
  1088  0032                     All_Page_Read_CRC@iap_addr:	
  1089                           ; 1 bytes @ 0xD
  1090                           
  1091                           
  1092                           ; 2 bytes @ 0xD
  1093  0032                     	ds	2
  1094  0034                     ??_Power_On_App_Check:	
  1095  0034                     Power_On_App_Check@CRC_Eeprom:	
  1096                           ; 1 bytes @ 0xF
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0xF
  1100  0034                     	ds	2
  1101  0036                     ??_main:	
  1102                           
  1103                           	psect	intentry
  1104  0004                     __pintentry:	
  1105 ;; *************** function _ISR *****************
  1106 ;; Defined at:
  1107 ;;		line 140 in file "IAP_FW.C"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    4
  1128 ;; This function calls:
  1129 ;;		_user_isr
  1130 ;; This function is called by:
  1131 ;;		Interrupt level 1
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135  0004                     _ISR:	
  1136                           
  1137                           ;incstack = 0
  1138  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1139                           
  1140                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1141  0005  3180               	pagesel	$
  1142  0006  0000               	nop	; ;# 
  1143  0007  0000               	nop	; ;# 
  1144  0008  0000               	nop	; ;# 
  1145  0009  0000               	nop	; ;# 
  1146  000A  0000               	nop	; ;# 
  1147  000B  0000               	nop	; ;# 
  1148  000C  0000               	nop	; ;# 
  1149  000D  0000               	nop	; ;# 
  1150  000E  0000               	nop	; ;# 
  1151  000F  0000               	nop	; ;# 
  1152  0010  0000               	nop	; ;# 
  1153  0011  0000               	nop	; ;# 
  1154  0012  0000               	nop	; ;# 
  1155  0013  0000               	nop	; ;# 
  1156  0014  0000               	nop	; ;# 
  1157  0015  0000               	nop	; ;# 
  1158  0016  0000               	nop	; ;# 
  1159  0017  0000               	nop	; ;# 
  1160  0018  0000               	nop	; ;# 
  1161  0019  0000               	nop	; ;# 
  1162  001A  0000               	nop	; ;# 
  1163                           
  1164                           ;IAP_FW.C: 165: user_isr();
  1165  001B  3181  211A         	fcall	_user_isr
  1166  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1167  001E  0009               	retfie
  1168  001F                     __end_of_ISR:	
  1169                           
  1170                           	psect	text8
  1171  011A                     __ptext8:	
  1172 ;; *************** function _user_isr *****************
  1173 ;; Defined at:
  1174 ;;		line 167 in file "IAP_FW.C"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  iap_addr        2    4[BANK0 ] unsigned int 
  1179 ;;  i               1    6[BANK0 ] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1190 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1191 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1192 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1193 ;;Total ram usage:        7 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    3
  1196 ;; This function calls:
  1197 ;;		_Eeprom_Write_Crc
  1198 ;;		_data_check_erase_or_not
  1199 ;;		_iap_mem_erase
  1200 ;;		_iap_mem_prog
  1201 ;;		_iap_usart_rec
  1202 ;;		_iap_usart_send
  1203 ;;		_iap_wait_tx_idle
  1204 ;;		i1_CRC16_CCITT
  1205 ;; This function is called by:
  1206 ;;		_ISR
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           
  1211                           ;psect for function _user_isr
  1212  011A                     _user_isr:	
  1213                           
  1214                           ;IAP_FW.C: 170: if(UR1RXNE && UR1RXNEF)
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in _user_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1218  011A  0029               	movlb	9	; select bank9
  1219  011B  180E               	btfsc	14,0	;volatile
  1220  011C  1C12               	btfss	18,0	;volatile
  1221  011D  2A18               	goto	i1l1962
  1222                           
  1223                           ;IAP_FW.C: 171: {
  1224                           ;IAP_FW.C: 172: if(UR1FEF==1)
  1225  011E  1992               	btfsc	18,3	;volatile
  1226                           
  1227                           ;IAP_FW.C: 173: {UR1FEF=0;}
  1228  011F  1192               	bcf	18,3	;volatile
  1229                           
  1230                           ;IAP_FW.C: 174: iap_recdata= UR1DATAL;
  1231  0120  080C               	movf	12,w	;volatile
  1232  0121  0020               	movlb	0	; select bank0
  1233  0122  00A2               	movwf	34
  1234                           
  1235                           ;IAP_FW.C: 175: count++;
  1236  0123  0AA1               	incf	33,f
  1237                           
  1238                           ;IAP_FW.C: 176: switch(count)
  1239  0124  293D               	goto	i1l6933
  1240  0125                     i1l6899:	
  1241                           
  1242                           ;IAP_FW.C: 179: if(iap_recdata != 0x46)
  1243  0125  3046               	movlw	70
  1244  0126                     L1:	
  1245  0126  0622               	xorwf	34,w
  1246  0127  1903               	btfsc	3,2
  1247  0128  294A               	goto	i1l1967
  1248  0129                     i1l6901:	
  1249                           
  1250                           ;IAP_FW.C: 180: {iap_err_flag=1;}
  1251  0129  14A0               	bsf	32,1
  1252  012A  294A               	goto	i1l1967
  1253  012B                     i1l6903:	
  1254                           
  1255                           ;IAP_FW.C: 183: if(iap_recdata != 0x4D)
  1256  012B  304D               	movlw	77
  1257  012C  2926               	goto	L1
  1258  012D                     i1l6907:	
  1259                           
  1260                           ;IAP_FW.C: 187: if(iap_recdata!= 0x44)
  1261  012D  3044               	movlw	68
  1262  012E  2926               	goto	L1
  1263  012F                     i1l6911:	
  1264                           
  1265                           ;IAP_FW.C: 191: if(iap_recdata != 0x49)
  1266  012F  3049               	movlw	73
  1267  0130  2926               	goto	L1
  1268  0131                     i1l6915:	
  1269                           
  1270                           ;IAP_FW.C: 195: if(iap_recdata != 0x41)
  1271  0131  3041               	movlw	65
  1272  0132  2926               	goto	L1
  1273  0133                     i1l6919:	
  1274                           
  1275                           ;IAP_FW.C: 199: if(iap_recdata != 0x50)
  1276  0133  3050               	movlw	80
  1277  0134  2926               	goto	L1
  1278  0135                     i1l6923:	
  1279                           
  1280                           ;IAP_FW.C: 203: if(iap_recdata!= 0x55)
  1281  0135  3055               	movlw	85
  1282  0136  2926               	goto	L1
  1283  0137                     i1l6927:	
  1284                           
  1285                           ;IAP_FW.C: 207: if(iap_recdata!= 0xaa)
  1286  0137  30AA               	movlw	170
  1287  0138  0622               	xorwf	34,w
  1288  0139  1D03               	btfss	3,2
  1289  013A  2929               	goto	i1l6901
  1290                           
  1291                           ;IAP_FW.C: 209: else
  1292                           ;IAP_FW.C: 210: {iap_ok_flag=1;}
  1293  013B  1520               	bsf	32,2
  1294  013C  294A               	goto	i1l1967
  1295  013D                     i1l6933:	
  1296  013D  0821               	movf	33,w
  1297                           
  1298                           ; Switch size 1, requested type "space"
  1299                           ; Number of cases is 8, Range of values is 1 to 8
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; direct_byte           25     9 (fixed)
  1303                           ; simple_byte           25    13 (average)
  1304                           ; jumptable            263     9 (fixed)
  1305                           ;	Chosen strategy is direct_byte
  1306  013E  3EFF               	addlw	-1
  1307  013F  1C03               	skipc
  1308  0140  2929               	goto	i1l6901
  1309  0141  0084               	movwf	4
  1310  0142  3008               	movlw	8
  1311  0143  0204               	subwf	4,w
  1312  0144  1803               	skipnc
  1313  0145  2929               	goto	i1l6901
  1314  0146  3182               	movlp	high i1S7107
  1315  0147  3504               	lslf	4,w
  1316  0148  3EEB               	addlw	low i1S7107
  1317  0149  0082               	movwf	2
  1318  014A                     i1l1967:	
  1319                           
  1320                           ;IAP_FW.C: 216: if(iap_ok_flag==1)
  1321  014A  1D20               	btfss	32,2
  1322  014B  2A0F               	goto	i1l1984
  1323                           
  1324                           ;IAP_FW.C: 217: {
  1325                           ;IAP_FW.C: 218: count=0;
  1326  014C  01A1               	clrf	33
  1327                           
  1328                           ;IAP_FW.C: 219: iap_ok_flag =0;
  1329  014D  1120               	bcf	32,2
  1330                           
  1331                           ;IAP_FW.C: 220: unsigned char i ;
  1332                           ;IAP_FW.C: 221: unsigned int iap_addr;
  1333                           ;IAP_FW.C: 222: UR1RXNE &= ~(0X1<<0 );
  1334  014E  0029               	movlb	9	; select bank9
  1335  014F  100E               	bcf	14,0	;volatile
  1336                           
  1337                           ;IAP_FW.C: 223: EECON1 = (0x1<<7 )|(0X1<<2 );
  1338  0150  3084               	movlw	132
  1339  0151  0023               	movlb	3	; select bank3
  1340  0152  0095               	movwf	21	;volsfr
  1341                           
  1342                           ;IAP_FW.C: 224: iap_usart_send(0xaa);
  1343  0153  30AA               	movlw	170
  1344  0154                     L2:	
  1345  0154  224C  3181         	fcall	_iap_usart_send
  1346                           
  1347                           ;IAP_FW.C: 229: switch(iap_databuf[0])
  1348  0156  29FB               	goto	i1l6945
  1349  0157                     i1l1987:	
  1350                           ;IAP_FW.C: 230: {
  1351                           ;IAP_FW.C: 231: case 0X05:
  1352                           
  1353                           
  1354                           ;IAP_FW.C: 232: for(i=1;i<133;i++)
  1355  0157  0020               	movlb	0	; select bank0
  1356  0158  01AB               	clrf	user_isr@i
  1357  0159  0AAB               	incf	user_isr@i,f
  1358  015A                     i1l6951:	
  1359                           
  1360                           ;IAP_FW.C: 233: {
  1361                           ;IAP_FW.C: 234: iap_databuf[i]=iap_usart_rec();
  1362  015A  225A  3181         	fcall	_iap_usart_rec
  1363  015C  0020               	movlb	0	; select bank0
  1364  015D  00A5               	movwf	??_user_isr
  1365  015E  082B               	movf	user_isr@i,w
  1366  015F  3E6B               	addlw	107
  1367  0160  00A6               	movwf	??_user_isr+1
  1368  0161  3023               	movlw	35
  1369  0162  01A7               	clrf	??_user_isr+2
  1370  0163  3DA7               	addwfc	??_user_isr+2,f
  1371  0164  0826               	movf	??_user_isr+1,w
  1372  0165  0086               	movwf	6
  1373  0166  0827               	movf	??_user_isr+2,w
  1374  0167  0087               	movwf	7
  1375  0168  0825               	movf	??_user_isr,w
  1376  0169  0081               	movwf	1
  1377  016A  3085               	movlw	133
  1378  016B  0AAB               	incf	user_isr@i,f
  1379  016C  022B               	subwf	user_isr@i,w
  1380  016D  1C03               	skipc
  1381  016E  295A               	goto	i1l6951
  1382                           
  1383                           ;IAP_FW.C: 235: }
  1384                           ;IAP_FW.C: 236: CRC_16 = 0;
  1385  016F  01A3               	clrf	35
  1386  0170  01A4               	clrf	36
  1387                           
  1388                           ;IAP_FW.C: 237: for(i=0;i<131;i++)
  1389  0171  01AB               	clrf	user_isr@i
  1390  0172                     i1l6963:	
  1391                           
  1392                           ;IAP_FW.C: 238: {
  1393                           ;IAP_FW.C: 239: CRC16_CCITT(iap_databuf[i]);
  1394  0172  082B               	movf	user_isr@i,w
  1395  0173  3E6B               	addlw	107
  1396  0174  0086               	movwf	6
  1397  0175  3023               	movlw	35
  1398  0176  0187               	clrf	7
  1399  0177  3D87               	addwfc	7,f
  1400  0178  0801               	movf	1,w
  1401  0179  3180  20F6  3181   	fcall	i1_CRC16_CCITT
  1402  017C  3083               	movlw	131
  1403  017D  0AAB               	incf	user_isr@i,f
  1404  017E  022B               	subwf	user_isr@i,w
  1405  017F  1C03               	skipc
  1406  0180  2972               	goto	i1l6963
  1407                           
  1408                           ;IAP_FW.C: 240: }
  1409                           ;IAP_FW.C: 241: if((CRC_H !=iap_databuf[131]) || (CRC_L !=iap_databuf[132]))
  1410  0181  30EE               	movlw	238
  1411  0182  0086               	movwf	6
  1412  0183  3023               	movlw	35
  1413  0184  0087               	movwf	7
  1414  0185  0801               	movf	1,w
  1415  0186  0624               	xorwf	36,w
  1416  0187  1D03               	skipz
  1417  0188  29EC               	goto	i1l7041
  1418  0189  30EF               	movlw	239
  1419  018A  0086               	movwf	6
  1420  018B  0801               	movf	1,w
  1421  018C  0623               	xorwf	35,w
  1422  018D  1D03               	btfss	3,2
  1423  018E  29EC               	goto	i1l7041
  1424                           
  1425                           ;IAP_FW.C: 245: }
  1426                           ;IAP_FW.C: 246: iap_addr = iap_databuf[1];
  1427                           
  1428                           ;IAP_FW.C: 244: break;
  1429                           
  1430                           ;IAP_FW.C: 242: {
  1431                           ;IAP_FW.C: 243: iap_usart_send(0x44);
  1432  018F  306B               	movlw	107
  1433  0190  0086               	movwf	6
  1434                           
  1435                           ;IAP_FW.C: 247: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1436  0191  22AF  3181         	fcall	PL4	;call to abstracted procedure
  1437                           
  1438                           ;IAP_FW.C: 248: if(iap_addr < 0X400)
  1439  0193  3004               	movlw	4
  1440  0194  022A               	subwf	user_isr@iap_addr+1,w
  1441  0195  3000               	movlw	0
  1442  0196  1903               	skipnz
  1443  0197  0229               	subwf	user_isr@iap_addr,w
  1444  0198  1C03               	btfss	3,0
  1445  0199  29EC               	goto	i1l7041
  1446                           
  1447                           ;IAP_FW.C: 252: }
  1448                           ;IAP_FW.C: 253: if(data_check_erase_or_not(iap_addr,1))
  1449                           
  1450                           ;IAP_FW.C: 251: break;
  1451                           
  1452                           ;IAP_FW.C: 249: {
  1453                           ;IAP_FW.C: 250: iap_usart_send(0x44);
  1454  019A  082A               	movf	user_isr@iap_addr+1,w
  1455  019B  22D6  3181         	fcall	PL10	;call to abstracted procedure
  1456  019D  221A  3181         	fcall	_data_check_erase_or_not
  1457  019F  3A00               	xorlw	0
  1458  01A0  1D03               	btfss	3,2
  1459  01A1  29DF               	goto	L3
  1460                           
  1461                           ;IAP_FW.C: 261: else
  1462                           ;IAP_FW.C: 262: {
  1463                           ;IAP_FW.C: 263: if(data_check_erase_or_not(iap_addr,0))
  1464                           
  1465                           ;IAP_FW.C: 260: }
  1466                           
  1467                           ;IAP_FW.C: 258: }
  1468                           ;IAP_FW.C: 259: iap_usart_send(0X00);
  1469                           
  1470                           ;IAP_FW.C: 256: {
  1471                           ;IAP_FW.C: 257: Eeprom_Write_Crc();
  1472                           
  1473                           ;IAP_FW.C: 254: {
  1474                           ;IAP_FW.C: 255: if(iap_addr == (0x2800-0x40))
  1475  01A2  0020               	movlb	0	; select bank0
  1476  01A3  082A               	movf	user_isr@iap_addr+1,w
  1477  01A4  00F3               	movwf	data_check_erase_or_not@addr+1
  1478  01A5  0829               	movf	user_isr@iap_addr,w
  1479  01A6  00F2               	movwf	data_check_erase_or_not@addr
  1480  01A7  01F4               	clrf	data_check_erase_or_not@mode
  1481  01A8  221A  3181         	fcall	_data_check_erase_or_not
  1482  01AA  3A00               	xorlw	0
  1483  01AB  1903               	skipnz
  1484  01AC  29BB               	goto	i1l7009
  1485                           
  1486                           ;IAP_FW.C: 264: {
  1487                           ;IAP_FW.C: 265: for(i=0;i<128;i=i+2)
  1488  01AD  0020               	movlb	0	; select bank0
  1489  01AE  01AB               	clrf	user_isr@i
  1490  01AF                     i1l6995:	
  1491                           
  1492                           ;IAP_FW.C: 266: {
  1493                           ;IAP_FW.C: 267: EEADRH = iap_addr>>8;
  1494  01AF  082A               	movf	user_isr@iap_addr+1,w
  1495  01B0  0023               	movlb	3	; select bank3
  1496  01B1  0092               	movwf	18	;volatile
  1497                           
  1498                           ;IAP_FW.C: 268: EEADRL = iap_addr>>0;
  1499                           
  1500                           ;IAP_FW.C: 269: EEDATH = iap_databuf[i+3];
  1501                           
  1502                           ;IAP_FW.C: 270: EEDATL = iap_databuf[i+4];
  1503  01B2  2288  3181         	fcall	PL2	;call to abstracted procedure
  1504                           
  1505                           ;IAP_FW.C: 271: iap_mem_prog();
  1506  01B4  2253  3181         	fcall	_iap_mem_prog
  1507                           
  1508                           ;IAP_FW.C: 272: iap_addr++;
  1509  01B6  22CD  3181         	fcall	PL8	;call to abstracted procedure
  1510  01B8  1803               	btfsc	3,0
  1511  01B9  29D2               	goto	i1l7033
  1512  01BA  29AF               	goto	i1l6995
  1513  01BB                     i1l7009:	
  1514                           
  1515                           ;IAP_FW.C: 275: else
  1516                           ;IAP_FW.C: 276: {
  1517                           ;IAP_FW.C: 277: EEADRH = iap_addr>>8;
  1518  01BB  0020               	movlb	0	; select bank0
  1519  01BC  082A               	movf	user_isr@iap_addr+1,w
  1520  01BD  0023               	movlb	3	; select bank3
  1521  01BE  0092               	movwf	18	;volatile
  1522                           
  1523                           ;IAP_FW.C: 278: EEADRL = iap_addr>>0;
  1524  01BF  0020               	movlb	0	; select bank0
  1525  01C0  0829               	movf	user_isr@iap_addr,w
  1526  01C1  0023               	movlb	3	; select bank3
  1527  01C2  0091               	movwf	17	;volatile
  1528                           
  1529                           ;IAP_FW.C: 279: iap_mem_erase();
  1530  01C3  22DC  3181         	fcall	_iap_mem_erase
  1531                           
  1532                           ;IAP_FW.C: 280: for(i=0;i<128;i=i+2)
  1533  01C5  0020               	movlb	0	; select bank0
  1534  01C6  01AB               	clrf	user_isr@i
  1535  01C7                     i1l7019:	
  1536                           
  1537                           ;IAP_FW.C: 281: {
  1538                           ;IAP_FW.C: 282: EEADRH = iap_addr>>8;
  1539  01C7  082A               	movf	user_isr@iap_addr+1,w
  1540  01C8  0023               	movlb	3	; select bank3
  1541  01C9  0092               	movwf	18	;volatile
  1542                           
  1543                           ;IAP_FW.C: 283: EEADRL = iap_addr>>0;
  1544                           
  1545                           ;IAP_FW.C: 284: EEDATH = iap_databuf[i+3];
  1546                           
  1547                           ;IAP_FW.C: 285: EEDATL = iap_databuf[i+4];
  1548  01CA  2288  3181         	fcall	PL2	;call to abstracted procedure
  1549                           
  1550                           ;IAP_FW.C: 286: iap_mem_prog();
  1551  01CC  2253  3181         	fcall	_iap_mem_prog
  1552                           
  1553                           ;IAP_FW.C: 287: iap_addr++;
  1554  01CE  22CD  3181         	fcall	PL8	;call to abstracted procedure
  1555  01D0  1C03               	skipc
  1556  01D1  29C7               	goto	i1l7019
  1557  01D2                     i1l7033:	
  1558                           
  1559                           ;IAP_FW.C: 288: }
  1560                           ;IAP_FW.C: 289: }
  1561                           ;IAP_FW.C: 290: iap_addr = iap_databuf[1];
  1562  01D2  306B               	movlw	107
  1563  01D3  0086               	movwf	6
  1564  01D4  3023               	movlw	35
  1565  01D5  0087               	movwf	7
  1566                           
  1567                           ;IAP_FW.C: 291: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1568  01D6  22AF  3181         	fcall	PL4	;call to abstracted procedure
  1569                           
  1570                           ;IAP_FW.C: 292: if(data_check_erase_or_not(iap_addr,1))
  1571  01D8  22D6  3181         	fcall	PL10	;call to abstracted procedure
  1572  01DA  221A  3181         	fcall	_data_check_erase_or_not
  1573  01DC  3A00               	xorlw	0
  1574  01DD  1903               	skipnz
  1575  01DE  29EC               	goto	i1l7041
  1576  01DF                     L3:	
  1577                           
  1578                           ;IAP_FW.C: 293: {
  1579                           ;IAP_FW.C: 294: if(iap_addr == (0x2800-0x40))
  1580  01DF  30C0               	movlw	192
  1581  01E0  0020               	movlb	0	; select bank0
  1582  01E1  0629               	xorwf	user_isr@iap_addr,w
  1583  01E2  3027               	movlw	39
  1584  01E3  1903               	skipnz
  1585  01E4  062A               	xorwf	user_isr@iap_addr+1,w
  1586  01E5  1D03               	btfss	3,2
  1587  01E6  29EA               	goto	i1l2007
  1588                           
  1589                           ;IAP_FW.C: 295: {
  1590                           ;IAP_FW.C: 296: Eeprom_Write_Crc();
  1591  01E7  3180  20C2  3181   	fcall	_Eeprom_Write_Crc
  1592  01EA                     i1l2007:	
  1593                           
  1594                           ;IAP_FW.C: 297: }
  1595                           ;IAP_FW.C: 298: iap_usart_send(0X00);
  1596  01EA  3000               	movlw	0
  1597  01EB  2954               	goto	L2
  1598  01EC                     i1l7041:	
  1599                           ;IAP_FW.C: 299: }
  1600                           
  1601                           
  1602                           ;IAP_FW.C: 300: else
  1603                           ;IAP_FW.C: 301: {
  1604                           ;IAP_FW.C: 302: iap_usart_send(0x44);
  1605  01EC  3044               	movlw	68
  1606  01ED  2954               	goto	L2
  1607  01EE                     i1l7043:	
  1608                           
  1609                           ;IAP_FW.C: 307: iap_usart_send(0X00);
  1610  01EE  3000               	movlw	0
  1611  01EF  224C  3181         	fcall	_iap_usart_send
  1612                           
  1613                           ;IAP_FW.C: 308: iap_wait_tx_idle();
  1614  01F1  2275  3181         	fcall	_iap_wait_tx_idle
  1615  01F3  0001               	reset	;# 
  1616                           
  1617                           ;IAP_FW.C: 310: break;
  1618  01F4  29FB               	goto	i1l6945
  1619  01F5                     i1l7047:	
  1620                           
  1621                           ;IAP_FW.C: 313: iap_usart_send(0x44);
  1622  01F5  3044               	movlw	68
  1623  01F6  224C  3181         	fcall	_iap_usart_send
  1624                           
  1625                           ;IAP_FW.C: 314: iap_wait_tx_idle();
  1626  01F8  2275  3181         	fcall	_iap_wait_tx_idle
  1627  01FA  0001               	reset	;# 
  1628  01FB                     i1l6945:	
  1629                           ;IAP_FW.C: 316: break;
  1630                           
  1631                           
  1632                           ;IAP_FW.C: 226: {
  1633                           ;IAP_FW.C: 227: iap_databuf[0]=iap_usart_rec();
  1634  01FB  306B               	movlw	107
  1635  01FC  0086               	movwf	6
  1636  01FD  3023               	movlw	35
  1637  01FE  0087               	movwf	7
  1638  01FF  225A  3181         	fcall	_iap_usart_rec
  1639  0201  3FC0               	movwi [0]fsr1
  1640  0202  0064               	clrwdt	;# 
  1641  0203  306B               	movlw	107
  1642  0204  0086               	movwf	6
  1643  0205  3023               	movlw	35
  1644  0206  0087               	movwf	7
  1645  0207  0801               	movf	1,w
  1646                           
  1647                           ; Switch size 1, requested type "space"
  1648                           ; Number of cases is 2, Range of values is 5 to 6
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte            7     4 (average)
  1652                           ; direct_byte           13     9 (fixed)
  1653                           ; jumptable            263     9 (fixed)
  1654                           ;	Chosen strategy is simple_byte
  1655  0208  3A05               	xorlw	5	; case 5
  1656  0209  1903               	skipnz
  1657  020A  2957               	goto	i1l1987
  1658  020B  3A03               	xorlw	3	; case 6
  1659  020C  1903               	skipnz
  1660  020D  29EE               	goto	i1l7043
  1661  020E  29F5               	goto	i1l7047
  1662  020F                     i1l1984:	
  1663                           
  1664                           ;IAP_FW.C: 318: }
  1665                           ;IAP_FW.C: 319: }
  1666                           ;IAP_FW.C: 320: if(iap_err_flag==1)
  1667  020F  1CA0               	btfss	32,1
  1668  0210  0008               	return
  1669                           
  1670                           ;IAP_FW.C: 321: {
  1671                           ;IAP_FW.C: 322: count=0;
  1672  0211  01A1               	clrf	33
  1673                           
  1674                           ;IAP_FW.C: 323: iap_err_flag=0;
  1675  0212  10A0               	bcf	32,1
  1676                           
  1677                           ;IAP_FW.C: 324: if(read_flag !=1)
  1678  0213  1820               	btfsc	32,0
  1679  0214  0008               	return
  1680                           
  1681                           ;IAP_FW.C: 325: {
  1682                           ;IAP_FW.C: 326: uart_rxnef=1;
  1683  0215  15A0               	bsf	32,3
  1684  0216  2C04               	goto	1028	;# 
  1685  0217  0008               	return
  1686  0218                     i1l1962:	
  1687  0218  2C04               	goto	1028	;# 
  1688  0219  0008               	return
  1689  021A                     __end_of_user_isr:	
  1690  021A                     __ptext14:	
  1691 ;; *************** function _data_check_erase_or_not *****************
  1692 ;; Defined at:
  1693 ;;		line 107 in file "IAP_FW.C"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  addr            2    0[COMMON] unsigned int 
  1696 ;;  mode            1    2[COMMON] unsigned char 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  i               1    9[COMMON] unsigned char 
  1699 ;;  k               1    8[COMMON] unsigned char 
  1700 ;;  j               1    7[COMMON] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      unsigned char 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 1F/0
  1707 ;;		On exit  : 1F/3
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1710 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;Total ram usage:       10 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    1
  1717 ;; This function calls:
  1718 ;;		i1_iap_mem_rd
  1719 ;; This function is called by:
  1720 ;;		_user_isr
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _data_check_erase_or_not
  1726  021A                     _data_check_erase_or_not:	
  1727                           
  1728                           ;IAP_FW.C: 109: unsigned char i ,j,k;
  1729                           ;IAP_FW.C: 110: for(i=0;i<64;i++)
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _data_check_erase_or_not: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  1733  021A  01FB               	clrf	data_check_erase_or_not@i
  1734  021B                     i1l6795:	
  1735                           
  1736                           ;IAP_FW.C: 111: {
  1737                           ;IAP_FW.C: 112: EEADRH = addr>>8;
  1738  021B  0873               	movf	data_check_erase_or_not@addr+1,w
  1739  021C  0023               	movlb	3	; select bank3
  1740  021D  0092               	movwf	18	;volatile
  1741                           
  1742                           ;IAP_FW.C: 113: EEADRL = addr>>0;
  1743  021E  0872               	movf	data_check_erase_or_not@addr,w
  1744  021F  0091               	movwf	17	;volatile
  1745                           
  1746                           ;IAP_FW.C: 114: j = iap_databuf[i*2+3];
  1747  0220  087B               	movf	data_check_erase_or_not@i,w
  1748  0221  00F5               	movwf	??_data_check_erase_or_not
  1749  0222  306E               	movlw	110
  1750  0223  22BF  3181         	fcall	PL6	;call to abstracted procedure
  1751  0225  00F9               	movwf	data_check_erase_or_not@j
  1752                           
  1753                           ;IAP_FW.C: 115: k = iap_databuf[i*2+4];
  1754  0226  087B               	movf	data_check_erase_or_not@i,w
  1755  0227  00F5               	movwf	??_data_check_erase_or_not
  1756  0228  306F               	movlw	111
  1757  0229  22BF  3181         	fcall	PL6	;call to abstracted procedure
  1758  022B  00FA               	movwf	data_check_erase_or_not@k
  1759                           
  1760                           ;IAP_FW.C: 116: iap_mem_rd();
  1761  022C  2282  3181         	fcall	i1_iap_mem_rd
  1762                           
  1763                           ;IAP_FW.C: 117: if(mode == 0)
  1764  022E  0874               	movf	data_check_erase_or_not@mode,w
  1765  022F  1D03               	btfss	3,2
  1766  0230  2A3B               	goto	i1l6813
  1767                           
  1768                           ;IAP_FW.C: 118: {
  1769                           ;IAP_FW.C: 119: if(((EEDATH & j) != j) || ((EEDATL & k) != k))
  1770  0231  0879               	movf	data_check_erase_or_not@j,w
  1771  0232  0514               	andwf	20,w	;volatile
  1772  0233  00F5               	movwf	??_data_check_erase_or_not
  1773  0234  0679               	xorwf	data_check_erase_or_not@j,w
  1774  0235  1D03               	skipz
  1775  0236  3400               	retlw	0
  1776  0237  087A               	movf	data_check_erase_or_not@k,w
  1777  0238  0513               	andwf	19,w	;volatile
  1778  0239  00F5               	movwf	??_data_check_erase_or_not
  1779  023A  2A40               	goto	L4
  1780  023B                     i1l6813:	
  1781                           
  1782                           ;IAP_FW.C: 124: else
  1783                           ;IAP_FW.C: 125: {
  1784                           ;IAP_FW.C: 126: if((EEDATH != j) || (EEDATL != k))
  1785  023B  0814               	movf	20,w	;volatile
  1786  023C  0679               	xorwf	data_check_erase_or_not@j,w
  1787  023D  1D03               	skipz
  1788  023E  3400               	retlw	0
  1789  023F  0813               	movf	19,w	;volatile
  1790  0240                     L4:	
  1791  0240  067A               	xorwf	data_check_erase_or_not@k,w
  1792  0241  1D03               	btfss	3,2
  1793                           
  1794                           ;IAP_FW.C: 120: {
  1795                           ;IAP_FW.C: 121: return 0;
  1796  0242  3400               	retlw	0
  1797                           
  1798                           ;IAP_FW.C: 129: }
  1799                           ;IAP_FW.C: 130: }
  1800                           ;IAP_FW.C: 131: addr++;
  1801  0243  0AF2               	incf	data_check_erase_or_not@addr,f
  1802  0244  1903               	skipnz
  1803  0245  0AF3               	incf	data_check_erase_or_not@addr+1,f
  1804  0246  3040               	movlw	64
  1805  0247  0AFB               	incf	data_check_erase_or_not@i,f
  1806  0248  027B               	subwf	data_check_erase_or_not@i,w
  1807  0249  1803               	btfsc	3,0
  1808                           
  1809                           ;IAP_FW.C: 132: }
  1810                           ;IAP_FW.C: 133: return 1;
  1811  024A  3401               	retlw	1
  1812  024B  2A1B               	goto	i1l6795
  1813  024C                     __end_of_data_check_erase_or_not:	
  1814  024C                     __ptext10:	
  1815 ;; *************** function _iap_usart_send *****************
  1816 ;; Defined at:
  1817 ;;		line 44 in file "USART_DRV.C"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  data            1    wreg     unsigned char 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  data            1    0[COMMON] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/3
  1828 ;;		On exit  : 1F/9
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;Total ram usage:        1 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_user_isr
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _iap_usart_send
  1846  024C                     _iap_usart_send:	
  1847                           
  1848                           ;incstack = 0
  1849                           ; Regs used in _iap_usart_send: [wreg]
  1850                           ;iap_usart_send@data stored from wreg
  1851  024C  00F2               	movwf	iap_usart_send@data
  1852  024D                     i1l5820:	
  1853                           ;USART_DRV.C: 46: while(!(UR1LSR & (0x1<<5 )));
  1854                           
  1855  024D  0029               	movlb	9	; select bank9
  1856  024E  1E92               	btfss	18,5	;volatile
  1857  024F  2A4D               	goto	i1l5820
  1858                           
  1859                           ;USART_DRV.C: 47: UR1DATAL = data;
  1860  0250  0872               	movf	iap_usart_send@data,w
  1861  0251  008C               	movwf	12	;volatile
  1862  0252  0008               	return
  1863  0253                     __end_of_iap_usart_send:	
  1864  0253                     __ptext19:	
  1865 ;; *************** function _iap_mem_prog *****************
  1866 ;; Defined at:
  1867 ;;		line 27 in file "MEM_DRV.C"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		status,2, status,0, pclath, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 1F/3
  1878 ;;		On exit  : 1F/3
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;Total ram usage:        0 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    1
  1888 ;; This function calls:
  1889 ;;		_Unlock_Flash
  1890 ;; This function is called by:
  1891 ;;		_Eeprom_Write_Crc
  1892 ;;		_user_isr
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _iap_mem_prog
  1898  0253                     _iap_mem_prog:	
  1899  0253                     i1l6701:	
  1900                           ;incstack = 0
  1901                           ; Regs used in _iap_mem_prog: [status,2+status,0+pclath+cstack]
  1902                           
  1903                           
  1904                           ;MEM_DRV.C: 29: EECON1 &=~(0x1<<4 );
  1905  0253  1215               	bcf	21,4	;volsfr
  1906                           
  1907                           ;MEM_DRV.C: 30: Unlock_Flash();
  1908  0254  2278  3181         	fcall	_Unlock_Flash
  1909  0256                     i1l3917:	
  1910                           ;MEM_DRV.C: 31: while(EECON1 & (0x1<<1 ));
  1911                           
  1912  0256  0023               	movlb	3	; select bank3
  1913  0257  1895               	btfsc	21,1	;volsfr
  1914  0258  2A56               	goto	i1l3917
  1915  0259  0008               	return
  1916  025A                     __end_of_iap_mem_prog:	
  1917  025A                     __ptext11:	
  1918 ;; *************** function _iap_usart_rec *****************
  1919 ;; Defined at:
  1920 ;;		line 50 in file "USART_DRV.C"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  a               2    1[COMMON] unsigned int 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      unsigned char 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/9
  1931 ;;		On exit  : 1F/9
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;Total ram usage:        2 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    1
  1941 ;; This function calls:
  1942 ;;		_DelayUs
  1943 ;; This function is called by:
  1944 ;;		_user_isr
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _iap_usart_rec
  1950  025A                     _iap_usart_rec:	
  1951                           
  1952                           ;USART_DRV.C: 52: unsigned int a;
  1953                           ;USART_DRV.C: 53: for(a=0;a<47200;a++)
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _iap_usart_rec: [wreg+status,2+status,0+pclath+cstack]
  1957  025A  01F3               	clrf	iap_usart_rec@a
  1958  025B  01F4               	clrf	iap_usart_rec@a+1
  1959  025C                     i1l6839:	
  1960                           
  1961                           ;USART_DRV.C: 54: {
  1962                           ;USART_DRV.C: 55: DelayUs();
  1963  025C  22E3  3181         	fcall	_DelayUs
  1964                           
  1965                           ;USART_DRV.C: 56: if(((0x1 << 0 ) & UR1LSR))
  1966  025E  0029               	movlb	9	; select bank9
  1967  025F  1C12               	btfss	18,0	;volatile
  1968  0260  2A6A               	goto	i1l6857
  1969                           
  1970                           ;USART_DRV.C: 57: {
  1971                           ;USART_DRV.C: 58: if((UR1LSR & (0x1<<2 )) || (UR1LSR & (0x1<<3 )))
  1972  0261  1912               	btfsc	18,2	;volatile
  1973  0262  2A65               	goto	i1l6847
  1974  0263  1D92               	btfss	18,3	;volatile
  1975  0264  2A68               	goto	i1l6853
  1976  0265                     i1l6847:	
  1977                           
  1978                           ;USART_DRV.C: 59: {
  1979                           ;USART_DRV.C: 60: UR1LSR = ~((0x1<<2 )|(0x1<<3 ));
  1980  0265  30F3               	movlw	243
  1981  0266  0092               	movwf	18	;volatile
  1982                           
  1983                           ;USART_DRV.C: 61: return 0xff;
  1984  0267  34FF               	retlw	255
  1985  0268                     i1l6853:	
  1986                           
  1987                           ;USART_DRV.C: 63: else
  1988                           ;USART_DRV.C: 64: {
  1989                           ;USART_DRV.C: 65: return UR1DATAL;
  1990  0268  080C               	movf	12,w	;volatile
  1991  0269  0008               	return
  1992  026A                     i1l6857:	
  1993  026A  0AF3               	incf	iap_usart_rec@a,f
  1994  026B  1903               	skipnz
  1995  026C  0AF4               	incf	iap_usart_rec@a+1,f
  1996  026D  30B8               	movlw	184
  1997  026E  0274               	subwf	iap_usart_rec@a+1,w
  1998  026F  3060               	movlw	96
  1999  0270  1903               	skipnz
  2000  0271  0273               	subwf	iap_usart_rec@a,w
  2001  0272  1803               	btfsc	3,0
  2002                           
  2003                           ;USART_DRV.C: 66: }
  2004                           ;USART_DRV.C: 67: }
  2005                           ;USART_DRV.C: 68: }
  2006                           ;USART_DRV.C: 69: return 0xff;
  2007  0273  34FF               	retlw	255
  2008  0274  2A5C               	goto	i1l6839
  2009  0275                     __end_of_iap_usart_rec:	
  2010  0275                     __ptext9:	
  2011 ;; *************** function _iap_wait_tx_idle *****************
  2012 ;; Defined at:
  2013 ;;		line 74 in file "USART_DRV.C"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		None
  2022 ;; Tracked objects:
  2023 ;;		On entry : 1F/9
  2024 ;;		On exit  : 1F/9
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_user_isr
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _iap_wait_tx_idle
  2042  0275                     _iap_wait_tx_idle:	
  2043  0275                     i1l5836:	
  2044                           ;USART_DRV.C: 76: while(!(UR1TC & (0x1<<0 )));
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _iap_wait_tx_idle: []
  2048                           
  2049  0275  181C               	btfsc	28,0	;volatile
  2050  0276  0008               	return
  2051  0277  2A75               	goto	i1l5836
  2052  0278                     __end_of_iap_wait_tx_idle:	
  2053  0278                     __ptext20:	
  2054 ;; *************** function _Unlock_Flash *****************
  2055 ;; Defined at:
  2056 ;;		line 4 in file "MEM_DRV.C"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		None
  2065 ;; Tracked objects:
  2066 ;;		On entry : 1F/3
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;Total ram usage:        0 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_iap_mem_erase
  2080 ;;		_iap_mem_prog
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           
  2085                           ;psect for function _Unlock_Flash
  2086  0278                     _Unlock_Flash:	
  2087                           
  2088                           ;incstack = 0
  2089                           ; Regs used in _Unlock_Flash: []
  2090  0278  3003               	movlw	3	;# 
  2091  0279  0088               	movwf	8	;# 
  2092  027A  3055               	movlw	85	;# 
  2093  027B  0096               	movwf	22	;# 
  2094  027C  30AA               	movlw	170	;# 
  2095  027D  0096               	movwf	22	;# 
  2096  027E  1495               	bsf	21,1	;# 
  2097  027F  0000               	nop	;# 
  2098  0280  0000               	nop	;# 
  2099  0281  0008               	return
  2100  0282                     __end_of_Unlock_Flash:	
  2101  007E                     btemp	set	126	;btemp
  2102  007E                     int$flags	set	126
  2103  007E                     wtemp0	set	126
  2104  0282                     __ptext17:	
  2105 ;; *************** function i1_iap_mem_rd *****************
  2106 ;; Defined at:
  2107 ;;		line 34 in file "MEM_DRV.C"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		None
  2116 ;; Tracked objects:
  2117 ;;		On entry : 1F/3
  2118 ;;		On exit  : 1F/3
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_data_check_erase_or_not
  2131 ;;		i1_All_Page_Read_CRC
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function i1_iap_mem_rd
  2137  0282                     i1_iap_mem_rd:	
  2138                           
  2139                           ;MEM_DRV.C: 36: EECON1 |=(0x1<<0 );
  2140                           
  2141                           ;incstack = 0
  2142                           ; Regs used in i1_iap_mem_rd: []
  2143  0282  1415               	bsf	21,0	;volsfr
  2144  0283  0000               	nop	;# 
  2145  0284                     i1l3923:	
  2146                           ;MEM_DRV.C: 38: while(EECON1 & (0x1<<0 ));
  2147                           
  2148  0284  0023               	movlb	3	; select bank3
  2149  0285  1815               	btfsc	21,0	;volsfr
  2150  0286  2A84               	goto	i1l3923
  2151  0287  0008               	return
  2152  0288                     __end_ofi1_iap_mem_rd:	
  2153  0288                     PL2:	
  2154  0288  0020               	movlb	0	; select bank0
  2155  0289  0829               	movf	user_isr@iap_addr,w
  2156  028A  0023               	movlb	3	; select bank3
  2157  028B  0091               	movwf	17	;volatile
  2158  028C  0020               	movlb	0	; select bank0
  2159  028D  082B               	movf	user_isr@i,w
  2160  028E  00A5               	movwf	??_user_isr
  2161  028F  306E               	movlw	110
  2162  0290  01A6               	clrf	??_user_isr+1
  2163  0291  00A7               	movwf	??_user_isr+2
  2164  0292  3023               	movlw	35
  2165  0293  00A8               	movwf	??_user_isr+3
  2166  0294  0825               	movf	??_user_isr,w
  2167  0295  0727               	addwf	??_user_isr+2,w
  2168  0296  0086               	movwf	6
  2169  0297  0826               	movf	??_user_isr+1,w
  2170  0298  3D28               	addwfc	??_user_isr+3,w
  2171  0299  0087               	movwf	7
  2172  029A  0801               	movf	1,w
  2173  029B  0023               	movlb	3	; select bank3
  2174  029C  0094               	movwf	20	;volatile
  2175  029D  0020               	movlb	0	; select bank0
  2176  029E  082B               	movf	user_isr@i,w
  2177  029F  00A5               	movwf	??_user_isr
  2178  02A0  306F               	movlw	111
  2179  02A1  01A6               	clrf	??_user_isr+1
  2180  02A2  00A7               	movwf	??_user_isr+2
  2181  02A3  3023               	movlw	35
  2182  02A4  00A8               	movwf	??_user_isr+3
  2183  02A5  0825               	movf	??_user_isr,w
  2184  02A6  0727               	addwf	??_user_isr+2,w
  2185  02A7  0086               	movwf	6
  2186  02A8  0826               	movf	??_user_isr+1,w
  2187  02A9  3D28               	addwfc	??_user_isr+3,w
  2188  02AA  0087               	movwf	7
  2189  02AB  0801               	movf	1,w
  2190  02AC  0023               	movlb	3	; select bank3
  2191  02AD  0093               	movwf	19	;volatile
  2192  02AE  0008               	return
  2193  02AF                     __end_ofPL2:	
  2194  02AF                     PL4:	
  2195  02AF  3141               	addfsr 1,1
  2196  02B0  0801               	movf	1,w
  2197  02B1  00A9               	movwf	user_isr@iap_addr
  2198  02B2  306B               	movlw	107
  2199  02B3  01AA               	clrf	user_isr@iap_addr+1
  2200  02B4  0086               	movwf	6
  2201  02B5  3023               	movlw	35
  2202  02B6  0087               	movwf	7
  2203  02B7  3142               	addfsr 1,2
  2204  02B8  0829               	movf	user_isr@iap_addr,w
  2205  02B9  00A5               	movwf	??_user_isr
  2206  02BA  0801               	movf	1,w
  2207  02BB  00A9               	movwf	user_isr@iap_addr
  2208  02BC  0825               	movf	??_user_isr,w
  2209  02BD  00AA               	movwf	user_isr@iap_addr+1
  2210  02BE  0008               	return
  2211  02BF                     __end_ofPL4:	
  2212  02BF                     PL6:	
  2213  02BF  01F6               	clrf	??_data_check_erase_or_not+1
  2214  02C0  35F5               	lslf	??_data_check_erase_or_not,f
  2215  02C1  0DF6               	rlf	??_data_check_erase_or_not+1,f
  2216  02C2  00F7               	movwf	??_data_check_erase_or_not+2
  2217  02C3  3023               	movlw	35
  2218  02C4  00F8               	movwf	??_data_check_erase_or_not+3
  2219  02C5  0875               	movf	??_data_check_erase_or_not,w
  2220  02C6  0777               	addwf	??_data_check_erase_or_not+2,w
  2221  02C7  0086               	movwf	6
  2222  02C8  0876               	movf	??_data_check_erase_or_not+1,w
  2223  02C9  3D78               	addwfc	??_data_check_erase_or_not+3,w
  2224  02CA  0087               	movwf	7
  2225  02CB  0801               	movf	1,w
  2226  02CC  0008               	return
  2227  02CD                     __end_ofPL6:	
  2228  02CD                     PL8:	
  2229  02CD  0020               	movlb	0	; select bank0
  2230  02CE  0AA9               	incf	user_isr@iap_addr,f
  2231  02CF  1903               	skipnz
  2232  02D0  0AAA               	incf	user_isr@iap_addr+1,f
  2233  02D1  3080               	movlw	128
  2234  02D2  0AAB               	incf	user_isr@i,f
  2235  02D3  0AAB               	incf	user_isr@i,f
  2236  02D4  022B               	subwf	user_isr@i,w
  2237  02D5  0008               	return
  2238  02D6                     __end_ofPL8:	
  2239  02D6                     PL10:	
  2240  02D6  00F3               	movwf	data_check_erase_or_not@addr+1
  2241  02D7  0829               	movf	user_isr@iap_addr,w
  2242  02D8  00F2               	movwf	data_check_erase_or_not@addr
  2243  02D9  01F4               	clrf	data_check_erase_or_not@mode
  2244  02DA  0AF4               	incf	data_check_erase_or_not@mode,f
  2245  02DB  0008               	return
  2246  02DC                     __end_ofPL10:	
  2247  02DC                     __ptext13:	
  2248 ;; *************** function _iap_mem_erase *****************
  2249 ;; Defined at:
  2250 ;;		line 19 in file "MEM_DRV.C"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 1F/3
  2261 ;;		On exit  : 1F/3
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    1
  2271 ;; This function calls:
  2272 ;;		_Unlock_Flash
  2273 ;; This function is called by:
  2274 ;;		_user_isr
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           
  2279                           ;psect for function _iap_mem_erase
  2280  02DC                     _iap_mem_erase:	
  2281                           
  2282                           ;MEM_DRV.C: 21: EECON1 |=(0x1<<4 );
  2283                           
  2284                           ;incstack = 0
  2285                           ; Regs used in _iap_mem_erase: [status,2+status,0+pclath+cstack]
  2286  02DC  1615               	bsf	21,4	;volsfr
  2287                           
  2288                           ;MEM_DRV.C: 22: Unlock_Flash();
  2289  02DD  2278  3181         	fcall	_Unlock_Flash
  2290  02DF                     i1l3911:	
  2291                           ;MEM_DRV.C: 23: while(EECON1 & (0x1<<1 ));
  2292                           
  2293  02DF  0023               	movlb	3	; select bank3
  2294  02E0  1895               	btfsc	21,1	;volsfr
  2295  02E1  2ADF               	goto	i1l3911
  2296  02E2  0008               	return
  2297  02E3                     __end_of_iap_mem_erase:	
  2298  02E3                     __ptext12:	
  2299 ;; *************** function _DelayUs *****************
  2300 ;; Defined at:
  2301 ;;		line 36 in file "USART_DRV.C"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  a               1    0[COMMON] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/9
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;Total ram usage:        1 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_iap_usart_rec
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           
  2329                           ;psect for function _DelayUs
  2330  02E3                     _DelayUs:	
  2331                           
  2332                           ;USART_DRV.C: 38: unsigned char a;
  2333                           ;USART_DRV.C: 39: for(a=0;a<10;a++)
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
  2337  02E3  01F2               	clrf	DelayUs@a
  2338  02E4                     i1l5815:	
  2339                           
  2340                           ;USART_DRV.C: 40: {
  2341                           ;USART_DRV.C: 41: __nop();
  2342  02E4  0000               	nop
  2343  02E5  300A               	movlw	10
  2344  02E6  0AF2               	incf	DelayUs@a,f
  2345  02E7  0272               	subwf	DelayUs@a,w
  2346  02E8  1803               	btfsc	3,0
  2347  02E9  0008               	return
  2348  02EA  2AE4               	goto	i1l5815
  2349  02EB                     __end_of_DelayUs:	
  2350                           
  2351                           	psect	swtext1
  2352  02EB                     __pswtext1:	
  2353  02EB                     i1S7107:	
  2354  02EB  3181  2925         	ljmp	i1l6899
  2355  02ED  3181  292B         	ljmp	i1l6903
  2356  02EF  3181  292D         	ljmp	i1l6907
  2357  02F1  3181  292F         	ljmp	i1l6911
  2358  02F3  3181  2931         	ljmp	i1l6915
  2359  02F5  3181  2933         	ljmp	i1l6919
  2360  02F7  3181  2935         	ljmp	i1l6923
  2361  02F9  3181  2937         	ljmp	i1l6927


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           12     10      10
    BANK0            75     17      17
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           75      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _user_isr->_data_check_erase_or_not
    _iap_usart_rec->_DelayUs
    _Eeprom_Write_Crc->i1_All_Page_Read_CRC
    i1_All_Page_Read_CRC->i1_CRC16_CCITT

Critical Paths under _main in BANK0

    _main->_Power_On_App_Check
    _Power_On_App_Check->_All_Page_Read_CRC
    _All_Page_Read_CRC->_CRC16_CCITT

Critical Paths under _ISR in BANK0

    _ISR->_user_isr

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     230
                 _Power_On_App_Check
                     _iap_usart_init
 ---------------------------------------------------------------------------------
 (1) _iap_usart_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_On_App_Check                                   2     2      0     230
                                             15 BANK0      2     2      0
                  _All_Page_Read_CRC
                         _EEPROMread
 ---------------------------------------------------------------------------------
 (2) _EEPROMread                                           2     2      0      45
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _All_Page_Read_CRC                                    2     2      0     160
                                             13 BANK0      2     2      0
                        _CRC16_CCITT
                         _iap_mem_rd
 ---------------------------------------------------------------------------------
 (3) _iap_mem_rd                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC16_CCITT                                          6     6      0      68
                                              7 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0    1523
                           _user_isr
 ---------------------------------------------------------------------------------
 (5) _user_isr                                             7     7      0    1523
                                              0 BANK0      7     7      0
                   _Eeprom_Write_Crc
            _data_check_erase_or_not
                      _iap_mem_erase
                       _iap_mem_prog
                      _iap_usart_rec
                     _iap_usart_send
                   _iap_wait_tx_idle
                      i1_CRC16_CCITT
 ---------------------------------------------------------------------------------
 (6) _iap_wait_tx_idle                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _iap_usart_send                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _iap_usart_rec                                        2     2      0      92
                                              1 COMMON     2     2      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (7) _DelayUs                                              1     1      0      46
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_erase                                        0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (6) _data_check_erase_or_not                             10     7      3     550
                                              0 COMMON    10     7      3
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write_Crc                                     0     0      0     158
                       _iap_mem_prog
                i1_All_Page_Read_CRC
 ---------------------------------------------------------------------------------
 (7) i1_All_Page_Read_CRC                                  2     2      0     158
                                              6 COMMON     2     2      0
                      i1_CRC16_CCITT
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (7) i1_iap_mem_rd                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_CRC16_CCITT                                        6     6      0      68
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_prog                                         0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (7) _Unlock_Flash                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Power_On_App_Check
     _All_Page_Read_CRC
       _CRC16_CCITT
       _iap_mem_rd
     _EEPROMread
   _iap_usart_init

 _ISR (ROOT)
   _user_isr
     _Eeprom_Write_Crc
       _iap_mem_prog
         _Unlock_Flash
       i1_All_Page_Read_CRC
         i1_CRC16_CCITT
         i1_iap_mem_rd
     _data_check_erase_or_not
       i1_iap_mem_rd
     _iap_mem_erase
       _Unlock_Flash
     _iap_mem_prog
       _Unlock_Flash
     _iap_usart_rec
       _DelayUs
     _iap_usart_send
     _iap_wait_tx_idle
     i1_CRC16_CCITT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            C      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               C      A       A       2       83.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            4B      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               4B     11      11       5       22.7%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              4B      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Nov 16 11:47:15 2021

                               pc 0002                                PL2 0288                                PL4 02AF  
                              PL6 02BF                                PL8 02CD          __end_of_Eeprom_Write_Crc 00D7  
                              _RD 0CA8            __size_ofi1_CRC16_CCITT 001F         __end_of_All_Page_Read_CRC 009D  
                             PL10 02D6                               PL12 0115                               _GIE 005F  
              _Power_On_App_Check 004C                               _ISR 0004                    ??_iap_mem_prog 0072  
                             u755 0065               ?_Power_On_App_Check 0072                              ?_ISR 0072  
                            l2022 0036                              l1925 00A1                              l1928 00B6  
                            l3923 00BE                   ??_iap_mem_erase 0072                              _AFP0 019E  
                            _AFP1 019F                              l6743 0082                              l6695 00B4  
                            _CFGS 0CAE   __end_of_data_check_erase_or_not 024C                              _PEIE 005E  
            __size_of_CRC16_CCITT 001F                              _flag 0020                              _main 002F  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E                              start 001F                   __end_of_DelayUs 02EB  
             __size_of_EEPROMread 0013              ??_Power_On_App_Check 0034                             ??_ISR 007C  
           __size_ofi1_iap_mem_rd 0006                             ?_main 0072                             _EEPGD 0CAF  
                           _BSREG 0008                             _CRC_H 0024                             _CRC_L 0023  
    __size_ofi1_All_Page_Read_CRC 001F                             _PCKEN 009A                             _UR1TC 049C  
                           _TRISB 008D                             _W_TMP 0070                 i1CRC16_CCITT@data 0076  
                           _count 0021                   ??_iap_usart_rec 0073                     i1_CRC16_CCITT 00F6  
                           status 0003                             wtemp0 007E                      i1_iap_mem_rd 0282  
                 __initialization 0021                      __end_of_main 0038        __size_of_All_Page_Read_CRC 0022  
                          ??_main 0036                  _iap_wait_tx_idle 0275                            i1S7107 02EB  
                          _EEADRH 0192                            _EEADRL 0191                            _EEDATH 0194  
                          _EEDATL 0193                            _EECON1 0195                    ?i1_CRC16_CCITT 0072  
                          _CRC_16 0023                            i1l2007 01EA                            i1l1925 00FA  
                          i1l1928 010F                            i1l1962 0218                            i1l3911 02DF  
                          i1l1967 014A                            i1l1984 020F                            i1l7041 01EC  
                          i1l7033 01D2                            i1l7009 01BB                            i1l3923 0284  
                          i1l7043 01EE                            i1l7019 01C7                            i1l1987 0157  
                          i1l3917 0256                            i1l7047 01F5                            i1l5820 024D  
                          i1l6701 0253                            i1l5815 02E4                            i1l5836 0275  
                          i1l6725 00DC                            i1l6813 023B                            i1l6901 0129  
                          i1l6911 012F                            i1l6903 012B                            i1l6923 0135  
                          i1l6915 0131                            i1l6907 012D                            i1l6853 0268  
                          i1l6933 013D                            i1l6679 010D                            i1l6847 0265  
                          i1l6839 025C                            i1l6951 015A                            i1l6927 0137  
                          i1l6919 0133                            i1l6857 026A                            i1l6945 01FB  
                          i1l6795 021B                            i1l6963 0172                            i1l6995 01AF  
                          i1l6899 0125                         ??_DelayUs 0072                            _OSCCON 0099  
                          _UR1FEF 2493                            _UR1DLL 0494                            _UR1LCR 048F  
                          _UR1MCR 0491                            _UR1LSR 0492              __end_of_iap_mem_prog 025A  
                  iap_usart_rec@a 0073                  ??_iap_usart_init 002C                  ??_iap_usart_send 0072  
                    ??_EEPROMread 002C                  __end_of_user_isr 021A           __end_of__initialization 002C  
                  __pcstackCOMMON 0072                __end_of_EEPROMread 007B                 ?_Eeprom_Write_Crc 0072  
                      __end_ofPL2 02AF                        __end_ofPL4 02BF                        __end_ofPL6 02CD  
                      __end_ofPL8 02D6                ??_Eeprom_Write_Crc 007A                   ??i1_CRC16_CCITT 0072  
             i1_All_Page_Read_CRC 00D7                        __pmaintext 002F          ?_data_check_erase_or_not 0072  
                      __pintentry 0004                iap_usart_send@data 0072              ?i1_All_Page_Read_CRC 0072  
                      _iap_mem_rd 00BC                           _BSR_TMP 0071                           _UR1RXNE 2470  
                   ??_CRC16_CCITT 002C             __size_of_iap_mem_prog 0007                           _DelayUs 02E3  
           __end_of_iap_mem_erase 02E3          __end_of_iap_wait_tx_idle 0278       __size_of_Power_On_App_Check 001C  
                EEPROMread@EEAddr 002C                         ?_user_isr 0072                           __ptext0 0000  
                         __ptext1 0038                           __ptext2 004C                           __ptext3 0068  
                         __ptext4 007B                           __ptext5 00BC                           __ptext6 009D  
                         __ptext8 011A                           __ptext9 0275             ??i1_All_Page_Read_CRC 0078  
        data_check_erase_or_not@i 007B          data_check_erase_or_not@j 0079          data_check_erase_or_not@k 007A  
                    __size_of_ISR 001B                      _iap_err_flag 0101                      _iap_mem_prog 0253  
                    CRC16_CCITT@i 0031                           clrloop0 02FC              end_of_initialization 002C  
                user_isr@iap_addr 0029             __end_of_iap_usart_rec 0275               __end_of_CRC16_CCITT 00BC  
                      ??_user_isr 0025                        _uart_rxnef 0103                       ?_iap_mem_rd 0072  
                   ?_Unlock_Flash 0072                   CRC16_CCITT@data 0030                    i1CRC16_CCITT@i 0077  
                     __end_ofPL10 02DC                       __end_ofPL12 011A               start_initialization 0021  
                     __end_of_ISR 001F                    ??_Unlock_Flash 0072                       _CRC16_CCITT 009D  
       __size_of_Eeprom_Write_Crc 0015               __size_of_iap_mem_rd 0006                       __pbssBIGRAM 236B  
    Power_On_App_Check@CRC_Eeprom 0034  __size_of_data_check_erase_or_not 0032                         ___latbits 0003  
                   __pcstackBANK0 0025           __size_of_iap_usart_init 0014           __size_of_iap_usart_send 0007  
           __end_ofi1_CRC16_CCITT 0115                          ?_DelayUs 0072                     ?i1_iap_mem_rd 0072  
               ?_iap_wait_tx_idle 0072                ??_iap_wait_tx_idle 0072                         __pswtext1 02EB  
               __size_of_user_isr 0100                       _iap_databuf 236B                         _read_flag 0100  
                     _iap_ok_flag 0102                       _iap_recdata 0022                    ??i1_iap_mem_rd 0072  
                        DelayUs@a 0072                         clear_ram0 02FB        __end_of_Power_On_App_Check 0068  
                        _UR1DATAL 048C       __end_ofi1_All_Page_Read_CRC 00F6                          _UR1RXNEF 2490  
            __end_of_Unlock_Flash 0282                      ??_iap_mem_rd 002C            __size_of_iap_mem_erase 0007  
                _Eeprom_Write_Crc 00C2                  __size_of_DelayUs 0008                __end_of_iap_mem_rd 00C2  
          __size_of_iap_usart_rec 001B           _data_check_erase_or_not 021A                        _EEPROMread 0068  
                  _iap_usart_init 0038                    _iap_usart_send 024C                          __ptext10 024C  
                        __ptext11 025A                          __ptext20 0278                          __ptext12 02E3  
                        __ptext13 02DC                          __ptext14 021A                          __ptext15 00C2  
                        __ptext16 00D7                          __ptext17 0282                          __ptext18 00F6  
                        __ptext19 0253                      ?_CRC16_CCITT 0072                     __size_of_main 0009  
                   _iap_mem_erase 02DC            EEPROMread@ReEEPROMread 002D                          int$flags 007E  
       All_Page_Read_CRC@iap_addr 0032                          _user_isr 011A              __end_ofi1_iap_mem_rd 0288  
          __end_of_iap_usart_init 004C            __end_of_iap_usart_send 0253       data_check_erase_or_not@addr 0072  
     data_check_erase_or_not@mode 0074                          intlevel1 0000                     _iap_usart_rec 025A  
                  ?_iap_mem_erase 0072                         user_isr@i 002B             __size_of_Unlock_Flash 000A  
       ??_data_check_erase_or_not 0075                 _All_Page_Read_CRC 007B         __size_of_iap_wait_tx_idle 0003  
                 ?_iap_usart_init 0072                     ?_iap_mem_prog 0072                   ?_iap_usart_send 0072  
                     ?_EEPROMread 0072                ?_All_Page_Read_CRC 0072                      _Unlock_Flash 0278  
     i1All_Page_Read_CRC@iap_addr 0078                    ?_iap_usart_rec 0072               ??_All_Page_Read_CRC 0032  
