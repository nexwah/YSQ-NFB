

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Nov 16 11:46:24 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F14X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text15,local,class=CODE,merge=1,delta=2
    13                           	psect	pa_nodes0,global,class=CODE,delta=2
    14                           	dabs	1,0x24,1,_CRC_H
    15                           	dabs	1,0x23,1,_CRC_L
    16                           	dabs	1,0x103,0,_uart_rxnef
    17                           	dabs	1,0x20,1
    18                           	dabs	1,0x102,0,_iap_ok_flag
    19                           	dabs	1,0x20,1
    20                           	dabs	1,0x101,0,_iap_err_flag
    21                           	dabs	1,0x20,1
    22                           	dabs	1,0x100,0,_read_flag
    23                           	dabs	1,0x20,1
    24                           	dabs	1,0x71,1,_BSR_TMP
    25                           	dabs	1,0x70,1,_W_TMP
    26                           	dabs	1,0x23,2,_CRC_16
    27                           	dabs	1,0x22,1,_iap_recdata
    28                           	dabs	1,0x21,1,_count
    29                           	dabs	1,0x20,1,_flag
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 
    34                           ; 
    35                           ; SFR Addresses
    36  0000                     
    37                           	psect	text0
    38  0000                     __ptext0:		;_read_flag
    39  0008                     _BSREG	set	8
    40  005F                     _GIE	set	95
    41  005E                     _PEIE	set	94
    42  009A                     _PCKEN	set	154
    43  0099                     _OSCCON	set	153
    44  008D                     _TRISB	set	141
    45  019F                     _AFP1	set	415
    46  0195                     _EECON1	set	405
    47  0194                     _EEDATH	set	404
    48  0193                     _EEDATL	set	403
    49  0192                     _EEADRH	set	402
    50  0191                     _EEADRL	set	401
    51  0CAF                     _EEPGD	set	3247
    52  0CAE                     _CFGS	set	3246
    53  0CA8                     _RD	set	3240
    54  0494                     _URDLL	set	1172
    55  0492                     _URLSR	set	1170
    56  0491                     _URMCR	set	1169
    57  048F                     _URLCR	set	1167
    58  048C                     _URDATAL	set	1164
    59  24E0                     _TCF	set	9440
    60  2493                     _FEF	set	9363
    61  2490                     _RXNEF	set	9360
    62  2470                     _URRXNE	set	9328
    63                           
    64                           	psect	cinit
    65  0021                     start_initialization:	
    66                           ; #config settings
    67                           
    68  0021                     __initialization:	
    69                           
    70                           ; Clear objects allocated to BANK1
    71  0021  30A0               	movlw	low __pbssBANK1
    72  0022  0084               	movwf	4
    73  0023  3000               	movlw	high __pbssBANK1
    74  0024  0085               	movwf	5
    75  0025  3045               	movlw	69
    76  0026  3182  22A6  3180   	fcall	clear_ram0
    77  0029                     end_of_initialization:	
    78                           ;End of C runtime variable initialization code
    79                           
    80  0029                     __end_of__initialization:	
    81  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    82  002A  0020               	movlb	0
    83  002B  282C               	ljmp	_main	;jump to C main() function
    84  002C                     __pmaintext:	
    85                           ; 1 bytes @ 0xA
    86 ;;
    87 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    88 ;;
    89 ;; *************** function _main *****************
    90 ;; Defined at:
    91 ;;		line 348 in file "IAP_FW.C"
    92 ;; Parameters:    Size  Location     Type
    93 ;;		None
    94 ;; Auto vars:     Size  Location     Type
    95 ;;		None
    96 ;; Return value:  Size  Location     Type
    97 ;;                  1    wreg      void 
    98 ;; Registers used:
    99 ;;		wreg, status,2, status,0, pclath, cstack
   100 ;; Tracked objects:
   101 ;;		On entry : B1F/0
   102 ;;		On exit  : 0/0
   103 ;;		Unchanged: 0/0
   104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   105 ;;      Params:         0       0       0       0       0       0       0       0
   106 ;;      Locals:         0       0       0       0       0       0       0       0
   107 ;;      Temps:          0       0       0       0       0       0       0       0
   108 ;;      Totals:         0       0       0       0       0       0       0       0
   109 ;;Total ram usage:        0 bytes
   110 ;; Hardware stack levels required when called:    8
   111 ;; This function calls:
   112 ;;		_Power_On_App_Check
   113 ;;		_iap_usart_init
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           
   120                           ;psect for function _main
   121  002C                     _main:	
   122                           
   123                           ;IAP_FW.C: 350: iap_usart_init();
   124                           
   125                           ;incstack = 0
   126                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   127  002C  2035  3180         	fcall	_iap_usart_init
   128                           
   129                           ;IAP_FW.C: 351: Power_On_App_Check();
   130  002E  2048               	fcall	_Power_On_App_Check
   131                           
   132                           ;IAP_FW.C: 353: GIE=1;
   133  002F  178B               	bsf	11,7	;volatile
   134                           
   135                           ;IAP_FW.C: 354: PEIE=1;
   136  0030  170B               	bsf	11,6	;volatile
   137                           
   138                           ;IAP_FW.C: 356: if(read_flag !=1)
   139  0031  1C20               	btfss	32,0
   140  0032  2C00               	goto	1024	;# 
   141  0033                     l1736:	
   142                           ;IAP_FW.C: 359: }
   143                           ;IAP_FW.C: 360: while(1)
   144                           
   145  0033  0064               	clrwdt	;# 
   146  0034  2833               	goto	l1736
   147  0035                     __end_of_main:	
   148  0035                     __ptext1:	
   149 ;; *************** function _iap_usart_init *****************
   150 ;; Defined at:
   151 ;;		line 4 in file "USART_DRV.C"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg
   160 ;; Tracked objects:
   161 ;;		On entry : B1F/0
   162 ;;		On exit  : B1F/9
   163 ;;		Unchanged: B00/0
   164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   165 ;;      Params:         0       0       0       0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0       0
   168 ;;      Totals:         0       0       0       0       0       0       0       0
   169 ;;Total ram usage:        0 bytes
   170 ;; Hardware stack levels used:    1
   171 ;; Hardware stack levels required when called:    5
   172 ;; This function calls:
   173 ;;		Nothing
   174 ;; This function is called by:
   175 ;;		_main
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           
   180                           ;psect for function _iap_usart_init
   181  0035                     _iap_usart_init:	
   182                           
   183                           ;USART_DRV.C: 7: PCKEN = (0X1<<5 );
   184                           
   185                           ;incstack = 0
   186                           ; Regs used in _iap_usart_init: [wreg]
   187  0035  3020               	movlw	32
   188  0036  0021               	movlb	1	; select bank1
   189  0037  009A               	movwf	26	;volatile
   190                           
   191                           ;USART_DRV.C: 8: OSCCON = 0B01110001;
   192  0038  3071               	movlw	113
   193  0039  0099               	movwf	25	;volatile
   194                           
   195                           ;USART_DRV.C: 10: AFP1 = 0B00010100;
   196  003A  3014               	movlw	20
   197  003B  0023               	movlb	3	; select bank3
   198  003C  009F               	movwf	31	;volatile
   199                           
   200                           ;USART_DRV.C: 12: TRISB &= ~(0X1<<6 );
   201  003D  0021               	movlb	1	; select bank1
   202  003E  130D               	bcf	13,6	;volatile
   203                           
   204                           ;USART_DRV.C: 16: URDLL=9;
   205  003F  3009               	movlw	9
   206  0040  0029               	movlb	9	; select bank9
   207  0041  0094               	movwf	20	;volatile
   208                           
   209                           ;USART_DRV.C: 19: URLCR=(0x1 );
   210  0042  3001               	movlw	1
   211  0043  008F               	movwf	15	;volatile
   212                           
   213                           ;USART_DRV.C: 21: URMCR=(0X1<<4 )|(0x1<<3 );
   214  0044  3018               	movlw	24
   215  0045  0091               	movwf	17	;volatile
   216                           
   217                           ;USART_DRV.C: 23: URRXNE |= (0X1<<0 );
   218  0046  140E               	bsf	14,0	;volatile
   219  0047  0008               	return
   220  0048                     __end_of_iap_usart_init:	
   221  0048                     __ptext2:	
   222 ;; *************** function _Power_On_App_Check *****************
   223 ;; Defined at:
   224 ;;		line 88 in file "IAP_FW.C"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  CRC_Eeprom      2    8[BANK0 ] unsigned int 
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, pclath, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : B1F/9
   235 ;;		On exit  : 1F/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   238 ;;      Params:         0       0       0       0       0       0       0       0
   239 ;;      Locals:         0       2       0       0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0       0       0       0
   241 ;;      Totals:         0       2       0       0       0       0       0       0
   242 ;;Total ram usage:        2 bytes
   243 ;; Hardware stack levels used:    1
   244 ;; Hardware stack levels required when called:    7
   245 ;; This function calls:
   246 ;;		_All_Page_Read_CRC
   247 ;;		_EEPROMread
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _Power_On_App_Check
   255  0048                     _Power_On_App_Check:	
   256                           
   257                           ;IAP_FW.C: 90: unsigned int CRC_Eeprom;
   258                           ;IAP_FW.C: 92: count=0;
   259                           
   260                           ;incstack = 0
   261                           ; Regs used in _Power_On_App_Check: [wreg+status,2+status,0+pclath+cstack]
   262  0048  0020               	movlb	0	; select bank0
   263  0049  3000               	movlw	0
   264  004A  01A1               	clrf	33
   265                           
   266                           ;IAP_FW.C: 93: flag=0;
   267  004B  01A0               	clrf	32
   268                           
   269                           ;IAP_FW.C: 95: CRC_Eeprom=EEPROMread(0);
   270  004C  2064  3180         	fcall	_EEPROMread
   271  004E  00AD               	movwf	Power_On_App_Check@CRC_Eeprom
   272  004F  01AE               	clrf	Power_On_App_Check@CRC_Eeprom+1
   273                           
   274                           ;IAP_FW.C: 96: CRC_Eeprom= CRC_Eeprom << 8;
   275  0050  00AE               	movwf	Power_On_App_Check@CRC_Eeprom+1
   276  0051  3001               	movlw	1
   277  0052  01AD               	clrf	Power_On_App_Check@CRC_Eeprom
   278                           
   279                           ;IAP_FW.C: 97: CRC_Eeprom= CRC_Eeprom + EEPROMread(1);
   280  0053  2064  3180         	fcall	_EEPROMread
   281  0055  07AD               	addwf	Power_On_App_Check@CRC_Eeprom,f
   282  0056  1803               	skipnc
   283  0057  0AAE               	incf	Power_On_App_Check@CRC_Eeprom+1,f
   284                           
   285                           ;IAP_FW.C: 99: All_Page_Read_CRC();
   286  0058  2077  3180         	fcall	_All_Page_Read_CRC
   287                           
   288                           ;IAP_FW.C: 100: read_flag=1;
   289  005A  1420               	bsf	32,0
   290                           
   291                           ;IAP_FW.C: 101: if(CRC_Eeprom == CRC_16)
   292  005B  0824               	movf	36,w
   293  005C  062E               	xorwf	Power_On_App_Check@CRC_Eeprom+1,w
   294  005D  1D03               	skipz
   295  005E  2861               	goto	u755
   296  005F  0823               	movf	35,w
   297  0060  062D               	xorwf	Power_On_App_Check@CRC_Eeprom,w
   298  0061                     u755:	
   299  0061  1903               	btfsc	3,2
   300                           
   301                           ;IAP_FW.C: 102: {
   302                           ;IAP_FW.C: 103: read_flag=0;
   303  0062  1020               	bcf	32,0
   304  0063  0008               	return
   305  0064                     __end_of_Power_On_App_Check:	
   306  0064                     __ptext3:	
   307 ;; *************** function _EEPROMread *****************
   308 ;; Defined at:
   309 ;;		line 47 in file "MEM_DRV.C"
   310 ;; Parameters:    Size  Location     Type
   311 ;;  EEAddr          1    wreg     unsigned char 
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  EEAddr          1    0[BANK0 ] unsigned char 
   314 ;;  ReEEPROMread    1    1[BANK0 ] unsigned char 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      unsigned char 
   317 ;; Registers used:
   318 ;;		wreg
   319 ;; Tracked objects:
   320 ;;		On entry : 1F/0
   321 ;;		On exit  : 1F/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   324 ;;      Params:         0       0       0       0       0       0       0       0
   325 ;;      Locals:         0       2       0       0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0       0       0       0
   327 ;;      Totals:         0       2       0       0       0       0       0       0
   328 ;;Total ram usage:        2 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; Hardware stack levels required when called:    5
   331 ;; This function calls:
   332 ;;		Nothing
   333 ;; This function is called by:
   334 ;;		_Power_On_App_Check
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           
   339                           ;psect for function _EEPROMread
   340  0064                     _EEPROMread:	
   341                           
   342                           ;incstack = 0
   343                           ; Regs used in _EEPROMread: [wreg]
   344                           ;EEPROMread@EEAddr stored from wreg
   345  0064  00A5               	movwf	EEPROMread@EEAddr
   346                           
   347                           ;MEM_DRV.C: 49: unsigned char ReEEPROMread;
   348                           ;MEM_DRV.C: 51: EEADRL = EEAddr;
   349  0065  0023               	movlb	3	; select bank3
   350  0066  0091               	movwf	17	;volatile
   351                           
   352                           ;MEM_DRV.C: 53: EEPGD=0;
   353  0067  1395               	bcf	21,7	;volsfr
   354                           
   355                           ;MEM_DRV.C: 54: CFGS=0;
   356  0068  1315               	bcf	21,6	;volsfr
   357                           
   358                           ;MEM_DRV.C: 55: RD = 1;
   359  0069  1415               	bsf	21,0	;volsfr
   360                           
   361                           ;MEM_DRV.C: 56: __nop();
   362  006A  0000               	nop
   363                           
   364                           ;MEM_DRV.C: 57: __nop();
   365  006B  0000               	nop
   366                           
   367                           ;MEM_DRV.C: 58: __nop();
   368  006C  0000               	nop
   369                           
   370                           ;MEM_DRV.C: 59: __nop();
   371  006D  0000               	nop
   372                           
   373                           ;MEM_DRV.C: 60: ReEEPROMread = EEDATL;
   374  006E  0023               	movlb	3	; select bank3
   375  006F  0813               	movf	19,w	;volatile
   376  0070  0020               	movlb	0	; select bank0
   377  0071  00A6               	movwf	EEPROMread@ReEEPROMread
   378                           
   379                           ;MEM_DRV.C: 61: RD=0;
   380  0072  0023               	movlb	3	; select bank3
   381  0073  1015               	bcf	21,0	;volsfr
   382                           
   383                           ;MEM_DRV.C: 62: return ReEEPROMread;
   384  0074  0020               	movlb	0	; select bank0
   385  0075  0826               	movf	EEPROMread@ReEEPROMread,w
   386  0076  0008               	return
   387  0077                     __end_of_EEPROMread:	
   388  0077                     __ptext4:	
   389 ;; *************** function _All_Page_Read_CRC *****************
   390 ;; Defined at:
   391 ;;		line 59 in file "IAP_FW.C"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  iap_addr        2    6[BANK0 ] unsigned int 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 1F/0
   402 ;;		On exit  : 1F/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   405 ;;      Params:         0       0       0       0       0       0       0       0
   406 ;;      Locals:         0       2       0       0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0
   408 ;;      Totals:         0       2       0       0       0       0       0       0
   409 ;;Total ram usage:        2 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; Hardware stack levels required when called:    6
   412 ;; This function calls:
   413 ;;		_CRC16_CCITT
   414 ;;		_iap_mem_rd
   415 ;; This function is called by:
   416 ;;		_Power_On_App_Check
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _All_Page_Read_CRC
   422  0077                     _All_Page_Read_CRC:	
   423                           
   424                           ;IAP_FW.C: 61: unsigned int iap_addr;
   425                           ;IAP_FW.C: 62: CRC_16 = 0;
   426                           
   427                           ;incstack = 0
   428                           ; Regs used in _All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
   429                           
   430                           ;IAP_FW.C: 63: EECON1 = (0x1<<7 )|(0X1<<2 );
   431  0077  3182  2291  3180   	fcall	PL10	;call to abstracted procedure
   432  007A  0095               	movwf	21	;volsfr
   433                           
   434                           ;IAP_FW.C: 64: for(iap_addr=0X400;iap_addr<0x1000;iap_addr++)
   435  007B  0020               	movlb	0	; select bank0
   436  007C  3004               	movlw	4
   437  007D  01AB               	clrf	All_Page_Read_CRC@iap_addr
   438  007E  00AC               	movwf	All_Page_Read_CRC@iap_addr+1
   439  007F                     l5881:	
   440                           
   441                           ;IAP_FW.C: 65: {
   442                           ;IAP_FW.C: 66: EEADRH = iap_addr>>8;
   443  007F  082C               	movf	All_Page_Read_CRC@iap_addr+1,w
   444  0080  0023               	movlb	3	; select bank3
   445  0081  0092               	movwf	18	;volatile
   446                           
   447                           ;IAP_FW.C: 67: EEADRL = iap_addr>>0;
   448  0082  0020               	movlb	0	; select bank0
   449  0083  082B               	movf	All_Page_Read_CRC@iap_addr,w
   450  0084  0023               	movlb	3	; select bank3
   451  0085  0091               	movwf	17	;volatile
   452                           
   453                           ;IAP_FW.C: 68: iap_mem_rd();
   454  0086  20B9  3180         	fcall	_iap_mem_rd
   455                           
   456                           ;IAP_FW.C: 69: CRC16_CCITT(EEDATL);
   457  0088  0813               	movf	19,w	;volatile
   458  0089  209A  3180         	fcall	_CRC16_CCITT
   459                           
   460                           ;IAP_FW.C: 70: CRC16_CCITT(EEDATH);
   461  008B  0023               	movlb	3	; select bank3
   462  008C  0814               	movf	20,w	;volatile
   463  008D  209A  3180         	fcall	_CRC16_CCITT
   464  008F  0AAB               	incf	All_Page_Read_CRC@iap_addr,f
   465  0090  1903               	skipnz
   466  0091  0AAC               	incf	All_Page_Read_CRC@iap_addr+1,f
   467  0092  3010               	movlw	16
   468  0093  022C               	subwf	All_Page_Read_CRC@iap_addr+1,w
   469  0094  3000               	movlw	0
   470  0095  1903               	skipnz
   471  0096  022B               	subwf	All_Page_Read_CRC@iap_addr,w
   472  0097  1803               	btfsc	3,0
   473  0098  0008               	return
   474  0099  287F               	goto	l5881
   475  009A                     __end_of_All_Page_Read_CRC:	
   476  009A                     __ptext6:	
   477 ;; *************** function _CRC16_CCITT *****************
   478 ;; Defined at:
   479 ;;		line 43 in file "IAP_FW.C"
   480 ;; Parameters:    Size  Location     Type
   481 ;;  data            1    wreg     unsigned char 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  data            1    4[BANK0 ] unsigned char 
   484 ;;  i               1    5[BANK0 ] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0
   489 ;; Tracked objects:
   490 ;;		On entry : 1F/3
   491 ;;		On exit  : 1F/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   494 ;;      Params:         0       0       0       0       0       0       0       0
   495 ;;      Locals:         0       2       0       0       0       0       0       0
   496 ;;      Temps:          0       4       0       0       0       0       0       0
   497 ;;      Totals:         0       6       0       0       0       0       0       0
   498 ;;Total ram usage:        6 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    5
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_All_Page_Read_CRC
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _CRC16_CCITT
   510  009A                     _CRC16_CCITT:	
   511                           
   512                           ;incstack = 0
   513                           ; Regs used in _CRC16_CCITT: [wreg+status,2+status,0]
   514                           ;CRC16_CCITT@data stored from wreg
   515  009A  0020               	movlb	0	; select bank0
   516  009B  00A9               	movwf	CRC16_CCITT@data
   517                           
   518                           ;IAP_FW.C: 46: unsigned char i;
   519                           ;IAP_FW.C: 48: CRC_16 ^= data;
   520  009C  06A3               	xorwf	35,f
   521                           
   522                           ;IAP_FW.C: 50: for(i = 0;i < 8;i++)
   523  009D  01AA               	clrf	CRC16_CCITT@i
   524  009E                     l1639:	
   525                           
   526                           ;IAP_FW.C: 51: {
   527                           ;IAP_FW.C: 52: if(CRC_16 & 0x01)
   528  009E  1C23               	btfss	35,0
   529  009F  28B1               	goto	l5833
   530                           
   531                           ;IAP_FW.C: 53: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
   532  00A0  0824               	movf	36,w
   533  00A1  00A6               	movwf	??_CRC16_CCITT+1
   534  00A2  0823               	movf	35,w
   535  00A3  00A5               	movwf	??_CRC16_CCITT
   536  00A4  3008               	movlw	8
   537  00A5  36A6               	lsrf	??_CRC16_CCITT+1,f
   538  00A6  0CA5               	rrf	??_CRC16_CCITT,f
   539  00A7  0625               	xorwf	??_CRC16_CCITT,w
   540  00A8  00A7               	movwf	??_CRC16_CCITT+2
   541  00A9  3084               	movlw	132
   542  00AA  0626               	xorwf	??_CRC16_CCITT+1,w
   543  00AB  00A8               	movwf	??_CRC16_CCITT+3
   544  00AC  0827               	movf	??_CRC16_CCITT+2,w
   545  00AD  00A3               	movwf	35
   546  00AE  0828               	movf	??_CRC16_CCITT+3,w
   547  00AF  00A4               	movwf	36
   548  00B0  28B3               	goto	l1642
   549  00B1                     l5833:	
   550                           
   551                           ;IAP_FW.C: 54: else
   552                           ;IAP_FW.C: 55: CRC_16 = CRC_16 >> 1;
   553  00B1  36A4               	lsrf	36,f
   554  00B2  0CA3               	rrf	35,f
   555  00B3                     l1642:	
   556  00B3  3008               	movlw	8
   557  00B4  0AAA               	incf	CRC16_CCITT@i,f
   558  00B5  022A               	subwf	CRC16_CCITT@i,w
   559  00B6  1803               	btfsc	3,0
   560  00B7  0008               	return
   561  00B8  289E               	goto	l1639
   562  00B9                     __end_of_CRC16_CCITT:	
   563  00B9                     __ptext5:	
   564 ;; *************** function _iap_mem_rd *****************
   565 ;; Defined at:
   566 ;;		line 33 in file "MEM_DRV.C"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		None
   575 ;; Tracked objects:
   576 ;;		On entry : 1F/3
   577 ;;		On exit  : 1F/3
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   580 ;;      Params:         0       0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    5
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_All_Page_Read_CRC
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _iap_mem_rd
   596  00B9                     _iap_mem_rd:	
   597                           
   598                           ;MEM_DRV.C: 35: EECON1 |=(0x1<<0 );
   599                           
   600                           ;incstack = 0
   601                           ; Regs used in _iap_mem_rd: []
   602  00B9  1415               	bsf	21,0	;volsfr
   603  00BA  0000               	nop	;# 
   604  00BB                     l3351:	
   605                           ;MEM_DRV.C: 37: while(EECON1 & (0x1<<0 ));
   606                           
   607  00BB  0023               	movlb	3	; select bank3
   608  00BC  1815               	btfsc	21,0	;volsfr
   609  00BD  28BB               	goto	l3351
   610  00BE  0008               	return
   611  00BF                     __end_of_iap_mem_rd:	
   612                           
   613                           	psect	bssBANK1
   614  00A0                     __pbssBANK1:	
   615  00A0                     _iap_databuf:	
   616  00A0                     	ds	69
   617                           
   618                           	psect	clrtext
   619  02A6                     clear_ram0:	
   620                           ;	Called with FSR0 containing the base address, and
   621                           ;	WREG with the size to clear
   622                           
   623  02A6  0064               	clrwdt	;clear the watchdog before getting into this loop
   624  02A7                     clrloop0:	
   625  02A7  0180               	clrf	0	;clear RAM location pointed to by FSR
   626  02A8  3101               	addfsr 0,1
   627  02A9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   628  02AA  2AA7               	goto	clrloop0	;have we reached the end yet?
   629  02AB  3400               	retlw	0	;all done for this memory range, return
   630                           
   631                           	psect	cstackCOMMON
   632  0072                     __pcstackCOMMON:	
   633  0072                     ?_iap_mem_rd:	
   634  0072                     ?_iap_mem_prog:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0072                     ??_iap_mem_prog:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0072                     ?_EEPROMread:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0072                     ?_user_isr:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0072                     ?_iap_usart_send:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0072                     ??_iap_usart_send:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0072                     ?_iap_usart_rec:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0072                     ?_iap_mem_erase:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0072                     ??_iap_mem_erase:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0072                     ?_iap_wait_tx_idle:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0072                     ??_iap_wait_tx_idle:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0072                     ?_iap_usart_init:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0072                     ?_CRC16_CCITT:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0072                     ?_All_Page_Read_CRC:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0072                     ?_Eeprom_Write_Crc:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0072                     ?_Power_On_App_Check:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0072                     ?_data_check_erase_or_not:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0072                     ?_ISR:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0072                     ?_main:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0072                     ?_Unlock_Flash:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0072                     ??_Unlock_Flash:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0072                     ?_DelayUs:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0072                     ??_DelayUs:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0072                     ?i1_CRC16_CCITT:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0072                     ??i1_CRC16_CCITT:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0072                     ?i1_All_Page_Read_CRC:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0072                     ?i1_iap_mem_rd:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0072                     ??i1_iap_mem_rd:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0072                     DelayUs@a:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0072                     iap_usart_send@data:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0072                     data_check_erase_or_not@addr:	
   725                           ; 1 bytes @ 0x0
   726                           
   727                           
   728                           ; 2 bytes @ 0x0
   729  0072                     	ds	1
   730  0073                     ??_iap_usart_rec:	
   731  0073                     iap_usart_rec@a:	
   732                           ; 1 bytes @ 0x1
   733                           
   734                           
   735                           ; 2 bytes @ 0x1
   736  0073                     	ds	1
   737  0074                     data_check_erase_or_not@mode:	
   738                           
   739                           ; 1 bytes @ 0x2
   740  0074                     	ds	1
   741  0075                     ??_data_check_erase_or_not:	
   742                           
   743                           ; 1 bytes @ 0x3
   744  0075                     	ds	1
   745  0076                     data_check_erase_or_not@j:	
   746  0076                     i1CRC16_CCITT@data:	
   747                           ; 1 bytes @ 0x4
   748                           
   749                           
   750                           ; 1 bytes @ 0x4
   751  0076                     	ds	1
   752  0077                     data_check_erase_or_not@k:	
   753  0077                     i1CRC16_CCITT@i:	
   754                           ; 1 bytes @ 0x5
   755                           
   756                           
   757                           ; 1 bytes @ 0x5
   758  0077                     	ds	1
   759  0078                     ??i1_All_Page_Read_CRC:	
   760  0078                     data_check_erase_or_not@i:	
   761                           ; 1 bytes @ 0x6
   762                           
   763  0078                     i1All_Page_Read_CRC@iap_addr:	
   764                           ; 1 bytes @ 0x6
   765                           
   766                           
   767                           ; 2 bytes @ 0x6
   768  0078                     	ds	2
   769  007A                     ??_user_isr:	
   770  007A                     ??_Eeprom_Write_Crc:	
   771                           ; 1 bytes @ 0x8
   772                           
   773                           
   774                           ; 1 bytes @ 0x8
   775  007A                     	ds	1
   776  007B                     user_isr@iap_addr:	
   777                           
   778                           ; 2 bytes @ 0x9
   779  007B                     	ds	2
   780  007D                     user_isr@i:	
   781                           
   782                           ; 1 bytes @ 0xB
   783  007D                     	ds	1
   784  007E                     ??_ISR:	
   785                           
   786                           	psect	cstackBANK0
   787  0025                     __pcstackBANK0:	
   788                           ; 1 bytes @ 0xC
   789                           
   790  0025                     ??_iap_mem_rd:	
   791  0025                     ??_EEPROMread:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0025                     ??_iap_usart_init:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0025                     ??_CRC16_CCITT:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0025                     EEPROMread@EEAddr:	
   801                           ; 1 bytes @ 0x0
   802                           
   803                           
   804                           ; 1 bytes @ 0x0
   805  0025                     	ds	1
   806  0026                     EEPROMread@ReEEPROMread:	
   807                           
   808                           ; 1 bytes @ 0x1
   809  0026                     	ds	3
   810  0029                     CRC16_CCITT@data:	
   811                           
   812                           ; 1 bytes @ 0x4
   813  0029                     	ds	1
   814  002A                     CRC16_CCITT@i:	
   815                           
   816                           ; 1 bytes @ 0x5
   817  002A                     	ds	1
   818  002B                     ??_All_Page_Read_CRC:	
   819  002B                     All_Page_Read_CRC@iap_addr:	
   820                           ; 1 bytes @ 0x6
   821                           
   822                           
   823                           ; 2 bytes @ 0x6
   824  002B                     	ds	2
   825  002D                     ??_Power_On_App_Check:	
   826  002D                     Power_On_App_Check@CRC_Eeprom:	
   827                           ; 1 bytes @ 0x8
   828                           
   829                           
   830                           ; 2 bytes @ 0x8
   831  002D                     	ds	2
   832  002F                     ??_main:	
   833                           
   834                           	psect	intentry
   835  0004                     __pintentry:	
   836 ;; *************** function _ISR *****************
   837 ;; Defined at:
   838 ;;		line 141 in file "IAP_FW.C"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   852 ;;      Params:         0       0       0       0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0
   855 ;;      Totals:         0       0       0       0       0       0       0       0
   856 ;;Total ram usage:        0 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    4
   859 ;; This function calls:
   860 ;;		_user_isr
   861 ;; This function is called by:
   862 ;;		Interrupt level 1
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866  0004                     _ISR:	
   867                           
   868                           ;incstack = 0
   869  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   870                           
   871                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   872  0005  3180               	pagesel	$
   873  0006  0000               	nop	; ;# 
   874  0007  0000               	nop	; ;# 
   875  0008  0000               	nop	; ;# 
   876  0009  0000               	nop	; ;# 
   877  000A  0000               	nop	; ;# 
   878  000B  0000               	nop	; ;# 
   879  000C  0000               	nop	; ;# 
   880  000D  0000               	nop	; ;# 
   881  000E  0000               	nop	; ;# 
   882  000F  0000               	nop	; ;# 
   883  0010  0000               	nop	; ;# 
   884  0011  0000               	nop	; ;# 
   885  0012  0000               	nop	; ;# 
   886  0013  0000               	nop	; ;# 
   887  0014  0000               	nop	; ;# 
   888  0015  0000               	nop	; ;# 
   889  0016  0000               	nop	; ;# 
   890  0017  0000               	nop	; ;# 
   891  0018  0000               	nop	; ;# 
   892  0019  0000               	nop	; ;# 
   893  001A  0000               	nop	; ;# 
   894                           
   895                           ;IAP_FW.C: 166: user_isr();
   896  001B  3180  20D3         	fcall	_user_isr
   897  001D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   898  001E  0009               	retfie
   899  001F                     __end_of_ISR:	
   900                           
   901                           	psect	swtext1
   902  0296                     __pswtext1:	
   903  0296                     i1S6253:	
   904  0296  3180  28DE         	ljmp	i1l6039
   905  0298  3180  28E4         	ljmp	i1l6043
   906  029A  3180  28E6         	ljmp	i1l6047
   907  029C  3180  28E8         	ljmp	i1l6051
   908  029E  3180  28EA         	ljmp	i1l6055
   909  02A0  3180  28EC         	ljmp	i1l6059
   910  02A2  3180  28EE         	ljmp	i1l6063
   911  02A4  3180  28F0         	ljmp	i1l6067
   912                           
   913                           	psect	text15
   914  00BF                     __ptext15:	
   915 ;; *************** function _Eeprom_Write_Crc *****************
   916 ;; Defined at:
   917 ;;		line 73 in file "IAP_FW.C"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 1F/3
   928 ;;		On exit  : 1F/3
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   931 ;;      Params:         0       0       0       0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0
   934 ;;      Totals:         0       0       0       0       0       0       0       0
   935 ;;Total ram usage:        0 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    2
   938 ;; This function calls:
   939 ;;		_iap_mem_prog
   940 ;;		i1_All_Page_Read_CRC
   941 ;; This function is called by:
   942 ;;		_user_isr
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _Eeprom_Write_Crc
   948  00BF                     _Eeprom_Write_Crc:	
   949                           
   950                           ;IAP_FW.C: 75: All_Page_Read_CRC();
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _Eeprom_Write_Crc: [wreg+status,2+status,0+pclath+cstack]
   954  00BF  221B  3180         	fcall	i1_All_Page_Read_CRC
   955                           
   956                           ;IAP_FW.C: 77: EECON1 &=~(0x1<<7 );
   957  00C1  0023               	movlb	3	; select bank3
   958  00C2  1395               	bcf	21,7	;volsfr
   959                           
   960                           ;IAP_FW.C: 78: EECON1 =(0X1<<2 );
   961  00C3  3004               	movlw	4
   962  00C4  0095               	movwf	21	;volsfr
   963                           
   964                           ;IAP_FW.C: 80: EEADRL=0;
   965  00C5  0191               	clrf	17	;volatile
   966                           
   967                           ;IAP_FW.C: 81: EEDATL=CRC_H;
   968  00C6  0020               	movlb	0	; select bank0
   969  00C7  0824               	movf	36,w
   970  00C8  0023               	movlb	3	; select bank3
   971  00C9  0093               	movwf	19	;volatile
   972                           
   973                           ;IAP_FW.C: 82: iap_mem_prog();
   974  00CA  21E2  3180         	fcall	_iap_mem_prog
   975                           
   976                           ;IAP_FW.C: 83: EEADRL=1;
   977  00CC  3001               	movlw	1
   978  00CD  0091               	movwf	17	;volatile
   979                           
   980                           ;IAP_FW.C: 84: EEDATL=CRC_L;
   981  00CE  0020               	movlb	0	; select bank0
   982  00CF  0823               	movf	35,w
   983  00D0  0023               	movlb	3	; select bank3
   984  00D1  0093               	movwf	19	;volatile
   985                           
   986                           ;IAP_FW.C: 85: iap_mem_prog();
   987  00D2  29E2               	ljmp	i1l5839
   988  00D3                     __end_of_Eeprom_Write_Crc:	
   989  00D3                     __ptext8:	
   990 ;; *************** function _user_isr *****************
   991 ;; Defined at:
   992 ;;		line 168 in file "IAP_FW.C"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  iap_addr        2    9[COMMON] unsigned int 
   997 ;;  i               1   11[COMMON] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1007 ;;      Params:         0       0       0       0       0       0       0       0
  1008 ;;      Locals:         3       0       0       0       0       0       0       0
  1009 ;;      Temps:          1       0       0       0       0       0       0       0
  1010 ;;      Totals:         4       0       0       0       0       0       0       0
  1011 ;;Total ram usage:        4 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    3
  1014 ;; This function calls:
  1015 ;;		_Eeprom_Write_Crc
  1016 ;;		_data_check_erase_or_not
  1017 ;;		_iap_mem_erase
  1018 ;;		_iap_mem_prog
  1019 ;;		_iap_usart_rec
  1020 ;;		_iap_usart_send
  1021 ;;		_iap_wait_tx_idle
  1022 ;;		i1_CRC16_CCITT
  1023 ;; This function is called by:
  1024 ;;		_ISR
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _user_isr
  1030  00D3                     _user_isr:	
  1031                           
  1032                           ;IAP_FW.C: 171: if(URRXNE && RXNEF)
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _user_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1036  00D3  0029               	movlb	9	; select bank9
  1037  00D4  180E               	btfsc	14,0	;volatile
  1038  00D5  1C12               	btfss	18,0	;volatile
  1039  00D6  29A8               	goto	i1l1676
  1040                           
  1041                           ;IAP_FW.C: 172: {
  1042                           ;IAP_FW.C: 173: if(FEF==1)
  1043  00D7  1992               	btfsc	18,3	;volatile
  1044                           
  1045                           ;IAP_FW.C: 174: {FEF=0;}
  1046  00D8  1192               	bcf	18,3	;volatile
  1047                           
  1048                           ;IAP_FW.C: 175: iap_recdata = URDATAL;
  1049  00D9  080C               	movf	12,w	;volatile
  1050  00DA  0020               	movlb	0	; select bank0
  1051  00DB  00A2               	movwf	34
  1052                           
  1053                           ;IAP_FW.C: 176: count++;
  1054  00DC  0AA1               	incf	33,f
  1055                           
  1056                           ;IAP_FW.C: 177: switch(count)
  1057  00DD  28F6               	goto	i1l6073
  1058  00DE                     i1l6039:	
  1059                           
  1060                           ;IAP_FW.C: 180: if(iap_recdata!= 0x46)
  1061  00DE  3046               	movlw	70
  1062  00DF                     L1:	
  1063  00DF  0622               	xorwf	34,w
  1064  00E0  1903               	btfsc	3,2
  1065  00E1  2903               	goto	i1l1681
  1066  00E2                     i1l6041:	
  1067                           
  1068                           ;IAP_FW.C: 181: {iap_err_flag=1;}
  1069  00E2  14A0               	bsf	32,1
  1070  00E3  2903               	goto	i1l1681
  1071  00E4                     i1l6043:	
  1072                           
  1073                           ;IAP_FW.C: 184: if(iap_recdata != 0x4D)
  1074  00E4  304D               	movlw	77
  1075  00E5  28DF               	goto	L1
  1076  00E6                     i1l6047:	
  1077                           
  1078                           ;IAP_FW.C: 188: if(iap_recdata != 0x44)
  1079  00E6  3044               	movlw	68
  1080  00E7  28DF               	goto	L1
  1081  00E8                     i1l6051:	
  1082                           
  1083                           ;IAP_FW.C: 192: if(iap_recdata != 0x49)
  1084  00E8  3049               	movlw	73
  1085  00E9  28DF               	goto	L1
  1086  00EA                     i1l6055:	
  1087                           
  1088                           ;IAP_FW.C: 196: if(iap_recdata != 0x41)
  1089  00EA  3041               	movlw	65
  1090  00EB  28DF               	goto	L1
  1091  00EC                     i1l6059:	
  1092                           
  1093                           ;IAP_FW.C: 200: if(iap_recdata != 0x50)
  1094  00EC  3050               	movlw	80
  1095  00ED  28DF               	goto	L1
  1096  00EE                     i1l6063:	
  1097                           
  1098                           ;IAP_FW.C: 204: if(iap_recdata != 0x55)
  1099  00EE  3055               	movlw	85
  1100  00EF  28DF               	goto	L1
  1101  00F0                     i1l6067:	
  1102                           
  1103                           ;IAP_FW.C: 208: if(iap_recdata != 0xaa)
  1104  00F0  30AA               	movlw	170
  1105  00F1  0622               	xorwf	34,w
  1106  00F2  1D03               	btfss	3,2
  1107  00F3  28E2               	goto	i1l6041
  1108                           
  1109                           ;IAP_FW.C: 210: else
  1110                           ;IAP_FW.C: 211: {iap_ok_flag=1;}
  1111  00F4  1520               	bsf	32,2
  1112  00F5  2903               	goto	i1l1681
  1113  00F6                     i1l6073:	
  1114  00F6  0821               	movf	33,w
  1115                           
  1116                           ; Switch size 1, requested type "space"
  1117                           ; Number of cases is 8, Range of values is 1 to 8
  1118                           ; switch strategies available:
  1119                           ; Name         Instructions Cycles
  1120                           ; direct_byte           25     9 (fixed)
  1121                           ; simple_byte           25    13 (average)
  1122                           ; jumptable            263     9 (fixed)
  1123                           ;	Chosen strategy is direct_byte
  1124  00F7  3EFF               	addlw	-1
  1125  00F8  1C03               	skipc
  1126  00F9  28E2               	goto	i1l6041
  1127  00FA  0084               	movwf	4
  1128  00FB  3008               	movlw	8
  1129  00FC  0204               	subwf	4,w
  1130  00FD  1803               	skipnc
  1131  00FE  28E2               	goto	i1l6041
  1132  00FF  3182               	movlp	high i1S6253
  1133  0100  3504               	lslf	4,w
  1134  0101  3E96               	addlw	low i1S6253
  1135  0102  0082               	movwf	2
  1136  0103                     i1l1681:	
  1137                           
  1138                           ;IAP_FW.C: 217: if(iap_ok_flag==1)
  1139  0103  1D20               	btfss	32,2
  1140  0104  299F               	goto	i1l1698
  1141                           
  1142                           ;IAP_FW.C: 218: {
  1143                           ;IAP_FW.C: 219: count=0;
  1144  0105  01A1               	clrf	33
  1145                           
  1146                           ;IAP_FW.C: 220: iap_ok_flag =0;
  1147  0106  1120               	bcf	32,2
  1148                           
  1149                           ;IAP_FW.C: 221: unsigned char i ;
  1150                           ;IAP_FW.C: 222: unsigned int iap_addr;
  1151                           ;IAP_FW.C: 223: URRXNE &= ~(0X1<<0 );
  1152  0107  0029               	movlb	9	; select bank9
  1153  0108  100E               	bcf	14,0	;volatile
  1154                           
  1155                           ;IAP_FW.C: 224: EECON1 = (0x1<<7 )|(0X1<<2 );
  1156  0109  3084               	movlw	132
  1157  010A  0023               	movlb	3	; select bank3
  1158  010B  0095               	movwf	21	;volsfr
  1159                           
  1160                           ;IAP_FW.C: 225: iap_usart_send(0xaa);
  1161  010C  30AA               	movlw	170
  1162  010D                     L2:	
  1163  010D  21DB  3180         	fcall	_iap_usart_send
  1164                           
  1165                           ;IAP_FW.C: 231: switch(iap_databuf[0])
  1166  010F  2991               	goto	i1l6085
  1167  0110                     i1l1701:	
  1168                           ;IAP_FW.C: 232: {
  1169                           ;IAP_FW.C: 233: case 0X05:
  1170                           
  1171                           
  1172                           ;IAP_FW.C: 234: for(i=1;i<69;i++)
  1173  0110  01FD               	clrf	user_isr@i
  1174  0111  0AFD               	incf	user_isr@i,f
  1175  0112                     i1l6091:	
  1176                           
  1177                           ;IAP_FW.C: 235: {
  1178                           ;IAP_FW.C: 236: iap_databuf[i]=iap_usart_rec();
  1179  0112  087D               	movf	user_isr@i,w
  1180  0113  3EA0               	addlw	(low (_iap_databuf| 0))& (0+255)
  1181  0114  0086               	movwf	6
  1182  0115  0187               	clrf	7
  1183  0116  21E9  3180         	fcall	_iap_usart_rec
  1184  0118  0081               	movwf	1
  1185  0119  3045               	movlw	69
  1186  011A  0AFD               	incf	user_isr@i,f
  1187  011B  027D               	subwf	user_isr@i,w
  1188  011C  1C03               	skipc
  1189  011D  2912               	goto	i1l6091
  1190                           
  1191                           ;IAP_FW.C: 237: }
  1192                           ;IAP_FW.C: 238: CRC_16 = 0;
  1193  011E  0020               	movlb	0	; select bank0
  1194  011F  01A3               	clrf	35
  1195  0120  01A4               	clrf	36
  1196                           
  1197                           ;IAP_FW.C: 239: for(i=0;i<67;i++)
  1198  0121  01FD               	clrf	user_isr@i
  1199  0122                     i1l6103:	
  1200                           
  1201                           ;IAP_FW.C: 240: {
  1202                           ;IAP_FW.C: 241: CRC16_CCITT(iap_databuf[i]);
  1203  0122  087D               	movf	user_isr@i,w
  1204  0123  3EA0               	addlw	(low (_iap_databuf| 0))& (0+255)
  1205  0124  0086               	movwf	6
  1206  0125  0187               	clrf	7
  1207  0126  0801               	movf	1,w
  1208  0127  223B  3180         	fcall	i1_CRC16_CCITT
  1209  0129  3043               	movlw	67
  1210  012A  0AFD               	incf	user_isr@i,f
  1211  012B  027D               	subwf	user_isr@i,w
  1212  012C  1C03               	skipc
  1213  012D  2922               	goto	i1l6103
  1214                           
  1215                           ;IAP_FW.C: 242: }
  1216                           ;IAP_FW.C: 243: if((CRC_H !=iap_databuf[67]) || (CRC_L !=iap_databuf[68]))
  1217  012E  0021               	movlb	1	; select bank1
  1218  012F  0863               	movf	(_iap_databuf^(0+128)+67),w
  1219  0130  0020               	movlb	0	; select bank0
  1220  0131  0624               	xorwf	36,w
  1221  0132  1D03               	skipz
  1222  0133  2982               	goto	i1l6179
  1223  0134  0021               	movlb	1	; select bank1
  1224  0135  0864               	movf	(_iap_databuf^(0+128)+68),w
  1225  0136  0020               	movlb	0	; select bank0
  1226  0137  0623               	xorwf	35,w
  1227  0138  1D03               	btfss	3,2
  1228  0139  2982               	goto	i1l6179
  1229                           
  1230                           ;IAP_FW.C: 247: }
  1231                           ;IAP_FW.C: 248: iap_addr = iap_databuf[1];
  1232                           
  1233                           ;IAP_FW.C: 246: break;
  1234                           
  1235                           ;IAP_FW.C: 244: {
  1236                           ;IAP_FW.C: 245: iap_usart_send(0x44);
  1237                           
  1238                           ;IAP_FW.C: 249: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1239  013A  2279  3180         	fcall	PL4	;call to abstracted procedure
  1240                           
  1241                           ;IAP_FW.C: 250: if(iap_addr < 0X400)
  1242  013C  3004               	movlw	4
  1243  013D  027C               	subwf	user_isr@iap_addr+1,w
  1244  013E  3000               	movlw	0
  1245  013F  1903               	skipnz
  1246  0140  027B               	subwf	user_isr@iap_addr,w
  1247  0141  1C03               	btfss	3,0
  1248  0142  2982               	goto	i1l6179
  1249                           
  1250                           ;IAP_FW.C: 254: }
  1251                           ;IAP_FW.C: 255: if(data_check_erase_or_not(iap_addr,1))
  1252                           
  1253                           ;IAP_FW.C: 253: break;
  1254                           
  1255                           ;IAP_FW.C: 251: {
  1256                           ;IAP_FW.C: 252: iap_usart_send(0x44);
  1257  0143  228B  3180         	fcall	PL8	;call to abstracted procedure
  1258  0145  0AF4               	incf	data_check_erase_or_not@mode,f
  1259  0146  21AA  3180         	fcall	_data_check_erase_or_not
  1260  0148  3A00               	xorlw	0
  1261  0149  1D03               	btfss	3,2
  1262  014A  2977               	goto	L3
  1263                           
  1264                           ;IAP_FW.C: 263: else
  1265                           ;IAP_FW.C: 264: {
  1266                           ;IAP_FW.C: 265: if(data_check_erase_or_not(iap_addr,0))
  1267                           
  1268                           ;IAP_FW.C: 262: }
  1269                           
  1270                           ;IAP_FW.C: 260: }
  1271                           ;IAP_FW.C: 261: iap_usart_send(0X00);
  1272                           
  1273                           ;IAP_FW.C: 258: {
  1274                           ;IAP_FW.C: 259: Eeprom_Write_Crc();
  1275                           
  1276                           ;IAP_FW.C: 256: {
  1277                           ;IAP_FW.C: 257: if(iap_addr == (0x1000-0x20))
  1278  014B  228B  3180         	fcall	PL8	;call to abstracted procedure
  1279  014D  21AA  3180         	fcall	_data_check_erase_or_not
  1280  014F  3A00               	xorlw	0
  1281  0150  1903               	skipnz
  1282  0151  295C               	goto	i1l6147
  1283                           
  1284                           ;IAP_FW.C: 266: {
  1285                           ;IAP_FW.C: 267: for(i=0;i<64;i=i+2)
  1286  0152  01FD               	clrf	user_isr@i
  1287  0153                     i1l6133:	
  1288                           
  1289                           ;IAP_FW.C: 268: {
  1290                           ;IAP_FW.C: 269: EEADRH = iap_addr>>8;
  1291                           
  1292                           ;IAP_FW.C: 270: EEADRL = iap_addr>>0;
  1293                           
  1294                           ;IAP_FW.C: 271: EEDATH = iap_databuf[i+3];
  1295                           
  1296                           ;IAP_FW.C: 272: EEDATL = iap_databuf[i+4];
  1297  0153  2269  3180         	fcall	PL2	;call to abstracted procedure
  1298                           
  1299                           ;IAP_FW.C: 273: iap_mem_prog();
  1300  0155  21E2  3180         	fcall	_iap_mem_prog
  1301                           
  1302                           ;IAP_FW.C: 274: iap_addr++;
  1303  0157  2283  3180         	fcall	PL6	;call to abstracted procedure
  1304  0159  1803               	btfsc	3,0
  1305  015A  296B               	goto	i1l6171
  1306  015B  2953               	goto	i1l6133
  1307  015C                     i1l6147:	
  1308                           
  1309                           ;IAP_FW.C: 277: else
  1310                           ;IAP_FW.C: 278: {
  1311                           ;IAP_FW.C: 279: EEADRH = iap_addr>>8;
  1312  015C  087C               	movf	user_isr@iap_addr+1,w
  1313  015D  0092               	movwf	18	;volatile
  1314                           
  1315                           ;IAP_FW.C: 280: EEADRL = iap_addr>>0;
  1316  015E  087B               	movf	user_isr@iap_addr,w
  1317  015F  0091               	movwf	17	;volatile
  1318                           
  1319                           ;IAP_FW.C: 281: iap_mem_erase();
  1320  0160  225A  3180         	fcall	_iap_mem_erase
  1321                           
  1322                           ;IAP_FW.C: 282: for(i=0;i<64;i=i+2)
  1323  0162  01FD               	clrf	user_isr@i
  1324  0163                     i1l6157:	
  1325                           
  1326                           ;IAP_FW.C: 283: {
  1327                           ;IAP_FW.C: 284: EEADRH = iap_addr>>8;
  1328                           
  1329                           ;IAP_FW.C: 285: EEADRL = iap_addr>>0;
  1330                           
  1331                           ;IAP_FW.C: 286: EEDATH = iap_databuf[i+3];
  1332                           
  1333                           ;IAP_FW.C: 287: EEDATL = iap_databuf[i+4];
  1334  0163  2269  3180         	fcall	PL2	;call to abstracted procedure
  1335                           
  1336                           ;IAP_FW.C: 288: iap_mem_prog();
  1337  0165  21E2  3180         	fcall	_iap_mem_prog
  1338                           
  1339                           ;IAP_FW.C: 289: iap_addr++;
  1340  0167  2283  3180         	fcall	PL6	;call to abstracted procedure
  1341  0169  1C03               	skipc
  1342  016A  2963               	goto	i1l6157
  1343  016B                     i1l6171:	
  1344                           
  1345                           ;IAP_FW.C: 290: }
  1346                           ;IAP_FW.C: 291: }
  1347                           ;IAP_FW.C: 292: iap_addr = iap_databuf[1];
  1348                           
  1349                           ;IAP_FW.C: 293: iap_addr = ((iap_addr<<8)+iap_databuf[2]);
  1350  016B  2279  3180         	fcall	PL4	;call to abstracted procedure
  1351                           
  1352                           ;IAP_FW.C: 294: if(data_check_erase_or_not(iap_addr,1))
  1353  016D  00F3               	movwf	data_check_erase_or_not@addr+1
  1354  016E  087B               	movf	user_isr@iap_addr,w
  1355  016F  00F2               	movwf	data_check_erase_or_not@addr
  1356  0170  01F4               	clrf	data_check_erase_or_not@mode
  1357  0171  0AF4               	incf	data_check_erase_or_not@mode,f
  1358  0172  21AA  3180         	fcall	_data_check_erase_or_not
  1359  0174  3A00               	xorlw	0
  1360  0175  1903               	skipnz
  1361  0176  2982               	goto	i1l6179
  1362  0177                     L3:	
  1363                           
  1364                           ;IAP_FW.C: 295: {
  1365                           ;IAP_FW.C: 296: if(iap_addr == (0x1000-0x20))
  1366  0177  30E0               	movlw	224
  1367  0178  067B               	xorwf	user_isr@iap_addr,w
  1368  0179  300F               	movlw	15
  1369  017A  1903               	skipnz
  1370  017B  067C               	xorwf	user_isr@iap_addr+1,w
  1371  017C  1D03               	btfss	3,2
  1372  017D  2980               	goto	i1l1721
  1373                           
  1374                           ;IAP_FW.C: 297: {
  1375                           ;IAP_FW.C: 298: Eeprom_Write_Crc();
  1376  017E  20BF  3180         	fcall	_Eeprom_Write_Crc
  1377  0180                     i1l1721:	
  1378                           
  1379                           ;IAP_FW.C: 299: }
  1380                           ;IAP_FW.C: 300: iap_usart_send(0X00);
  1381  0180  3000               	movlw	0
  1382  0181  290D               	goto	L2
  1383  0182                     i1l6179:	
  1384                           ;IAP_FW.C: 301: }
  1385                           
  1386                           
  1387                           ;IAP_FW.C: 302: else
  1388                           ;IAP_FW.C: 303: {
  1389                           ;IAP_FW.C: 304: iap_usart_send(0x44);
  1390  0182  3044               	movlw	68
  1391  0183  290D               	goto	L2
  1392  0184                     i1l6181:	
  1393                           
  1394                           ;IAP_FW.C: 309: iap_usart_send(0X00);
  1395  0184  3000               	movlw	0
  1396  0185  21DB  3180         	fcall	_iap_usart_send
  1397                           
  1398                           ;IAP_FW.C: 310: iap_wait_tx_idle();
  1399  0187  2204  3180         	fcall	_iap_wait_tx_idle
  1400  0189  0001               	reset	;# 
  1401                           
  1402                           ;IAP_FW.C: 312: break;
  1403  018A  2991               	goto	i1l6085
  1404  018B                     i1l6183:	
  1405                           
  1406                           ;IAP_FW.C: 315: iap_usart_send(0x44);
  1407  018B  3044               	movlw	68
  1408  018C  21DB  3180         	fcall	_iap_usart_send
  1409                           
  1410                           ;IAP_FW.C: 316: iap_wait_tx_idle();
  1411  018E  2204  3180         	fcall	_iap_wait_tx_idle
  1412  0190  0001               	reset	;# 
  1413  0191                     i1l6085:	
  1414                           ;IAP_FW.C: 318: break;
  1415                           
  1416                           
  1417                           ;IAP_FW.C: 227: {
  1418                           ;IAP_FW.C: 229: iap_databuf[0]=iap_usart_rec();
  1419  0191  21E9  3180         	fcall	_iap_usart_rec
  1420  0193  0021               	movlb	1	; select bank1
  1421  0194  00A0               	movwf	_iap_databuf^(0+128)
  1422  0195  0064               	clrwdt	;# 
  1423  0196  0021               	movlb	1	; select bank1
  1424  0197  0820               	movf	_iap_databuf^(0+128),w
  1425                           
  1426                           ; Switch size 1, requested type "space"
  1427                           ; Number of cases is 2, Range of values is 5 to 6
  1428                           ; switch strategies available:
  1429                           ; Name         Instructions Cycles
  1430                           ; simple_byte            7     4 (average)
  1431                           ; direct_byte           13     9 (fixed)
  1432                           ; jumptable            263     9 (fixed)
  1433                           ;	Chosen strategy is simple_byte
  1434  0198  3A05               	xorlw	5	; case 5
  1435  0199  1903               	skipnz
  1436  019A  2910               	goto	i1l1701
  1437  019B  3A03               	xorlw	3	; case 6
  1438  019C  1903               	skipnz
  1439  019D  2984               	goto	i1l6181
  1440  019E  298B               	goto	i1l6183
  1441  019F                     i1l1698:	
  1442                           
  1443                           ;IAP_FW.C: 320: }
  1444                           ;IAP_FW.C: 321: }
  1445                           ;IAP_FW.C: 323: if(iap_err_flag==1)
  1446  019F  1CA0               	btfss	32,1
  1447  01A0  0008               	return
  1448                           
  1449                           ;IAP_FW.C: 324: {
  1450                           ;IAP_FW.C: 325: count=0;
  1451  01A1  01A1               	clrf	33
  1452                           
  1453                           ;IAP_FW.C: 326: iap_err_flag=0;
  1454  01A2  10A0               	bcf	32,1
  1455                           
  1456                           ;IAP_FW.C: 327: if(read_flag !=1)
  1457  01A3  1820               	btfsc	32,0
  1458  01A4  0008               	return
  1459                           
  1460                           ;IAP_FW.C: 328: {
  1461                           ;IAP_FW.C: 329: uart_rxnef=1;
  1462  01A5  15A0               	bsf	32,3
  1463  01A6  2C04               	goto	1028	;# 
  1464  01A7  0008               	return
  1465  01A8                     i1l1676:	
  1466  01A8  2C04               	goto	1028	;# 
  1467  01A9  0008               	return
  1468  01AA                     __end_of_user_isr:	
  1469  01AA                     __ptext14:	
  1470 ;; *************** function _data_check_erase_or_not *****************
  1471 ;; Defined at:
  1472 ;;		line 107 in file "IAP_FW.C"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  addr            2    0[COMMON] unsigned int 
  1475 ;;  mode            1    2[COMMON] unsigned char 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  i               1    6[COMMON] unsigned char 
  1478 ;;  k               1    5[COMMON] unsigned char 
  1479 ;;  j               1    4[COMMON] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      unsigned char 
  1482 ;; Registers used:
  1483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 1D/1
  1486 ;;		On exit  : 1F/3
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1489 ;;      Params:         3       0       0       0       0       0       0       0
  1490 ;;      Locals:         3       0       0       0       0       0       0       0
  1491 ;;      Temps:          1       0       0       0       0       0       0       0
  1492 ;;      Totals:         7       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        7 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    1
  1496 ;; This function calls:
  1497 ;;		i1_iap_mem_rd
  1498 ;; This function is called by:
  1499 ;;		_user_isr
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _data_check_erase_or_not
  1505  01AA                     _data_check_erase_or_not:	
  1506                           
  1507                           ;IAP_FW.C: 109: unsigned char i ,j,k;
  1508                           ;IAP_FW.C: 110: for(i=0;i<32;i++)
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _data_check_erase_or_not: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  1512  01AA  01F8               	clrf	data_check_erase_or_not@i
  1513  01AB                     i1l5933:	
  1514                           
  1515                           ;IAP_FW.C: 111: {
  1516                           ;IAP_FW.C: 112: EEADRH = addr>>8;
  1517  01AB  0873               	movf	data_check_erase_or_not@addr+1,w
  1518  01AC  0023               	movlb	3	; select bank3
  1519  01AD  0092               	movwf	18	;volatile
  1520                           
  1521                           ;IAP_FW.C: 113: EEADRL = addr>>0;
  1522  01AE  0872               	movf	data_check_erase_or_not@addr,w
  1523  01AF  0091               	movwf	17	;volatile
  1524                           
  1525                           ;IAP_FW.C: 114: j = iap_databuf[i*2+3];
  1526  01B0  3578               	lslf	data_check_erase_or_not@i,w
  1527  01B1  3EA3               	addlw	(low ((_iap_databuf| 0+3)))& (0+255)
  1528  01B2  0086               	movwf	6
  1529  01B3  0187               	clrf	7
  1530  01B4  0801               	movf	1,w
  1531  01B5  00F6               	movwf	data_check_erase_or_not@j
  1532                           
  1533                           ;IAP_FW.C: 115: k = iap_databuf[i*2+4];
  1534  01B6  3578               	lslf	data_check_erase_or_not@i,w
  1535  01B7  3EA4               	addlw	(low ((_iap_databuf| 0+4)))& (0+255)
  1536  01B8  0086               	movwf	6
  1537  01B9  0801               	movf	1,w
  1538  01BA  00F7               	movwf	data_check_erase_or_not@k
  1539                           
  1540                           ;IAP_FW.C: 116: iap_mem_rd();
  1541  01BB  2215  3180         	fcall	i1_iap_mem_rd
  1542                           
  1543                           ;IAP_FW.C: 117: if(mode == 0)
  1544  01BD  0874               	movf	data_check_erase_or_not@mode,w
  1545  01BE  1D03               	btfss	3,2
  1546  01BF  29CA               	goto	i1l5951
  1547                           
  1548                           ;IAP_FW.C: 118: {
  1549                           ;IAP_FW.C: 119: if(((EEDATH & j) != j) || ((EEDATL & k) != k))
  1550  01C0  0876               	movf	data_check_erase_or_not@j,w
  1551  01C1  0514               	andwf	20,w	;volatile
  1552  01C2  00F5               	movwf	??_data_check_erase_or_not
  1553  01C3  0676               	xorwf	data_check_erase_or_not@j,w
  1554  01C4  1D03               	skipz
  1555  01C5  3400               	retlw	0
  1556  01C6  0877               	movf	data_check_erase_or_not@k,w
  1557  01C7  0513               	andwf	19,w	;volatile
  1558  01C8  00F5               	movwf	??_data_check_erase_or_not
  1559  01C9  29CF               	goto	L4
  1560  01CA                     i1l5951:	
  1561                           
  1562                           ;IAP_FW.C: 124: else
  1563                           ;IAP_FW.C: 125: {
  1564                           ;IAP_FW.C: 126: if((EEDATH != j) || (EEDATL != k))
  1565  01CA  0814               	movf	20,w	;volatile
  1566  01CB  0676               	xorwf	data_check_erase_or_not@j,w
  1567  01CC  1D03               	skipz
  1568  01CD  3400               	retlw	0
  1569  01CE  0813               	movf	19,w	;volatile
  1570  01CF                     L4:	
  1571  01CF  0677               	xorwf	data_check_erase_or_not@k,w
  1572  01D0  1D03               	btfss	3,2
  1573                           
  1574                           ;IAP_FW.C: 120: {
  1575                           ;IAP_FW.C: 121: return 0;
  1576  01D1  3400               	retlw	0
  1577                           
  1578                           ;IAP_FW.C: 129: }
  1579                           ;IAP_FW.C: 130: }
  1580                           ;IAP_FW.C: 131: addr++;
  1581  01D2  0AF2               	incf	data_check_erase_or_not@addr,f
  1582  01D3  1903               	skipnz
  1583  01D4  0AF3               	incf	data_check_erase_or_not@addr+1,f
  1584  01D5  3020               	movlw	32
  1585  01D6  0AF8               	incf	data_check_erase_or_not@i,f
  1586  01D7  0278               	subwf	data_check_erase_or_not@i,w
  1587  01D8  1803               	btfsc	3,0
  1588                           
  1589                           ;IAP_FW.C: 132: }
  1590                           ;IAP_FW.C: 133: return 1;
  1591  01D9  3401               	retlw	1
  1592  01DA  29AB               	goto	i1l5933
  1593  01DB                     __end_of_data_check_erase_or_not:	
  1594  01DB                     __ptext10:	
  1595 ;; *************** function _iap_usart_send *****************
  1596 ;; Defined at:
  1597 ;;		line 40 in file "USART_DRV.C"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  data            1    wreg     unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  data            1    0[COMMON] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/3
  1608 ;;		On exit  : 1F/9
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1611 ;;      Params:         0       0       0       0       0       0       0       0
  1612 ;;      Locals:         1       0       0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0
  1614 ;;      Totals:         1       0       0       0       0       0       0       0
  1615 ;;Total ram usage:        1 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_user_isr
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _iap_usart_send
  1626  01DB                     _iap_usart_send:	
  1627                           
  1628                           ;incstack = 0
  1629                           ; Regs used in _iap_usart_send: [wreg]
  1630                           ;iap_usart_send@data stored from wreg
  1631  01DB  00F2               	movwf	iap_usart_send@data
  1632  01DC                     i1l4962:	
  1633                           ;USART_DRV.C: 42: while(!(URLSR & (0x1<<5 )));
  1634                           
  1635  01DC  0029               	movlb	9	; select bank9
  1636  01DD  1E92               	btfss	18,5	;volatile
  1637  01DE  29DC               	goto	i1l4962
  1638                           
  1639                           ;USART_DRV.C: 43: URDATAL = data;
  1640  01DF  0872               	movf	iap_usart_send@data,w
  1641  01E0  008C               	movwf	12	;volatile
  1642  01E1  0008               	return
  1643  01E2                     __end_of_iap_usart_send:	
  1644  01E2                     __ptext19:	
  1645 ;; *************** function _iap_mem_prog *****************
  1646 ;; Defined at:
  1647 ;;		line 26 in file "MEM_DRV.C"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 1F/3
  1658 ;;		On exit  : 1F/3
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1661 ;;      Params:         0       0       0       0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0
  1664 ;;      Totals:         0       0       0       0       0       0       0       0
  1665 ;;Total ram usage:        0 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    1
  1668 ;; This function calls:
  1669 ;;		_Unlock_Flash
  1670 ;; This function is called by:
  1671 ;;		_Eeprom_Write_Crc
  1672 ;;		_user_isr
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _iap_mem_prog
  1678  01E2                     _iap_mem_prog:	
  1679  01E2                     i1l5839:	
  1680                           ;incstack = 0
  1681                           ; Regs used in _iap_mem_prog: [status,2+status,0+pclath+cstack]
  1682                           
  1683                           
  1684                           ;MEM_DRV.C: 28: EECON1 &=~(0x1<<4 );
  1685  01E2  1215               	bcf	21,4	;volsfr
  1686                           
  1687                           ;MEM_DRV.C: 29: Unlock_Flash();
  1688  01E3  220B  3180         	fcall	_Unlock_Flash
  1689  01E5                     i1l3345:	
  1690                           ;MEM_DRV.C: 30: while(EECON1 & (0x1<<1 ));
  1691                           
  1692  01E5  0023               	movlb	3	; select bank3
  1693  01E6  1895               	btfsc	21,1	;volsfr
  1694  01E7  29E5               	goto	i1l3345
  1695  01E8  0008               	return
  1696  01E9                     __end_of_iap_mem_prog:	
  1697  01E9                     __ptext11:	
  1698 ;; *************** function _iap_usart_rec *****************
  1699 ;; Defined at:
  1700 ;;		line 45 in file "USART_DRV.C"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  a               2    1[COMMON] unsigned int 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      unsigned char 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, pclath, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/9
  1711 ;;		On exit  : 1F/9
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1714 ;;      Params:         0       0       0       0       0       0       0       0
  1715 ;;      Locals:         2       0       0       0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0
  1717 ;;      Totals:         2       0       0       0       0       0       0       0
  1718 ;;Total ram usage:        2 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    1
  1721 ;; This function calls:
  1722 ;;		_DelayUs
  1723 ;; This function is called by:
  1724 ;;		_user_isr
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _iap_usart_rec
  1730  01E9                     _iap_usart_rec:	
  1731                           
  1732                           ;USART_DRV.C: 47: unsigned int a;
  1733                           ;USART_DRV.C: 48: for(a=0;a<47200;a++)
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _iap_usart_rec: [wreg+status,2+status,0+pclath+cstack]
  1737  01E9  01F3               	clrf	iap_usart_rec@a
  1738  01EA  01F4               	clrf	iap_usart_rec@a+1
  1739  01EB                     i1l5977:	
  1740                           
  1741                           ;USART_DRV.C: 49: {
  1742                           ;USART_DRV.C: 50: DelayUs();
  1743  01EB  2261  3180         	fcall	_DelayUs
  1744                           
  1745                           ;USART_DRV.C: 51: if(((0x1 << 0 ) & URLSR))
  1746  01ED  0029               	movlb	9	; select bank9
  1747  01EE  1C12               	btfss	18,0	;volatile
  1748  01EF  29F9               	goto	i1l5995
  1749                           
  1750                           ;USART_DRV.C: 52: {
  1751                           ;USART_DRV.C: 53: if((URLSR & (0x1<<2 )) || (URLSR & (0x1<<3 )))
  1752  01F0  1912               	btfsc	18,2	;volatile
  1753  01F1  29F4               	goto	i1l5985
  1754  01F2  1D92               	btfss	18,3	;volatile
  1755  01F3  29F7               	goto	i1l5991
  1756  01F4                     i1l5985:	
  1757                           
  1758                           ;USART_DRV.C: 54: {
  1759                           ;USART_DRV.C: 55: URLSR = ~((0x1<<2 )|(0x1<<3 ));
  1760  01F4  30F3               	movlw	243
  1761  01F5  0092               	movwf	18	;volatile
  1762                           
  1763                           ;USART_DRV.C: 56: return 0xff;
  1764  01F6  34FF               	retlw	255
  1765  01F7                     i1l5991:	
  1766                           
  1767                           ;USART_DRV.C: 58: else
  1768                           ;USART_DRV.C: 59: {
  1769                           ;USART_DRV.C: 60: return URDATAL;
  1770  01F7  080C               	movf	12,w	;volatile
  1771  01F8  0008               	return
  1772  01F9                     i1l5995:	
  1773  01F9  0AF3               	incf	iap_usart_rec@a,f
  1774  01FA  1903               	skipnz
  1775  01FB  0AF4               	incf	iap_usart_rec@a+1,f
  1776  01FC  30B8               	movlw	184
  1777  01FD  0274               	subwf	iap_usart_rec@a+1,w
  1778  01FE  3060               	movlw	96
  1779  01FF  1903               	skipnz
  1780  0200  0273               	subwf	iap_usart_rec@a,w
  1781  0201  1803               	btfsc	3,0
  1782                           
  1783                           ;USART_DRV.C: 61: }
  1784                           ;USART_DRV.C: 62: }
  1785                           ;USART_DRV.C: 63: }
  1786                           ;USART_DRV.C: 64: return 0xff;
  1787  0202  34FF               	retlw	255
  1788  0203  29EB               	goto	i1l5977
  1789  0204                     __end_of_iap_usart_rec:	
  1790  0204                     __ptext9:	
  1791 ;; *************** function _iap_wait_tx_idle *****************
  1792 ;; Defined at:
  1793 ;;		line 67 in file "USART_DRV.C"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2
  1802 ;; Tracked objects:
  1803 ;;		On entry : 1F/9
  1804 ;;		On exit  : 1F/9
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1807 ;;      Params:         0       0       0       0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_user_isr
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           
  1821                           ;psect for function _iap_wait_tx_idle
  1822  0204                     _iap_wait_tx_idle:	
  1823  0204                     i1l6009:	
  1824                           ;USART_DRV.C: 69: while(!(TCF & (0x1<<0 )));
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _iap_wait_tx_idle: [wreg+status,2]
  1828                           
  1829  0204  3000               	movlw	0
  1830  0205  181C               	btfsc	28,0	;volatile
  1831  0206  3001               	movlw	1
  1832  0207  3901               	andlw	1
  1833  0208  1D03               	btfss	3,2
  1834  0209  0008               	return
  1835  020A  2A04               	goto	i1l6009
  1836  020B                     __end_of_iap_wait_tx_idle:	
  1837  020B                     __ptext20:	
  1838 ;; *************** function _Unlock_Flash *****************
  1839 ;; Defined at:
  1840 ;;		line 3 in file "MEM_DRV.C"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		None
  1849 ;; Tracked objects:
  1850 ;;		On entry : 1F/3
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1854 ;;      Params:         0       0       0       0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0
  1857 ;;      Totals:         0       0       0       0       0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_iap_mem_erase
  1864 ;;		_iap_mem_prog
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _Unlock_Flash
  1870  020B                     _Unlock_Flash:	
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _Unlock_Flash: []
  1874  020B  3003               	movlw	3	;# 
  1875  020C  0088               	movwf	8	;# 
  1876  020D  3055               	movlw	85	;# 
  1877  020E  0096               	movwf	22	;# 
  1878  020F  30AA               	movlw	170	;# 
  1879  0210  0096               	movwf	22	;# 
  1880  0211  1495               	bsf	21,1	;# 
  1881  0212  0000               	nop	;# 
  1882  0213  0000               	nop	;# 
  1883  0214  0008               	return
  1884  0215                     __end_of_Unlock_Flash:	
  1885  007E                     btemp	set	126	;btemp
  1886  007E                     int$flags	set	126
  1887  007E                     wtemp0	set	126
  1888  0215                     __ptext17:	
  1889 ;; *************** function i1_iap_mem_rd *****************
  1890 ;; Defined at:
  1891 ;;		line 33 in file "MEM_DRV.C"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		None
  1900 ;; Tracked objects:
  1901 ;;		On entry : 1F/3
  1902 ;;		On exit  : 1F/3
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1905 ;;      Params:         0       0       0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_data_check_erase_or_not
  1915 ;;		i1_All_Page_Read_CRC
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function i1_iap_mem_rd
  1921  0215                     i1_iap_mem_rd:	
  1922                           
  1923                           ;MEM_DRV.C: 35: EECON1 |=(0x1<<0 );
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in i1_iap_mem_rd: []
  1927  0215  1415               	bsf	21,0	;volsfr
  1928  0216  0000               	nop	;# 
  1929  0217                     i1l3351:	
  1930                           ;MEM_DRV.C: 37: while(EECON1 & (0x1<<0 ));
  1931                           
  1932  0217  0023               	movlb	3	; select bank3
  1933  0218  1815               	btfsc	21,0	;volsfr
  1934  0219  2A17               	goto	i1l3351
  1935  021A  0008               	return
  1936  021B                     __end_ofi1_iap_mem_rd:	
  1937  021B                     __ptext16:	
  1938 ;; *************** function i1_All_Page_Read_CRC *****************
  1939 ;; Defined at:
  1940 ;;		line 59 in file "IAP_FW.C"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  All_Page_Rea    2    6[COMMON] unsigned int 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 1F/3
  1951 ;;		On exit  : 1F/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1954 ;;      Params:         0       0       0       0       0       0       0       0
  1955 ;;      Locals:         2       0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0
  1957 ;;      Totals:         2       0       0       0       0       0       0       0
  1958 ;;Total ram usage:        2 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    1
  1961 ;; This function calls:
  1962 ;;		i1_CRC16_CCITT
  1963 ;;		i1_iap_mem_rd
  1964 ;; This function is called by:
  1965 ;;		_Eeprom_Write_Crc
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function i1_All_Page_Read_CRC
  1971  021B                     i1_All_Page_Read_CRC:	
  1972                           
  1973                           ;IAP_FW.C: 61: unsigned int iap_addr;
  1974                           ;IAP_FW.C: 62: CRC_16 = 0;
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in i1_All_Page_Read_CRC: [wreg+status,2+status,0+pclath+cstack]
  1978  021B  0020               	movlb	0	; select bank0
  1979                           
  1980                           ;IAP_FW.C: 63: EECON1 = (0x1<<7 )|(0X1<<2 );
  1981  021C  2291  3180         	fcall	PL10	;call to abstracted procedure
  1982  021E  0095               	movwf	21	;volsfr
  1983                           
  1984                           ;IAP_FW.C: 64: for(iap_addr=0X400;iap_addr<0x1000;iap_addr++)
  1985  021F  3004               	movlw	4
  1986  0220  01F8               	clrf	i1All_Page_Read_CRC@iap_addr
  1987  0221  00F9               	movwf	i1All_Page_Read_CRC@iap_addr+1
  1988  0222                     i1l5863:	
  1989                           
  1990                           ;IAP_FW.C: 65: {
  1991                           ;IAP_FW.C: 66: EEADRH = iap_addr>>8;
  1992  0222  0879               	movf	i1All_Page_Read_CRC@iap_addr+1,w
  1993  0223  0023               	movlb	3	; select bank3
  1994  0224  0092               	movwf	18	;volatile
  1995                           
  1996                           ;IAP_FW.C: 67: EEADRL = iap_addr>>0;
  1997  0225  0878               	movf	i1All_Page_Read_CRC@iap_addr,w
  1998  0226  0091               	movwf	17	;volatile
  1999                           
  2000                           ;IAP_FW.C: 68: iap_mem_rd();
  2001  0227  2215  3180         	fcall	i1_iap_mem_rd
  2002                           
  2003                           ;IAP_FW.C: 69: CRC16_CCITT(EEDATL);
  2004  0229  0813               	movf	19,w	;volatile
  2005  022A  223B  3180         	fcall	i1_CRC16_CCITT
  2006                           
  2007                           ;IAP_FW.C: 70: CRC16_CCITT(EEDATH);
  2008  022C  0023               	movlb	3	; select bank3
  2009  022D  0814               	movf	20,w	;volatile
  2010  022E  223B  3180         	fcall	i1_CRC16_CCITT
  2011  0230  0AF8               	incf	i1All_Page_Read_CRC@iap_addr,f
  2012  0231  1903               	skipnz
  2013  0232  0AF9               	incf	i1All_Page_Read_CRC@iap_addr+1,f
  2014  0233  3010               	movlw	16
  2015  0234  0279               	subwf	i1All_Page_Read_CRC@iap_addr+1,w
  2016  0235  3000               	movlw	0
  2017  0236  1903               	skipnz
  2018  0237  0278               	subwf	i1All_Page_Read_CRC@iap_addr,w
  2019  0238  1803               	btfsc	3,0
  2020  0239  0008               	return
  2021  023A  2A22               	goto	i1l5863
  2022  023B                     __end_ofi1_All_Page_Read_CRC:	
  2023  023B                     __ptext18:	
  2024 ;; *************** function i1_CRC16_CCITT *****************
  2025 ;; Defined at:
  2026 ;;		line 43 in file "IAP_FW.C"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  data            1    wreg     unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  data            1    4[COMMON] unsigned char 
  2031 ;;  CRC16_CCITT     1    5[COMMON] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 1F/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2041 ;;      Params:         0       0       0       0       0       0       0       0
  2042 ;;      Locals:         2       0       0       0       0       0       0       0
  2043 ;;      Temps:          4       0       0       0       0       0       0       0
  2044 ;;      Totals:         6       0       0       0       0       0       0       0
  2045 ;;Total ram usage:        6 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_user_isr
  2051 ;;		i1_All_Page_Read_CRC
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function i1_CRC16_CCITT
  2057  023B                     i1_CRC16_CCITT:	
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in i1_CRC16_CCITT: [wreg+status,2+status,0]
  2061                           ;i1CRC16_CCITT@data stored from wreg
  2062  023B  00F6               	movwf	i1CRC16_CCITT@data
  2063                           
  2064                           ;IAP_FW.C: 46: unsigned char i;
  2065                           ;IAP_FW.C: 48: CRC_16 ^= data;
  2066  023C  0020               	movlb	0	; select bank0
  2067  023D  06A3               	xorwf	35,f
  2068                           
  2069                           ;IAP_FW.C: 50: for(i = 0;i < 8;i++)
  2070  023E  01F7               	clrf	i1CRC16_CCITT@i
  2071  023F                     i1l1639:	
  2072                           
  2073                           ;IAP_FW.C: 51: {
  2074                           ;IAP_FW.C: 52: if(CRC_16 & 0x01)
  2075  023F  1C23               	btfss	35,0
  2076  0240  2A52               	goto	i1l5817
  2077                           
  2078                           ;IAP_FW.C: 53: CRC_16 = (CRC_16 >> 1) ^ 0x8408;
  2079  0241  0824               	movf	36,w
  2080  0242  00F3               	movwf	??i1_CRC16_CCITT+1
  2081  0243  0823               	movf	35,w
  2082  0244  00F2               	movwf	??i1_CRC16_CCITT
  2083  0245  3008               	movlw	8
  2084  0246  36F3               	lsrf	??i1_CRC16_CCITT+1,f
  2085  0247  0CF2               	rrf	??i1_CRC16_CCITT,f
  2086  0248  0672               	xorwf	??i1_CRC16_CCITT,w
  2087  0249  00F4               	movwf	??i1_CRC16_CCITT+2
  2088  024A  3084               	movlw	132
  2089  024B  0673               	xorwf	??i1_CRC16_CCITT+1,w
  2090  024C  00F5               	movwf	??i1_CRC16_CCITT+3
  2091  024D  0874               	movf	??i1_CRC16_CCITT+2,w
  2092  024E  00A3               	movwf	35
  2093  024F  0875               	movf	??i1_CRC16_CCITT+3,w
  2094  0250  00A4               	movwf	36
  2095  0251  2A54               	goto	i1l1642
  2096  0252                     i1l5817:	
  2097                           
  2098                           ;IAP_FW.C: 54: else
  2099                           ;IAP_FW.C: 55: CRC_16 = CRC_16 >> 1;
  2100  0252  36A4               	lsrf	36,f
  2101  0253  0CA3               	rrf	35,f
  2102  0254                     i1l1642:	
  2103  0254  3008               	movlw	8
  2104  0255  0AF7               	incf	i1CRC16_CCITT@i,f
  2105  0256  0277               	subwf	i1CRC16_CCITT@i,w
  2106  0257  1803               	btfsc	3,0
  2107  0258  0008               	return
  2108  0259  2A3F               	goto	i1l1639
  2109  025A                     __end_ofi1_CRC16_CCITT:	
  2110  025A                     __ptext13:	
  2111 ;; *************** function _iap_mem_erase *****************
  2112 ;; Defined at:
  2113 ;;		line 18 in file "MEM_DRV.C"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		status,2, status,0, pclath, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 1F/3
  2124 ;;		On exit  : 1F/3
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2127 ;;      Params:         0       0       0       0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    1
  2134 ;; This function calls:
  2135 ;;		_Unlock_Flash
  2136 ;; This function is called by:
  2137 ;;		_user_isr
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           
  2142                           ;psect for function _iap_mem_erase
  2143  025A                     _iap_mem_erase:	
  2144                           
  2145                           ;MEM_DRV.C: 20: EECON1 |=(0x1<<4 );
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _iap_mem_erase: [status,2+status,0+pclath+cstack]
  2149  025A  1615               	bsf	21,4	;volsfr
  2150                           
  2151                           ;MEM_DRV.C: 21: Unlock_Flash();
  2152  025B  220B  3180         	fcall	_Unlock_Flash
  2153  025D                     i1l3339:	
  2154                           ;MEM_DRV.C: 22: while(EECON1 & (0x1<<1 ));
  2155                           
  2156  025D  0023               	movlb	3	; select bank3
  2157  025E  1895               	btfsc	21,1	;volsfr
  2158  025F  2A5D               	goto	i1l3339
  2159  0260  0008               	return
  2160  0261                     __end_of_iap_mem_erase:	
  2161  0261                     __ptext12:	
  2162 ;; *************** function _DelayUs *****************
  2163 ;; Defined at:
  2164 ;;		line 32 in file "USART_DRV.C"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  a               1    0[COMMON] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/9
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2178 ;;      Params:         0       0       0       0       0       0       0       0
  2179 ;;      Locals:         1       0       0       0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0
  2181 ;;      Totals:         1       0       0       0       0       0       0       0
  2182 ;;Total ram usage:        1 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_iap_usart_rec
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function _DelayUs
  2193  0261                     _DelayUs:	
  2194                           
  2195                           ;USART_DRV.C: 34: unsigned char a;
  2196                           ;USART_DRV.C: 35: for(a=0;a<10;a++)
  2197                           
  2198                           ;incstack = 0
  2199                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
  2200  0261  01F2               	clrf	DelayUs@a
  2201  0262                     i1l4957:	
  2202                           
  2203                           ;USART_DRV.C: 36: {
  2204                           ;USART_DRV.C: 37: __nop();
  2205  0262  0000               	nop
  2206  0263  300A               	movlw	10
  2207  0264  0AF2               	incf	DelayUs@a,f
  2208  0265  0272               	subwf	DelayUs@a,w
  2209  0266  1803               	btfsc	3,0
  2210  0267  0008               	return
  2211  0268  2A62               	goto	i1l4957
  2212  0269                     __end_of_DelayUs:	
  2213  0269                     PL2:	
  2214  0269  087C               	movf	user_isr@iap_addr+1,w
  2215  026A  0092               	movwf	18	;volatile
  2216  026B  087B               	movf	user_isr@iap_addr,w
  2217  026C  0091               	movwf	17	;volatile
  2218  026D  087D               	movf	user_isr@i,w
  2219  026E  3EA3               	addlw	(low ((_iap_databuf| 0+3)))& (0+255)
  2220  026F  0086               	movwf	6
  2221  0270  0187               	clrf	7
  2222  0271  0801               	movf	1,w
  2223  0272  0094               	movwf	20	;volatile
  2224  0273  087D               	movf	user_isr@i,w
  2225  0274  3EA4               	addlw	(low ((_iap_databuf| 0+4)))& (0+255)
  2226  0275  0086               	movwf	6
  2227  0276  0801               	movf	1,w
  2228  0277  0093               	movwf	19	;volatile
  2229  0278  0008               	return
  2230  0279                     __end_ofPL2:	
  2231  0279                     PL4:	
  2232  0279  0021               	movlb	1	; select bank1
  2233  027A  0821               	movf	(_iap_databuf^(0+128)+1),w
  2234  027B  00FB               	movwf	user_isr@iap_addr
  2235  027C  01FC               	clrf	user_isr@iap_addr+1
  2236  027D  00FA               	movwf	??_user_isr
  2237  027E  0822               	movf	(_iap_databuf^(0+128)+2),w
  2238  027F  00FB               	movwf	user_isr@iap_addr
  2239  0280  087A               	movf	??_user_isr,w
  2240  0281  00FC               	movwf	user_isr@iap_addr+1
  2241  0282  0008               	return
  2242  0283                     __end_ofPL4:	
  2243  0283                     PL6:	
  2244  0283  0AFB               	incf	user_isr@iap_addr,f
  2245  0284  1903               	skipnz
  2246  0285  0AFC               	incf	user_isr@iap_addr+1,f
  2247  0286  3040               	movlw	64
  2248  0287  0AFD               	incf	user_isr@i,f
  2249  0288  0AFD               	incf	user_isr@i,f
  2250  0289  027D               	subwf	user_isr@i,w
  2251  028A  0008               	return
  2252  028B                     __end_ofPL6:	
  2253  028B                     PL8:	
  2254  028B  087C               	movf	user_isr@iap_addr+1,w
  2255  028C  00F3               	movwf	data_check_erase_or_not@addr+1
  2256  028D  087B               	movf	user_isr@iap_addr,w
  2257  028E  00F2               	movwf	data_check_erase_or_not@addr
  2258  028F  01F4               	clrf	data_check_erase_or_not@mode
  2259  0290  0008               	return
  2260  0291                     __end_ofPL8:	
  2261  0291                     PL10:	
  2262  0291  3084               	movlw	132
  2263  0292  01A3               	clrf	35
  2264  0293  01A4               	clrf	36
  2265  0294  0023               	movlb	3	; select bank3
  2266  0295  0008               	return
  2267  0296                     __end_ofPL10:	


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           12     12      12
    BANK0            75     10      10
    BANK1            80      0      69
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_user_isr
    _iap_usart_rec->_DelayUs
    _Eeprom_Write_Crc->i1_All_Page_Read_CRC
    i1_All_Page_Read_CRC->i1_CRC16_CCITT

Critical Paths under _main in BANK0

    _main->_Power_On_App_Check
    _Power_On_App_Check->_All_Page_Read_CRC
    _All_Page_Read_CRC->_CRC16_CCITT

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     230
                 _Power_On_App_Check
                     _iap_usart_init
 ---------------------------------------------------------------------------------
 (1) _iap_usart_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_On_App_Check                                   2     2      0     230
                                              8 BANK0      2     2      0
                  _All_Page_Read_CRC
                         _EEPROMread
 ---------------------------------------------------------------------------------
 (2) _EEPROMread                                           2     2      0      45
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _All_Page_Read_CRC                                    2     2      0     160
                                              6 BANK0      2     2      0
                        _CRC16_CCITT
                         _iap_mem_rd
 ---------------------------------------------------------------------------------
 (3) _iap_mem_rd                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC16_CCITT                                          6     6      0      68
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0    1523
                           _user_isr
 ---------------------------------------------------------------------------------
 (5) _user_isr                                             4     4      0    1523
                                              8 COMMON     4     4      0
                   _Eeprom_Write_Crc
            _data_check_erase_or_not
                      _iap_mem_erase
                       _iap_mem_prog
                      _iap_usart_rec
                     _iap_usart_send
                   _iap_wait_tx_idle
                      i1_CRC16_CCITT
 ---------------------------------------------------------------------------------
 (6) _iap_wait_tx_idle                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _iap_usart_send                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _iap_usart_rec                                        2     2      0      92
                                              1 COMMON     2     2      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (7) _DelayUs                                              1     1      0      46
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_erase                                        0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (6) _data_check_erase_or_not                              7     4      3     550
                                              0 COMMON     7     4      3
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write_Crc                                     0     0      0     158
                       _iap_mem_prog
                i1_All_Page_Read_CRC
 ---------------------------------------------------------------------------------
 (7) i1_All_Page_Read_CRC                                  2     2      0     158
                                              6 COMMON     2     2      0
                      i1_CRC16_CCITT
                       i1_iap_mem_rd
 ---------------------------------------------------------------------------------
 (7) i1_iap_mem_rd                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_CRC16_CCITT                                        6     6      0      68
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (6) _iap_mem_prog                                         0     0      0       0
                       _Unlock_Flash
 ---------------------------------------------------------------------------------
 (7) _Unlock_Flash                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Power_On_App_Check
     _All_Page_Read_CRC
       _CRC16_CCITT
       _iap_mem_rd
     _EEPROMread
   _iap_usart_init

 _ISR (ROOT)
   _user_isr
     _Eeprom_Write_Crc
       _iap_mem_prog
         _Unlock_Flash
       i1_All_Page_Read_CRC
         i1_CRC16_CCITT
         i1_iap_mem_rd
     _data_check_erase_or_not
       i1_iap_mem_rd
     _iap_mem_erase
       _Unlock_Flash
     _iap_mem_prog
       _Unlock_Flash
     _iap_usart_rec
       _DelayUs
     _iap_usart_send
     _iap_wait_tx_idle
     i1_CRC16_CCITT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            C      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               C      C       C       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5B       4        0.0%
BITBANK0            4B      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               4B      A       A       6       13.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      45       8       86.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5B      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Nov 16 11:46:24 2021

                               pc 0002                                PL2 0269                                PL4 0279  
                              PL6 0283                                PL8 028B          __end_of_Eeprom_Write_Crc 00D3  
                              _RD 0CA8            __size_ofi1_CRC16_CCITT 001F         __end_of_All_Page_Read_CRC 009A  
                             PL10 0291                               _FEF 2493                               _GIE 005F  
              _Power_On_App_Check 0048                               _TCF 24E0                               _ISR 0004  
                  ??_iap_mem_prog 0072                               u755 0061                               wreg 0009  
             ?_Power_On_App_Check 0072                              ?_ISR 0072                              l1642 00B3  
                            l1639 009E                              l3351 00BB                              l1736 0033  
                 ??_iap_mem_erase 0072                              l5833 00B1                              _AFP1 019F  
                            l5881 007F                              _CFGS 0CAE   __end_of_data_check_erase_or_not 01DB  
                            _PEIE 005E              __size_of_CRC16_CCITT 001F                              _flag 0020  
                            _main 002C                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              indf1 0001  
                            fsr1l 0006                              btemp 007E                              start 001F  
                 __end_of_DelayUs 0269               __size_of_EEPROMread 0013              ??_Power_On_App_Check 002D  
                           ??_ISR 007E             __size_ofi1_iap_mem_rd 0006                             ?_main 0072  
                           _EEPGD 0CAF                             _BSREG 0008                             _CRC_H 0024  
                           _CRC_L 0023      __size_ofi1_All_Page_Read_CRC 0020                             _PCKEN 009A  
                           _URDLL 0494                             _TRISB 008D                             _RXNEF 2490  
                           _URLCR 048F                             _URMCR 0491                             _URLSR 0492  
                           _W_TMP 0070                 i1CRC16_CCITT@data 0076                             _count 0021  
                 ??_iap_usart_rec 0073                     i1_CRC16_CCITT 023B                             status 0003  
                           wtemp0 007E                      i1_iap_mem_rd 0215                   __initialization 0021  
                    __end_of_main 0035        __size_of_All_Page_Read_CRC 0023                            ??_main 002F  
                _iap_wait_tx_idle 0204                            i1S6253 0296                            _EEADRH 0192  
                          _EEADRL 0191                            _EEDATH 0194                            _EEDATL 0193  
                          _EECON1 0195                    ?i1_CRC16_CCITT 0072                            _CRC_16 0023  
                          i1l1701 0110                            i1l1721 0180                            i1l1642 0254  
                          i1l1639 023F                            i1l3351 0217                            i1l3345 01E5  
                          i1l1681 0103                            i1l3339 025D                            i1l1676 01A8  
                          i1l6103 0122                            i1l6009 0204                            i1l6041 00E2  
                          i1l1698 019F                            i1l6051 00E8                            i1l6043 00E4  
                          i1l6133 0153                            i1l6063 00EE                            i1l6055 00EA  
                          i1l6047 00E6                            i1l6039 00DE                            i1l6073 00F6  
                          i1l6171 016B                            i1l6147 015C                            i1l6091 0112  
                          i1l6067 00F0                            i1l6059 00EC                            i1l6181 0184  
                          i1l6157 0163                            i1l6085 0191                            i1l6183 018B  
                          i1l6179 0182                            i1l5817 0252                            i1l4962 01DC  
                          i1l5933 01AB                            i1l4957 0262                            i1l5839 01E2  
                          i1l5863 0222                            i1l5951 01CA                            i1l5991 01F7  
                          i1l5985 01F4                            i1l5977 01EB                            i1l5995 01F9  
                       ??_DelayUs 0072                            _OSCCON 0099                            _URRXNE 2470  
            __end_of_iap_mem_prog 01E9                    iap_usart_rec@a 0073                  ??_iap_usart_init 0025  
                ??_iap_usart_send 0072                      ??_EEPROMread 0025                  __end_of_user_isr 01AA  
         __end_of__initialization 0029                    __pcstackCOMMON 0072                __end_of_EEPROMread 0077  
               ?_Eeprom_Write_Crc 0072                        __end_ofPL2 0279                        __end_ofPL4 0283  
                      __end_ofPL6 028B                        __end_ofPL8 0291                ??_Eeprom_Write_Crc 007A  
                 ??i1_CRC16_CCITT 0072                        __pbssBANK1 00A0               i1_All_Page_Read_CRC 021B  
                      __pmaintext 002C          ?_data_check_erase_or_not 0072                        __pintentry 0004  
              iap_usart_send@data 0072              ?i1_All_Page_Read_CRC 0072                        _iap_mem_rd 00B9  
                         _BSR_TMP 0071                           _URDATAL 048C                     ??_CRC16_CCITT 0025  
           __size_of_iap_mem_prog 0007                           _DelayUs 0261             __end_of_iap_mem_erase 0261  
        __end_of_iap_wait_tx_idle 020B       __size_of_Power_On_App_Check 001C                  EEPROMread@EEAddr 0025  
                       ?_user_isr 0072                           __ptext0 0000                           __ptext1 0035  
                         __ptext2 0048                           __ptext3 0064                           __ptext4 0077  
                         __ptext5 00B9                           __ptext6 009A                           __ptext8 00D3  
                         __ptext9 0204             ??i1_All_Page_Read_CRC 0078          data_check_erase_or_not@i 0078  
        data_check_erase_or_not@j 0076          data_check_erase_or_not@k 0077                      __size_of_ISR 001B  
                    _iap_err_flag 0101                      _iap_mem_prog 01E2                      CRC16_CCITT@i 002A  
                         clrloop0 02A7              end_of_initialization 0029                  user_isr@iap_addr 007B  
           __end_of_iap_usart_rec 0204               __end_of_CRC16_CCITT 00B9                        ??_user_isr 007A  
                      _uart_rxnef 0103                       ?_iap_mem_rd 0072                     ?_Unlock_Flash 0072  
                 CRC16_CCITT@data 0029                    i1CRC16_CCITT@i 0077                       __end_ofPL10 0296  
             start_initialization 0021                       __end_of_ISR 001F                    ??_Unlock_Flash 0072  
                     _CRC16_CCITT 009A         __size_of_Eeprom_Write_Crc 0014               __size_of_iap_mem_rd 0006  
    Power_On_App_Check@CRC_Eeprom 002D  __size_of_data_check_erase_or_not 0031                         ___latbits 0001  
                   __pcstackBANK0 0025           __size_of_iap_usart_init 0013           __size_of_iap_usart_send 0007  
           __end_ofi1_CRC16_CCITT 025A                          ?_DelayUs 0072                     ?i1_iap_mem_rd 0072  
               ?_iap_wait_tx_idle 0072                ??_iap_wait_tx_idle 0072                         __pswtext1 0296  
               __size_of_user_isr 00D7                       _iap_databuf 00A0                         _read_flag 0100  
                     _iap_ok_flag 0102                       _iap_recdata 0022                    ??i1_iap_mem_rd 0072  
                        DelayUs@a 0072                         clear_ram0 02A6        __end_of_Power_On_App_Check 0064  
     __end_ofi1_All_Page_Read_CRC 023B              __end_of_Unlock_Flash 0215                      ??_iap_mem_rd 0025  
          __size_of_iap_mem_erase 0007                  _Eeprom_Write_Crc 00BF                  __size_of_DelayUs 0008  
              __end_of_iap_mem_rd 00BF            __size_of_iap_usart_rec 001B           _data_check_erase_or_not 01AA  
                      _EEPROMread 0064                    _iap_usart_init 0035                    _iap_usart_send 01DB  
                        __ptext10 01DB                          __ptext11 01E9                          __ptext20 020B  
                        __ptext12 0261                          __ptext13 025A                          __ptext14 01AA  
                        __ptext15 00BF                          __ptext16 021B                          __ptext17 0215  
                        __ptext18 023B                          __ptext19 01E2                      ?_CRC16_CCITT 0072  
                   __size_of_main 0009                     _iap_mem_erase 025A            EEPROMread@ReEEPROMread 0026  
                        int$flags 007E         All_Page_Read_CRC@iap_addr 002B                          _user_isr 00D3  
            __end_ofi1_iap_mem_rd 021B            __end_of_iap_usart_init 0048            __end_of_iap_usart_send 01E2  
     data_check_erase_or_not@addr 0072       data_check_erase_or_not@mode 0074                          intlevel1 0000  
                   _iap_usart_rec 01E9                    ?_iap_mem_erase 0072                         user_isr@i 007D  
           __size_of_Unlock_Flash 000A         ??_data_check_erase_or_not 0075                 _All_Page_Read_CRC 0077  
       __size_of_iap_wait_tx_idle 0007                   ?_iap_usart_init 0072                     ?_iap_mem_prog 0072  
                 ?_iap_usart_send 0072                       ?_EEPROMread 0072                ?_All_Page_Read_CRC 0072  
                    _Unlock_Flash 020B       i1All_Page_Read_CRC@iap_addr 0078                    ?_iap_usart_rec 0072  
             ??_All_Page_Read_CRC 002B  
